cscope 15 $HOME/cse506/lab               0000216611
	@boot/main.c

1 
	~<öc/x86.h
>

2 
	~<öc/ñf.h
>

32 
	#SECTSIZE
 512

	)

33 
	#ELFHDR
 ((
Elf
 *) 0x10000)

34 

	)

35 
ªad£˘
(*, 
uöt32_t
);

36 
ªad£g
(
uöt32_t
, uint32_t, uint32_t);

40 
	$boŸmaö
()

44 
Proghdr
 *
ph
, *
ïh
;

46 
mu…iboŸ_öfo
[];

48 
	`ªad£g
((
uöt32_t
Ë
ELFHDR
, 
SECTSIZE
*8, 0);

51 i‡(
ELFHDR
->
e_magic
 !
ELF_MAGIC
)

52 
bad
;

56 
ph
 = (
Proghdr
 *Ë((
uöt8_t
 *Ë
ELFHDR
 + ELFHDR->
e_phoff
);

57 
ïh
 = 
ph
 + 
ELFHDR
->
e_phnum
;

58 ; 
ph
 < 
ïh
;Öh++)

59 
	`ªad£g
(
ph
->
p_∑
,Öh->
p_memsz
,Öh->
p_off£t
);

64 
__asm
 
	`__vﬁ©ûe
("mov»%0, %%ebx": : "r" (
mu…iboŸ_öfo
));

65 (((*)()Ë((
uöt32_t
)(
ELFHDR
->
e_íåy
)))();

67 
bad
:

68 
	`outw
(0x8A00, 0x8A00);

69 
	`outw
(0x8A00, 0x8E00);

72 
	}
}

77 
	$ªad£g
(
uöt32_t
 
∑
, uöt32_à
cou¡
, uöt32_à
off£t
)

79 
uöt32_t
 
íd_∑
;

81 
íd_∑
 = 
∑
 + 
cou¡
;

82 
uöt32_t
 
‹goff
 = 
off£t
;

85 
∑
 &~(
SECTSIZE
 - 1);

88 
off£t
 = (off£à/ 
SECTSIZE
) + 1;

93 
∑
 < 
íd_∑
) {

94 
	`ªad£˘
((
uöt8_t
*Ë
∑
, 
off£t
);

95 
∑
 +
SECTSIZE
;

96 
off£t
++;

98 
	}
}

101 
	$waôdisk
()

104 (
	`öb
(0x1F7) & 0xC0) != 0x40)

106 
	}
}

109 
	$ªad£˘
(*
d°
, 
uöt32_t
 
off£t
)

112 
	`waôdisk
();

114 
	`outb
(0x1F2, 1);

115 
	`outb
(0x1F3, 
off£t
);

116 
	`outb
(0x1F4, 
off£t
 >> 8);

117 
	`outb
(0x1F5, 
off£t
 >> 16);

118 
	`outb
(0x1F6, (
off£t
 >> 24) | 0xE0);

119 
	`outb
(0x1F7, 0x20);

122 
	`waôdisk
();

125 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

126 
	}
}

	@ex1.c

3 
	~<°dio.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
x
 = 1;

8 
	`¥ötf
("Hñlÿx = %d\n", 
x
);

10 
	`__asm__
("movl %1,%%eax;"

13 :"˜"(
x
)

14 :"a"(
x
));

16 
	`¥ötf
("Hñlÿx = %dá·î in¸emíà\n", 
x
);

17 if(
x
 == 2)

19 
	`¥ötf
("OK\n");

23 
	`¥ötf
("Error\n");

25 
	}
}

	@inc/assert.h

3 #i‚de‡
JOS_INC_ASSERT_H


4 
	#JOS_INC_ASSERT_H


	)

6 
	~<öc/°dio.h
>

8 
_w¨n
(const *, , const *, ...);

9 
	$_∑nic
(c⁄° *, , c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

11 
	#w¨n
(...Ë
	`_w¨n
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

12 
	#∑nic
(...Ë
	`_∑nic
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

14 
	#as£π
(
x
) \

15 dÿ{ i‡(!(
x
)Ë
	`∑nic
("as£πi⁄ faûed: %s", #x); 
	}
} 0)

	)

18 
	#°©ic_as£π
(
x
ËxË0: (x):

	)

	@inc/elf.h

1 #i‚de‡
JOS_INC_ELF_H


2 
	#JOS_INC_ELF_H


	)

4 
	#ELF_MAGIC
 0x464C457FU

	)

6 
	sElf
 {

7 
uöt32_t
 
	me_magic
;

8 
uöt8_t
 
	me_ñf
[12];

9 
uöt16_t
 
	me_ty≥
;

10 
uöt16_t
 
	me_machöe
;

11 
uöt32_t
 
	me_vîsi⁄
;

12 
uöt64_t
 
	me_íåy
;

13 
uöt64_t
 
	me_phoff
;

14 
uöt64_t
 
	me_shoff
;

15 
uöt32_t
 
	me_Êags
;

16 
uöt16_t
 
	me_ehsize
;

17 
uöt16_t
 
	me_phítsize
;

18 
uöt16_t
 
	me_phnum
;

19 
uöt16_t
 
	me_shítsize
;

20 
uöt16_t
 
	me_shnum
;

21 
uöt16_t
 
	me_sh°∫dx
;

24 
	sProghdr
 {

25 
uöt32_t
 
	mp_ty≥
;

26 
uöt32_t
 
	mp_Êags
;

27 
uöt64_t
 
	mp_off£t
;

28 
uöt64_t
 
	mp_va
;

29 
uöt64_t
 
	mp_∑
;

30 
uöt64_t
 
	mp_fûesz
;

31 
uöt64_t
 
	mp_memsz
;

32 
uöt64_t
 
	mp_Æign
;

35 
	sSe˘hdr
 {

36 
uöt32_t
 
	msh_«me
;

37 
uöt32_t
 
	msh_ty≥
;

38 
uöt64_t
 
	msh_Êags
;

39 
uöt64_t
 
	msh_addr
;

40 
uöt64_t
 
	msh_off£t
;

41 
uöt64_t
 
	msh_size
;

42 
uöt32_t
 
	msh_lök
;

43 
uöt32_t
 
	msh_öfo
;

44 
uöt64_t
 
	msh_addølign
;

45 
uöt64_t
 
	msh_ítsize
;

50 
	#ELF_PROG_LOAD
 1

	)

53 
	#ELF_PROG_FLAG_EXEC
 1

	)

54 
	#ELF_PROG_FLAG_WRITE
 2

	)

55 
	#ELF_PROG_FLAG_READ
 4

	)

58 
	#ELF_SHT_NULL
 0

	)

59 
	#ELF_SHT_PROGBITS
 1

	)

60 
	#ELF_SHT_SYMTAB
 2

	)

61 
	#ELF_SHT_STRTAB
 3

	)

64 
	#ELF_SHN_UNDEF
 0

	)

	@inc/error.h

3 #i‚de‡
JOS_INC_ERROR_H


4 
	#JOS_INC_ERROR_H


	)

8 
	mE_UNSPECIFIED
 = 1,

9 
	mE_BAD_ENV
 = 2,

11 
	mE_INVAL
 = 3,

12 
	mE_NO_MEM
 = 4,

13 
	mE_NO_FREE_ENV
 = 5,

15 
	mE_FAULT
 = 6,

16 
	mE_NO_SYS
 = 7,

18 
	mMAXERROR


	@inc/kbdreg.h

1 #i‚de‡
JOS_KBDREG_H


2 
	#JOS_KBDREG_H


	)

5 
	#KEY_HOME
 0xE0

	)

6 
	#KEY_END
 0xE1

	)

7 
	#KEY_UP
 0xE2

	)

8 
	#KEY_DN
 0xE3

	)

9 
	#KEY_LF
 0xE4

	)

10 
	#KEY_RT
 0xE5

	)

11 
	#KEY_PGUP
 0xE6

	)

12 
	#KEY_PGDN
 0xE7

	)

13 
	#KEY_INS
 0xE8

	)

14 
	#KEY_DEL
 0xE9

	)

19 
	#KBSTATP
 0x64

	)

20 
	#KBS_DIB
 0x01

	)

21 
	#KBS_IBF
 0x02

	)

22 
	#KBS_WARM
 0x04

	)

23 
	#KBS_OCMD
 0x08

	)

24 
	#KBS_NOSEC
 0x10

	)

25 
	#KBS_TERR
 0x20

	)

26 
	#KBS_RERR
 0x40

	)

27 
	#KBS_PERR
 0x80

	)

29 
	#KBCMDP
 0x64

	)

30 
	#KBC_RAMREAD
 0x20

	)

31 
	#KBC_RAMWRITE
 0x60

	)

32 
	#KBC_AUXDISABLE
 0xa7

	)

33 
	#KBC_AUXENABLE
 0xa8

	)

34 
	#KBC_AUXTEST
 0xa9

	)

35 
	#KBC_KBDECHO
 0xd2

	)

36 
	#KBC_AUXECHO
 0xd3

	)

37 
	#KBC_AUXWRITE
 0xd4

	)

38 
	#KBC_SELFTEST
 0xØ

	)

39 
	#KBC_KBDTEST
 0xab

	)

40 
	#KBC_KBDDISABLE
 0xad

	)

41 
	#KBC_KBDENABLE
 0x´

	)

42 
	#KBC_PULSE0
 0x„

	)

43 
	#KBC_PULSE1
 0xfd

	)

44 
	#KBC_PULSE2
 0xfb

	)

45 
	#KBC_PULSE3
 0xf7

	)

47 
	#KBDATAP
 0x60

	)

48 
	#KBOUTP
 0x60

	)

50 
	#K_RDCMDBYTE
 0x20

	)

51 
	#K_LDCMDBYTE
 0x60

	)

53 
	#KC8_TRANS
 0x40

	)

54 
	#KC8_MDISABLE
 0x20

	)

55 
	#KC8_KDISABLE
 0x10

	)

56 
	#KC8_IGNSEC
 0x08

	)

57 
	#KC8_CPU
 0x04

	)

58 
	#KC8_MENABLE
 0x02

	)

59 
	#KC8_KENABLE
 0x01

	)

60 
	#CMDBYTE
 (
KC8_TRANS
|
KC8_CPU
|
KC8_MENABLE
|
KC8_KENABLE
)

	)

63 
	#KBC_RESET
 0xFF

	)

64 
	#KBC_RESEND
 0xFE

	)

65 
	#KBC_SETDEFAULT
 0xF6

	)

66 
	#KBC_DISABLE
 0xF5

	)

67 
	#KBC_ENABLE
 0xF4

	)

68 
	#KBC_TYPEMATIC
 0xF3

	)

69 
	#KBC_SETTABLE
 0xF0

	)

70 
	#KBC_MODEIND
 0xED

	)

71 
	#KBC_ECHO
 0xEE

	)

74 
	#KBR_EXTENDED
 0xE0

	)

75 
	#KBR_RESEND
 0xFE

	)

76 
	#KBR_ACK
 0xFA

	)

77 
	#KBR_OVERRUN
 0x00

	)

78 
	#KBR_FAILURE
 0xFD

	)

79 
	#KBR_BREAK
 0xF0

	)

80 
	#KBR_RSTDONE
 0xAA

	)

81 
	#KBR_ECHO
 0xEE

	)

	@inc/memlayout.h

1 #i‚de‡
JOS_INC_MEMLAYOUT_H


2 
	#JOS_INC_MEMLAYOUT_H


	)

4 #i‚de‡
__ASSEMBLER__


5 
	~<öc/ty≥s.h
>

6 
	~<öc/mmu.h
>

7 
	~<öc/queue.h
>

16 
	#GD_KT
 0x08

17 
	#GD_KD
 0x10

18 
	#GD_UT
 0x18

19 
	#GD_UD
 0x20

20 
	#GD_TSS0
 0x28

21 

	)

90 
	#KERNBASE
 0x8004000000

	)

95 
	#IOPHYSMEM
 0x0A0000

	)

96 
	#EXTPHYSMEM
 0x100000

	)

99 
	#KSTACKTOP
 
KERNBASE


	)

100 
	#KSTKSIZE
 (16*
PGSIZE
)

101 
	#KSTKGAP
 (8*
PGSIZE
)

102 

	)

104 
	#MMIOLIM
 (
KSTACKTOP
 - 
PTSIZE
)

	)

105 
	#MMIOBASE
 (
MMIOLIM
 - 
PTSIZE
)

	)

107 
	#ULIM
 (
MMIOBASE
)

	)

116 
	#UVPT
 0x10000000000

	)

118 
	#UPAGES
 (
ULIM
 - 25 * 
PTSIZE
)

	)

120 
	#UENVS
 (
UPAGES
 - 
PTSIZE
)

	)

127 
	#UTOP
 
UENVS


	)

130 
	#UXSTACKTOP
 0xef800000

	)

133 
	#USTACKTOP
 (
UXSTACKTOP
 - 2*
PGSIZE
)

	)

136 
	#UTEXT
 (4*
PTSIZE
)

	)

140 
	#UTEMP
 ((*Ë(()(2*
PTSIZE
)))

	)

143 
	#PFTEMP
 (
UTEMP
 + 
PTSIZE
 - 
PGSIZE
)

	)

145 
	#USTABDATA
 (
PTSIZE
)

	)

147 #i‚de‡
__ASSEMBLER__


149 
uöt64_t
 
	tpml4e_t
;

150 
uöt64_t
 
	tpd≥_t
;

151 
uöt64_t
 
	t±e_t
;

152 
uöt64_t
 
	tpde_t
;

	@inc/mmu.h

1 #i‚de‡
JOS_INC_MMU_H


2 
	#JOS_INC_MMU_H


	)

30 
	#PPN
(
∑
Ë(((
uöçå_t
Ë’a)Ë>> 
PTXSHIFT
)

	)

31 
	#VPN
(
œ
Ë
	`PPN
(la)

32 
	#PGNUM
(
œ
Ë
	`PPN
(la)

33 

	)

35 
	#PDX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PDXSHIFT
Ë& 0x1FF)

	)

36 
	#VPD
(
œ
Ë(((
uöçå_t
Ë÷a)Ë>> 
PDXSHIFT
)

37 
	#VPDPE
(
œ
Ë(((
uöçå_t
Ë÷a)Ë>> 
PDPESHIFT
)

	)

38 
	#VPML4E
(
œ
Ë(((
uöçå_t
Ë÷a)Ë>> 
PML4SHIFT
)

	)

40 
	#PML4
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PML4SHIFT
Ë& 0x1FF)

	)

43 
	#PTX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PTXSHIFT
Ë& 0x1FF)

	)

44 
	#PDPE
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PDPESHIFT
Ë& 0x1FF)

	)

48 
	#PGOFF
(
œ
Ë(((
uöçå_t
Ë÷a)Ë& 0xFFF)

	)

51 
	#PGADDR
(
m
,
p
,
d
, 
t
, 
o
Ë((*Ë((mË<< 
PML4SHIFT
| (pË<< 
PDPESHIFT
 | (dË<< 
PDXSHIFT
 | (tË<< 
PTXSHIFT
 | (o)))

	)

54 
	#NPMLENTRIES
 512

55 
	#NPDPENTRIES
 512

56 
	#NPDENTRIES
 512

	)

57 
	#NPTENTRIES
 512

	)

59 
	#PGSIZE
 4096

60 
	#PGSHIFT
 12

61 

	)

62 
	#PTSIZE
 (
PGSIZE
*
NPTENTRIES
)

63 
	#PTSHIFT
 21

64 

	)

65 
	#PTXSHIFT
 12

66 
	#PDXSHIFT
 21

67 
	#PDPESHIFT
 30

	)

68 
	#PML4SHIFT
 39

	)

71 
	#PTE_P
 0x001

72 
	#PTE_W
 0x002

73 
	#PTE_U
 0x004

74 
	#PTE_PWT
 0x008

75 
	#PTE_PCD
 0x010

76 
	#PTE_A
 0x020

77 
	#PTE_D
 0x040

78 
	#PTE_PS
 0x080

79 
	#PTE_MBZ
 0x180

80 

	)

83 
	#PTE_AVAIL
 0xE00

84 

	)

86 
	#PTE_SYSCALL
 (
PTE_AVAIL
 | 
PTE_P
 | 
PTE_W
 | 
PTE_U
)

	)

89 
	#PTE_USER
 (
PTE_AVAIL
 | 
PTE_P
 | 
PTE_W
 | 
PTE_U
)

	)

92 
	#PTE_ADDR
(
±e
Ë((
phyßddr_t
Ë’ãË& ~0xFFF)

	)

95 
	#CR0_PE
 0x00000001

96 
	#CR0_MP
 0x00000002

97 
	#CR0_EM
 0x00000004

98 
	#CR0_TS
 0x00000008

99 
	#CR0_ET
 0x00000010

100 
	#CR0_NE
 0x00000020

101 
	#CR0_WP
 0x00010000

102 
	#CR0_AM
 0x00040000

103 
	#CR0_NW
 0x20000000

104 
	#CR0_CD
 0x40000000

105 
	#CR0_PG
 0x80000000

106 

	)

107 
	#CR4_PCE
 0x00000100

108 
	#CR4_MCE
 0x00000040

109 
	#CR4_PSE
 0x00000010

110 
	#CR4_DE
 0x00000008

111 
	#CR4_TSD
 0x00000004

112 
	#CR4_PVI
 0x00000002

113 
	#CR4_VME
 0x00000001

114 

	)

116 
	#CR4_PAE
 0x00000020

	)

117 
	#EFER_MSR
 0xC0000080

	)

118 
	#EFER_LME
 8

	)

121 
	#FL_CF
 0x00000001

122 
	#FL_PF
 0x00000004

123 
	#FL_AF
 0x00000010

124 
	#FL_ZF
 0x00000040

125 
	#FL_SF
 0x00000080

126 
	#FL_TF
 0x00000100

127 
	#FL_IF
 0x00000200

128 
	#FL_DF
 0x00000400

129 
	#FL_OF
 0x00000800

130 
	#FL_IOPL_MASK
 0x00003000

131 
	#FL_IOPL_0
 0x00000000

132 
	#FL_IOPL_1
 0x00001000

133 
	#FL_IOPL_2
 0x00002000

134 
	#FL_IOPL_3
 0x00003000

135 
	#FL_NT
 0x00004000

136 
	#FL_RF
 0x00010000

137 
	#FL_VM
 0x00020000

138 
	#FL_AC
 0x00040000

139 
	#FL_VIF
 0x00080000

140 
	#FL_VIP
 0x00100000

141 
	#FL_ID
 0x00200000

142 

	)

144 
	#FEC_PR
 0x1

145 
	#FEC_WR
 0x2

146 
	#FEC_U
 0x4

147 

	)

155 #ifde‡
__ASSEMBLER__


160 
	#SEG_NULL
 \

161 .
w‹d
 0, 0; \

162 .
byã
 0, 0, 0, 0

	)

163 
	#SEG
(
ty≥
,
ba£
,
lim
) \

164 .
	`w‹d
 (((
lim
Ë>> 12Ë& 0xffff), ((
ba£
) & 0xffff); \

165 .
	`byã
 (((
ba£
Ë>> 16Ë& 0xff), (0x90 | (
ty≥
)), \

166 (0xC0 | (((
lim
Ë>> 28Ë& 0xf)), (((
ba£
Ë>> 24Ë& 0xff)

	)

168 
	#SEG64
(
ty≥
,
ba£
,
lim
) \

169 .
	`w‹d
 (((
lim
Ë>> 12Ë& 0xffff), ((
ba£
) & 0xffff); \

170 .
	`byã
 (((
ba£
Ë>> 16Ë& 0xff), (0x90 | (
ty≥
)), \

171 (0xA0 | (((
lim
Ë>> 28Ë& 0xF)), (((
ba£
Ë>> 24Ë& 0xff)

	)

173 
	#SEG64USER
(
ty≥
,
ba£
,
lim
) \

174 .
	`w‹d
 (((
lim
Ë>> 12Ë& 0xffff), ((
ba£
) & 0xffff); \

175 .
	`byã
 (((
ba£
Ë>> 16Ë& 0xff), (0xf0 | (
ty≥
)), \

176 (0xA0 | (((
lim
Ë>> 28Ë& 0xF)), (((
ba£
Ë>> 24Ë& 0xff)

	)

179 
	~<öc/ty≥s.h
>

182 
	sSegdesc
 {

183 
	msd_lim_15_0
 : 16;

184 
	msd_ba£_15_0
 : 16;

185 
	msd_ba£_23_16
 : 8;

186 
	msd_ty≥
 : 4;

187 
	msd_s
 : 1;

188 
	msd_d∂
 : 2;

189 
	msd_p
 : 1;

190 
	msd_lim_19_16
 : 4;

191 
	msd_avl
 : 1;

192 
	msd_l
 : 1;

193 
	msd_db
 : 1;

194 
	msd_g
 : 1;

195 
	msd_ba£_31_24
 : 8;

197 
	sSy°emSegdesc64
{

198 
	msd_lim_15_0
 : 16;

199 
	msd_ba£_15_0
 : 16;

200 
	msd_ba£_23_16
 : 8;

201 
	msd_ty≥
 : 4;

202 
	msd_s
 : 1;

203 
	msd_d∂
 : 2;

204 
	msd_p
 : 1;

205 
	msd_lim_19_16
 : 4;

206 
	msd_avl
 : 1;

207 
	msd_rsv1
 : 2;

208 
	msd_g
 : 1;

209 
	msd_ba£_31_24
 : 8;

210 
uöt32_t
 
	msd_ba£_63_32
;

211 
	msd_ªs1
 : 8;

212 
	msd_˛ór
 : 8;

213 
	msd_ªs2
 : 16;

216 
	#SEG_NULL
 (
Segdesc
){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }

	)

218 
	#SEG_FAULT
 (
Segdesc
){ 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0 }

	)

220 
	#SEG
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

221 { ((
lim
Ë>> 12Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

222 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 28, 0, 0, 1, 1, \

223 (Ë(
ba£
Ë>> 24 }

	)

224 
	#SEG64
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

225 { ((
lim
Ë>> 12Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

226 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 28, 0, 1, 0, 1, \

227 (Ë(
ba£
Ë>> 24 }

	)

229 
	#SEG16
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

230 { (
lim
Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

231 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 16, 0, 0, 1, 0, \

232 (Ë(
ba£
Ë>> 24 }

	)

237 
	#STA_X
 0x8

238 
	#STA_E
 0x4

239 
	#STA_C
 0x4

240 
	#STA_W
 0x2

241 
	#STA_R
 0x2

242 
	#STA_A
 0x1

243 

	)

246 
	#STS_LDT
 0x2

252 
	#STS_T64A
 0x9

253 
	#STS_T64B
 0xB

254 
	#STS_CG64
 0xC

255 
	#STS_IG64
 0xE

256 
	#STS_TG64
 0xF

257 

	)

265 #i‚de‡
__ASSEMBLER__


268 
	sTask°©e
 {

269 
uöt32_t
 
	mts_ªs1
;

270 
uöçå_t
 
	mts_e•0
;

271 
uöçå_t
 
	mts_e•1
;

272 
uöçå_t
 
	mts_e•2
;

273 
uöt64_t
 
	mts_ªs2
;

274 
uöt64_t
 
	mts_i°1
;

275 
uöt64_t
 
	mts_i°2
;

276 
uöt64_t
 
	mts_i°3
;

277 
uöt64_t
 
	mts_i°4
;

278 
uöt64_t
 
	mts_i°5
;

279 
uöt64_t
 
	mts_i°6
;

280 
uöt64_t
 
	mts_i°7
;

281 
uöt64_t
 
	mts_ªs3
;

282 
uöt16_t
 
	mts_ªs4
;

283 
uöt16_t
 
	mts_iomb
;

284 }
__©åibuã__
 ((
∑cked
));

287 
	sG©edesc
 {

288 
	mgd_off_15_0
 : 16;

289 
	mgd_ss
 : 16;

290 
	mgd_i°
 : 3;

291 
	mgd_rsv1
 : 5;

292 
	mgd_ty≥
 : 4;

293 
	mgd_s
 : 1;

294 
	mgd_d∂
 : 2;

295 
	mgd_p
 : 1;

296 
	mgd_off_31_16
 : 16;

297 
uöt32_t
 
	mgd_off_32_63
;

298 
uöt32_t
 
	mgd_rsv2
;

301 
	#SETTSS
(
desc
,
ty≥
,
ba£
,
lim
,
d∂
) \

303 (
desc
)->
sd_lim_15_0
 = (
uöt64_t
Ë(
lim
) & 0xffff; \

304 (
desc
)->
sd_ba£_15_0
 = (
uöt64_t
)(
ba£
) & 0xffff; \

305 (
desc
)->
sd_ba£_23_16
 = ((
uöt64_t
)(
ba£
)>>16) & 0xff; \

306 (
desc
)->
sd_ty≥
 = 
ty≥
; \

307 (
desc
)->
sd_s
 = 0; \

308 (
desc
)->
sd_d∂
 = 0; \

309 (
desc
)->
sd_p
 = 1; \

310 (
desc
)->
sd_lim_19_16
 = ((
uöt64_t
)(
lim
) >> 16) & 0xf; \

311 (
desc
)->
sd_avl
 = 0; \

312 (
desc
)->
sd_rsv1
 = 0; \

313 (
desc
)->
sd_g
 = 0; \

314 (
desc
)->
sd_ba£_31_24
 = ((
uöt64_t
)(
ba£
)>>24)& 0xff; \

315 (
desc
)->
sd_ba£_63_32
 = ((
uöt64_t
)(
ba£
)>>32) & 0xffffffff; \

316 (
desc
)->
sd_ªs1
 = 0; \

317 (
desc
)->
sd_˛ór
 = 0; \

318 (
desc
)->
sd_ªs2
 = 0; \

319 }

	)

334 
	#SETGATE
(
g©e
, 
i°øp
, 
£l
, 
off
, 
d∂
) \

336 (
g©e
).
gd_off_15_0
 = (
uöt64_t
Ë(
off
) & 0xffff; \

337 (
g©e
).
gd_ss
 = (
£l
); \

338 (
g©e
).
gd_i°
 = 0; \

339 (
g©e
).
gd_rsv1
 = 0; \

340 (
g©e
).
gd_ty≥
 = (
i°øp
Ë? 
STS_TG64
 : 
STS_IG64
; \

341 (
g©e
).
gd_s
 = 0; \

342 (
g©e
).
gd_d∂
 = (
d∂
); \

343 (
g©e
).
gd_p
 = 1; \

344 (
g©e
).
gd_off_31_16
 = ((
uöt64_t
Ë(
off
) >> 16) & 0xffff; \

345 (
g©e
).
gd_off_32_63
 = ((
uöt64_t
Ë(
off
) >> 32) & 0xffffffff; \

346 (
g©e
).
gd_rsv2
 = 0; \

347 }

	)

350 
	#SETCALLGATE
(
g©e
, 
ss
, 
off
, 
d∂
) \

352 (
g©e
).
gd_off_15_0
 = (
uöt32_t
Ë(
off
) & 0xffff; \

353 (
g©e
).
gd_ss
 = (
ss
); \

354 (
g©e
).
gd_i°
 = 0; \

355 (
g©e
).
gd_rsv1
 = 0; \

356 (
g©e
).
gd_ty≥
 = 
STS_CG64
; \

357 (
g©e
).
gd_s
 = 0; \

358 (
g©e
).
gd_d∂
 = (
d∂
); \

359 (
g©e
).
gd_p
 = 1; \

360 (
g©e
).
gd_off_31_16
 = ((
uöt32_t
Ë(
off
) >> 16) & 0xffff; \

361 (
g©e
).
gd_off_32_63
 = ((
uöt64_t
Ë(
off
) >> 32) & 0xffffffff; \

362 (
g©e
).
gd_rsv2
 = 0; \

363 }

	)

366 
	sP£udodesc
 {

367 
uöt16_t
 
	mpd_lim
;

368 
uöt64_t
 
	mpd_ba£
;

369 } 
__©åibuã__
 ((
∑cked
));

	@inc/queue.h

35 #i‚de‡
JOS_INC_QUEUE_H


36 
	#JOS_INC_QUEUE_H


	)

52 
	sFrob


54 
	m‰obozz
;

55 
LIST_ENTRY
(
Frob
Ë
	m‰ob_lök
;

58 
	$LIST_HEAD
(
Frob_li°
, 
Frob
)

60 
Frob_li°
 
Êi°
;

62 
	`LIST_INIT
(&
Êi°
);

63 
Êi°
 = 
	`LIST_HEAD_INITIALIZER
(&flist);

65 if(
	$LIST_EMPTY
(&
Êi°
))

66 
	`¥ötf
("list isÉmpty\n");

68 
Frob
 *
f
 = 
	`LIST_FIRST
(&
Êi°
);

69 
f
 = 
	`LIST_NEXT
(f, 
‰ob_lök
);

70 
f
 = 
	`LIST_NEXT
(f, 
‰ob_lök
);

72 
f
=
	`LIST_FIRST
(&
Êi°
); f != 0;

73 
f
 = 
	$LIST_NEXT
(
f
, 
‰ob_lök
))

74 
	`¥ötf
("‡%d\n", 
f
->
‰obozz
);

76 
	$LIST_FOREACH
(
f
, &
Êi°
, 
‰ob_lök
)

77 
	`¥ötf
("‡%d\n", 
f
->
‰obozz
);

79 
f
 = 
	`LIST_NEXT
(
	`LIST_FIRST
(&
Êi°
));

80 
	`LIST_INSERT_AFTER
(
f
, 
g
, 
‰ob_lök
);

81 
	`LIST_REMOVE
(
g
, 
‰ob_lök
);

82 
	`LIST_INSERT_BEFORE
(
f
, 
g
, 
‰ob_lök
);

83 
	`LIST_REMOVE
(
g
, 
‰ob_lök
);

84 
	`LIST_INSERT_HEAD
(&
Êi°
, 
g
, 
‰ob_lök
);

109 
	#LIST_HEAD
(
«me
, 
ty≥
) \

110 
	s«me
 { \

111 
ty≥
 *
lh_fú°
; \

112 }

	)

118 
	#LIST_HEAD_INITIALIZER
(
hód
) \

119 { 
NULL
 
	}

	)
}

129 
	#LIST_ENTRY
(
ty≥
) \

131 
ty≥
 *
À_√xt
; \

132 
ty≥
 **
À_¥ev
; \

133 }

	)

142 
	#LIST_EMPTY
(
hód
Ë((hód)->
lh_fú°
 =
NULL
)

	)

147 
	#LIST_FIRST
(
hód
Ë((hód)->
lh_fú°
)

	)

153 
	#LIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
À_√xt
)

	)

160 
	#LIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

161 (
v¨
Ë
	`LIST_FIRST
((
hód
)); \

162 (
v¨
); \

163 (
v¨
Ë
	`LIST_NEXT
((v¨), 
fõld
))

	)

168 
	#LIST_INIT
(
hód
) do { \

169 
	`LIST_FIRST
((
hód
)Ë
NULL
; \

170 } 0)

	)

177 
	#LIST_INSERT_AFTER
(
li°ñm
, 
ñm
, 
fõld
) do { \

178 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
ËLIST_NEXT((
li°ñm
), fõld)Ë!
NULL
)\

179 
	`LIST_NEXT
((
li°ñm
), 
fõld
)->fõld.
À_¥ev
 = \

180 &
	`LIST_NEXT
((
ñm
), 
fõld
); \

181 
	`LIST_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

182 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
li°ñm
), field); \

183 } 0)

	)

190 
	#LIST_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

191 (
ñm
)->
fõld
.
À_¥ev
 = (
li°ñm
)->field.le_prev; \

192 
	`LIST_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

193 *(
li°ñm
)->
fõld
.
À_¥ev
 = (
ñm
); \

194 (
li°ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field); \

195 } 0)

	)

201 
	#LIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

202 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
Ë
	`LIST_FIRST
((
hód
))Ë!
NULL
) \

203 
	`LIST_FIRST
((
hód
))->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field);\

204 
	`LIST_FIRST
((
hód
)Ë(
ñm
); \

205 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód
)); \

206 } 0)

	)

212 
	#LIST_REMOVE
(
ñm
, 
fõld
) do { \

213 i‡(
	`LIST_NEXT
((
ñm
), 
fõld
Ë!
NULL
) \

214 
	`LIST_NEXT
((
ñm
), 
fõld
)->fõld.
À_¥ev
 = \

215 (
ñm
)->
fõld
.
À_¥ev
; \

216 *(
ñm
)->
fõld
.
À_¥ev
 = 
	`LIST_NEXT
((elm), field); \

217 } 0)

	)

	@inc/stab.h

1 #i‚de‡
JOS_STAB_H


2 
	#JOS_STAB_H


	)

3 
	~<öc/ty≥s.h
>

15 
	#N_GSYM
 0x20

16 
	#N_FNAME
 0x22

17 
	#N_FUN
 0x24

18 
	#N_STSYM
 0x26

19 
	#N_LCSYM
 0x28

20 
	#N_MAIN
 0x2a

21 
	#N_PC
 0x30

22 
	#N_RSYM
 0x40

23 
	#N_SLINE
 0x44

24 
	#N_DSLINE
 0x46

25 
	#N_BSLINE
 0x48

26 
	#N_SSYM
 0x60

27 
	#N_SO
 0x64

28 
	#N_LSYM
 0x80

29 
	#N_BINCL
 0x82

30 
	#N_SOL
 0x84

31 
	#N_PSYM
 0xa0

32 
	#N_EINCL
 0xa2

33 
	#N_ENTRY
 0xa4

34 
	#N_LBRAC
 0xc0

35 
	#N_EXCL
 0xc2

36 
	#N_RBRAC
 0xe0

37 
	#N_BCOMM
 0xe2

38 
	#N_ECOMM
 0xe4

39 
	#N_ECOML
 0xe8

40 
	#N_LENG
 0xfe

41 

	)

43 
	sSèb
 {

44 
uöt32_t
 
	mn_°rx
;

45 
uöt8_t
 
	mn_ty≥
;

46 
uöt8_t
 
	mn_Ÿhî
;

47 
uöt16_t
 
	mn_desc
;

48 
uöt32_t
 
	mn_vÆue
;

	@inc/stdarg.h

3 #i‚de‡
JOS_INC_STDARG_H


4 
	#JOS_INC_STDARG_H


	)

7 
__buûtö_va_li°
 
	tva_li°
;

9 
	#va_°¨t
(
≠
, 
œ°
Ë
	`__buûtö_va_°¨t
◊p,Üa°)

	)

11 
	#va_¨g
(
≠
, 
ty≥
Ë
	`__buûtö_va_¨g
◊p,Åy≥)

	)

13 
	#va_íd
(
≠
Ë
	`__buûtö_va_íd
◊p)

	)

15 
	#va_c›y
(
d
,
s
Ë
	`__buûtö_va_c›y
(d,s)

	)

	@inc/stdio.h

1 #i‚de‡
JOS_INC_STDIO_H


2 
	#JOS_INC_STDIO_H


	)

4 
	~<öc/°d¨g.h
>

6 #i‚de‡
NULL


7 
	#NULL
 ((*Ë0)

	)

11 
˝utch¨
(
c
);

12 
gëch¨
();

13 
isc⁄s
(
fd
);

16 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

17 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
);

18 
	`¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, ...);

19 
	`v¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, 
va_li°
);

22 
	`˝rötf
(c⁄° *
fmt
, ...);

23 
	`v˝rötf
(c⁄° *
fmt
, 
va_li°
);

26 
	`¥ötf
(c⁄° *
fmt
, ...);

27 
	`Ârötf
(
fd
, c⁄° *
fmt
, ...);

28 
	`vÂrötf
(
fd
, c⁄° *
fmt
, 
va_li°
);

31 * 
	`ªadlöe
(c⁄° *
¥om±
);

	@inc/string.h

1 #i‚de‡
JOS_INC_STRING_H


2 
	#JOS_INC_STRING_H


	)

4 
	~<öc/ty≥s.h
>

6 
°æí
(c⁄° *
s
);

7 
°∫Àn
(c⁄° *
s
, 
size_t
 
size
);

8 * 
°r˝y
(*
d°
, c⁄° *
§c
);

9 * 
°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
);

10 * 
°rˇt
(*
d°
, c⁄° *
§c
);

11 
size_t
 
°æ˝y
(*
d°
, c⁄° *
§c
, size_à
size
);

12 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

13 
°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
size
);

14 * 
°rchr
(c⁄° *
s
, 
c
);

15 * 
°rföd
(c⁄° *
s
, 
c
);

17 * 
mem£t
(*
d°
, 
c
, 
size_t
 
Àn
);

18 * 
mem˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
);

19 * 
memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
);

20 
memcmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
Àn
);

21 * 
memföd
(c⁄° *
s
, 
c
, 
size_t
 
Àn
);

23 
°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
);

24 * 
°r°r
(c⁄° *
ö
, c⁄° *
°r
);

	@inc/types.h

1 #i‚de‡
JOS_INC_TYPES_H


2 
	#JOS_INC_TYPES_H


	)

4 #i‚de‡
NULL


5 
	#NULL
 ((*Ë0)

	)

9 
_Boﬁ
 
	tboﬁ
;

10 íum { 
	mÁl£
, 
	måue
 };

13 
__sig√d
 
	töt8_t
;

14 
	tuöt8_t
;

15 
	töt16_t
;

16 
	tuöt16_t
;

17 
	töt32_t
;

18 
	tuöt32_t
;

19 
	töt64_t
;

20 
	tuöt64_t
;

26 
öt32_t
 
	töçå_t
;

27 
uöt64_t
 
	tuöçå_t
;

28 
uöt64_t
 
	tphyßddr_t
;

31 
uöt64_t
 
	tµn_t
;

34 
uöt64_t
 
	tsize_t
;

37 
öt32_t
 
	tssize_t
;

40 
öt32_t
 
	toff_t
;

43 
	#MIN
(
_a
, 
_b
) \

45 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

46 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

47 
__a
 <
__b
 ? __a : __b; \

48 })

	)

49 
	#MAX
(
_a
, 
_b
) \

51 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

52 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

53 
__a
 >
__b
 ? __a : __b; \

54 })

	)

58 
	#ROUNDDOWN
(
a
, 
n
) \

60 
uöt64_t
 
__a
 = (uöt64_tË(
a
); \

61 (
	`ty≥of
(
a
)Ë(
__a
 - __®% (
n
)); \

62 })

	)

64 
	#ROUNDUP
(
a
, 
n
) \

66 
uöt64_t
 
__n
 = (uöt64_tË(
n
); \

67 (
	`ty≥of
(
a
)Ë(
	`ROUNDDOWN
((
uöt64_t
Ë◊Ë+ 
__n
 - 1, __n)); \

68 })

	)

71 
	#off£tof
(
ty≥
, 
membî
Ë((
size_t
Ë(&(—y≥*)0)->membî))

	)

	@inc/x86.h

1 #i‚de‡
JOS_INC_X86_H


2 
	#JOS_INC_X86_H


	)

4 
	~<öc/ty≥s.h
>

6 
ölöe
 
uöt32_t
 
xchg
(vﬁ©ûêuöt32_à*
addr
,uöt32_à
√wvÆ
);

7 
__ölöe
 
	$bªakpoöt
(Ë
	`__©åibuã__
((
Æways_ölöe
));

8 
__ölöe
 
uöt8_t
 
	$öb
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

9 
__ölöe
 
	$ösb
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

10 
__ölöe
 
uöt16_t
 
	$öw
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

11 
__ölöe
 
	$ösw
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

12 
__ölöe
 
uöt32_t
 
	$öl
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

13 
__ölöe
 
	$ö¶
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

14 
__ölöe
 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

15 
__ölöe
 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

16 
__ölöe
 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

17 
__ölöe
 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

18 
__ölöe
 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

19 
__ölöe
 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

20 
__ölöe
 
	$övÕg
(*
addr
Ë
	`__©åibuã__
((
Æways_ölöe
));

21 
__ölöe
 
	$lidt
(*
p
Ë
	`__©åibuã__
((
Æways_ölöe
));

22 
__ölöe
 
	$lgdt
(*
p
Ë
	`__©åibuã__
((
Æways_ölöe
));

23 
__ölöe
 
	$Œdt
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

24 
__ölöe
 
	$…r
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

25 
__ölöe
 
	$l¸0
(
uöt64_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

26 
__ölöe
 
uöt64_t
 
	$r¸0
(Ë
	`__©åibuã__
((
Æways_ölöe
));

27 
__ölöe
 
uöt64_t
 
	$r¸2
(Ë
	`__©åibuã__
((
Æways_ölöe
));

28 
__ölöe
 
	$l¸3
(
uöt64_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

29 
__ölöe
 
uöt64_t
 
	$r¸3
(Ë
	`__©åibuã__
((
Æways_ölöe
));

30 
__ölöe
 
	$l¸4
(
uöt64_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

31 
__ölöe
 
uöt64_t
 
	$r¸4
(Ë
	`__©åibuã__
((
Æways_ölöe
));

32 
__ölöe
 
	$ébÊush
(Ë
	`__©åibuã__
((
Æways_ölöe
));

33 
__ölöe
 
uöt64_t
 
	$ªad_eÊags
(Ë
	`__©åibuã__
((
Æways_ölöe
));

34 
__ölöe
 
	$wrôe_eÊags
(
uöt64_t
 
eÊags
Ë
	`__©åibuã__
((
Æways_ölöe
));

35 
__ölöe
 
uöt64_t
 
	$ªad_rbp
(Ë
	`__©åibuã__
((
Æways_ölöe
));

36 
__ölöe
 
uöt64_t
 
	$ªad_r•
(Ë
	`__©åibuã__
((
Æways_ölöe
));

37 
__ölöe
 
	`˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
);

38 
__ölöe
 
uöt64_t
 
	$ªad_tsc
(Ë
	`__©åibuã__
((
Æways_ölöe
));

40 
__ölöe
 

41 
	$bªakpoöt
()

43 
__asm
 
	`__vﬁ©ûe
("int3");

44 
	}
}

46 
__ölöe
 
uöt8_t


47 
	$öb
(
p‹t
)

49 
uöt8_t
 
d©a
;

50 
__asm
 
	`__vﬁ©ûe
("öb %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

51  
d©a
;

52 
	}
}

54 
__ölöe
 

55 
	$ösb
(
p‹t
, *
addr
, 
˙t
)

57 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsb" :

58 "=D" (
addr
), "=c" (
˙t
) :

59 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

61 
	}
}

63 
__ölöe
 
uöt16_t


64 
	$öw
(
p‹t
)

66 
uöt16_t
 
d©a
;

67 
__asm
 
	`__vﬁ©ûe
("öw %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

68  
d©a
;

69 
	}
}

71 
__ölöe
 

72 
	$ösw
(
p‹t
, *
addr
, 
˙t
)

74 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsw" :

75 "=D" (
addr
), "=c" (
˙t
) :

76 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

78 
	}
}

80 
__ölöe
 
uöt32_t


81 
	$öl
(
p‹t
)

83 
uöt32_t
 
d©a
;

84 
__asm
 
	`__vﬁ©ûe
("ö»%w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

85  
d©a
;

86 
	}
}

88 
__ölöe
 

89 
	$ö¶
(
p‹t
, *
addr
, 
˙t
)

91 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsl" :

92 "=D" (
addr
), "=c" (
˙t
) :

93 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

95 
	}
}

97 
__ölöe
 

98 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
)

100 
__asm
 
	`__vﬁ©ûe
("outb %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

101 
	}
}

103 
__ölöe
 

104 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
)

106 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsb" :

107 "=S" (
addr
), "=c" (
˙t
) :

108 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

110 
	}
}

112 
__ölöe
 

113 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
)

115 
__asm
 
	`__vﬁ©ûe
("outw %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

116 
	}
}

118 
__ölöe
 

119 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
)

121 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsw" :

122 "=S" (
addr
), "=c" (
˙t
) :

123 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

125 
	}
}

127 
__ölöe
 

128 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
)

130 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsl" :

131 "=S" (
addr
), "=c" (
˙t
) :

132 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

134 
	}
}

136 
__ölöe
 

137 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
)

139 
__asm
 
	`__vﬁ©ûe
("oué %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

140 
	}
}

142 
__ölöe
 

143 
	$övÕg
(*
addr
)

145 
__asm
 
	`__vﬁ©ûe
("övÕg (%0)" : : "r" (
addr
) : "memory");

146 
	}
}

148 
__ölöe
 

149 
	$lidt
(*
p
)

151 
__asm
 
	`__vﬁ©ûe
("lidà(%0)" : : "r" (
p
));

152 
	}
}

154 
__ölöe
 

155 
	$Œdt
(
uöt16_t
 
£l
)

157 
__asm
 
	`__vﬁ©ûe
("Œdà%0" : : "r" (
£l
));

158 
	}
}

160 
__ölöe
 

161 
	$lgdt
(*
p
)

163 
__asm
 
	`__vﬁ©ûe
("lgdà(%0)" : : "r" (
p
));

164 
	}
}

165 
__ölöe
 

166 
	$…r
(
uöt16_t
 
£l
)

168 
__asm
 
	`__vﬁ©ûe
("…∏%0" : : "r" (
£l
));

169 
	}
}

171 
__ölöe
 

172 
	$l¸0
(
uöt64_t
 
vÆ
)

174 
__asm
 
	`__vﬁ©ûe
("movq %0,%%¸0" : : "r" (
vÆ
));

175 
	}
}

177 
__ölöe
 
uöt64_t


178 
	$r¸0
()

180 
uöt64_t
 
vÆ
;

181 
__asm
 
	`__vﬁ©ûe
("movq %%¸0,%0" : "Ù" (
vÆ
));

182  
vÆ
;

183 
	}
}

185 
__ölöe
 
uöt64_t


186 
	$r¸2
()

188 
uöt64_t
 
vÆ
;

189 
__asm
 
	`__vﬁ©ûe
("movq %%¸2,%0" : "Ù" (
vÆ
));

190  
vÆ
;

191 
	}
}

193 
__ölöe
 

194 
	$l¸3
(
uöt64_t
 
vÆ
)

196 
__asm
 
	`__vﬁ©ûe
("movq %0,%%¸3" : : "r" (
vÆ
));

197 
	}
}

199 
__ölöe
 
uöt64_t


200 
	$r¸3
()

202 
uöt64_t
 
vÆ
;

203 
__asm
 
	`__vﬁ©ûe
("movq %%¸3,%0" : "Ù" (
vÆ
));

204  
vÆ
;

205 
	}
}

207 
__ölöe
 

208 
	$l¸4
(
uöt64_t
 
vÆ
)

210 
__asm
 
	`__vﬁ©ûe
("movq %0,%%¸4" : : "r" (
vÆ
));

211 
	}
}

213 
__ölöe
 
uöt64_t


214 
	$r¸4
()

216 
uöt64_t
 
¸4
;

217 
__asm
 
	`__vﬁ©ûe
("movq %%¸4,%0" : "Ù" (
¸4
));

218  
¸4
;

219 
	}
}

221 
__ölöe
 

222 
	$ébÊush
()

224 
uöt64_t
 
¸3
;

225 
__asm
 
	`__vﬁ©ûe
("movq %%¸3,%0" : "Ù" (
¸3
));

226 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸3" : : "r" (
¸3
));

227 
	}
}

229 
__ölöe
 
uöt64_t


230 
	$ªad_eÊags
()

232 
uöt64_t
 
rÊags
;

233 
__asm
 
	`__vﬁ©ûe
("pushfq;Ö›q %0" : "Ù" (
rÊags
));

234  
rÊags
;

235 
	}
}

237 
__ölöe
 

238 
	$wrôe_eÊags
(
uöt64_t
 
eÊags
)

240 
__asm
 
	`__vﬁ©ûe
("pushq %0;Ö›fq" : : "r" (
eÊags
));

241 
	}
}

243 
__ölöe
 
uöt64_t


244 
	$ªad_rbp
()

246 
uöt64_t
 
rbp
;

247 
__asm
 
	`__vﬁ©ûe
("movq %%rbp,%0" : "Ù" (
rbp
)::"cc","memory");

248  
rbp
;

249 
	}
}

251 
__ölöe
 
uöt64_t


252 
	$ªad_r•
()

254 
uöt64_t
 
e•
;

255 
__asm
 
	`__vﬁ©ûe
("movq %%r•,%0" : "Ù" (
e•
));

256  
e•
;

257 
	}
}

259 
__ölöe
 

260 
	$˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
)

262 
uöt32_t
 
óx
, 
ebx
, 
ecx
, 
edx
;

263 
asm
 volatile("cpuid"

264 : "˜" (
óx
), "=b" (
ebx
), "=c" (
ecx
), "=d" (
edx
)

265 : "a" (
öfo
));

266 i‡(
óxp
)

267 *
óxp
 = 
óx
;

268 i‡(
ebxp
)

269 *
ebxp
 = 
ebx
;

270 i‡(
ecxp
)

271 *
ecxp
 = 
ecx
;

272 i‡(
edxp
)

273 *
edxp
 = 
edx
;

274 
	}
}

276 
ölöe
 
uöt32_t


277 
	$xchg
(vﬁ©ûê
uöt32_t
 *
addr
,uöt32_à
√wvÆ
){

278 
uöt32_t
 
ªsu…
;

279 
__asm
 
	`__vﬁ©ûe
("lock; xchgl %0, %1":

280 "+m" (*
addr
), "˜" (
ªsu…
):

281 "1"(
√wvÆ
):

283  
ªsu…
;

284 
	}
}

285 
__ölöe
 
uöt64_t


286 
	$ªad_tsc
()

288 
uöt64_t
 
tsc
;

289 
__asm
 
	`__vﬁ©ûe
("rdtsc" : "=A" (
tsc
));

290  
tsc
;

291 
	}
}

	@kern/console.c

3 
	~<öc/x86.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/kbdªg.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/c⁄sﬁe.h
>

11 
c⁄s_öå
((*
¥oc
)());

12 
	`c⁄s_putc
(
c
);

16 
	$dñay
()

18 
	`öb
(0x84);

19 
	`öb
(0x84);

20 
	`öb
(0x84);

21 
	`öb
(0x84);

22 
	}
}

26 
	#COM1
 0x3F8

	)

28 
	#COM_RX
 0

29 
	#COM_TX
 0

30 
	#COM_DLL
 0

31 
	#COM_DLM
 1

32 
	#COM_IER
 1

33 
	#COM_IER_RDI
 0x01

34 
	#COM_IIR
 2

35 
	#COM_FCR
 2

36 
	#COM_LCR
 3

37 
	#COM_LCR_DLAB
 0x80

38 
	#COM_LCR_WLEN8
 0x03

39 
	#COM_MCR
 4

40 
	#COM_MCR_RTS
 0x02

41 
	#COM_MCR_DTR
 0x01

42 
	#COM_MCR_OUT2
 0x08

43 
	#COM_LSR
 5

44 
	#COM_LSR_DATA
 0x01

45 
	#COM_LSR_TXRDY
 0x20

46 
	#COM_LSR_TSRE
 0x40

47 

	)

48 
boﬁ
 
	g£rül_exi°s
;

51 
	$£rül_¥oc_d©a
()

53 i‡(!(
	`öb
(
COM1
+
COM_LSR
Ë& 
COM_LSR_DATA
))

55  
	`öb
(
COM1
+
COM_RX
);

56 
	}
}

59 
	$£rül_öå
()

61 i‡(
£rül_exi°s
)

62 
	`c⁄s_öå
(
£rül_¥oc_d©a
);

63 
	}
}

66 
	$£rül_putc
(
c
)

68 
i
;

70 
i
 = 0;

71 !(
	`öb
(
COM1
 + 
COM_LSR
Ë& 
COM_LSR_TXRDY
Ë&& 
i
 < 12800;

72 
i
++)

73 
	`dñay
();

75 
	`outb
(
COM1
 + 
COM_TX
, 
c
);

76 
	}
}

79 
	$£rül_öô
()

82 
	`outb
(
COM1
+
COM_FCR
, 0);

85 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_DLAB
);

86 
	`outb
(
COM1
+
COM_DLL
, (
uöt8_t
) (115200 / 9600));

87 
	`outb
(
COM1
+
COM_DLM
, 0);

90 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_WLEN8
 & ~
COM_LCR_DLAB
);

93 
	`outb
(
COM1
+
COM_MCR
, 0);

95 
	`outb
(
COM1
+
COM_IER
, 
COM_IER_RDI
);

99 
£rül_exi°s
 = (
	`öb
(
COM1
+
COM_LSR
) != 0xFF);

100 (Ë
	`öb
(
COM1
+
COM_IIR
);

101 (Ë
	`öb
(
COM1
+
COM_RX
);

103 
	}
}

112 
	$Õt_putc
(
c
)

114 
i
;

116 
i
 = 0; !(
	`öb
(0x378+1) & 0x80) && i < 12800; i++)

117 
	`dñay
();

118 
	`outb
(0x378+0, 
c
);

119 
	`outb
(0x378+2, 0x08|0x04|0x01);

120 
	`outb
(0x378+2, 0x08);

121 
	}
}

128 
	gaddr_6845
;

129 
uöt16_t
 *
	g¸t_buf
;

130 
uöt16_t
 
	g¸t_pos
;

133 
	$cga_öô
()

135 vﬁ©ûê
uöt16_t
 *
˝
;

136 
uöt16_t
 
was
;

137 
pos
;

139 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
CGA_BUF
);

140 
was
 = *
˝
;

141 *
˝
 = (
uöt16_t
) 0xA55A;

142 i‡(*
˝
 != 0xA55A) {

143 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
MONO_BUF
);

144 
addr_6845
 = 
MONO_BASE
;

146 *
˝
 = 
was
;

147 
addr_6845
 = 
CGA_BASE
;

151 
	`outb
(
addr_6845
, 14);

152 
pos
 = 
	`öb
(
addr_6845
 + 1) << 8;

153 
	`outb
(
addr_6845
, 15);

154 
pos
 |
	`öb
(
addr_6845
 + 1);

156 
¸t_buf
 = (
uöt16_t
*Ë
˝
;

157 
¸t_pos
 = 
pos
;

158 
	}
}

163 
	$cga_putc
(
c
)

166 i‡(!(
c
 & ~0xFF))

167 
c
 |= 0x0700;

169 
c
 & 0xff) {

171 i‡(
¸t_pos
 > 0) {

172 
¸t_pos
--;

173 
¸t_buf
[
¸t_pos
] = (
c
 & ~0xff) | ' ';

177 
¸t_pos
 +
CRT_COLS
;

180 
¸t_pos
 -(¸t_po†% 
CRT_COLS
);

183 
	`c⁄s_putc
(' ');

184 
	`c⁄s_putc
(' ');

185 
	`c⁄s_putc
(' ');

186 
	`c⁄s_putc
(' ');

187 
	`c⁄s_putc
(' ');

190 
¸t_buf
[
¸t_pos
++] = 
c
;

195 i‡(
¸t_pos
 >
CRT_SIZE
) {

196 
i
;

198 
	`memmove
(
¸t_buf
, cπ_bu‡+ 
CRT_COLS
, (
CRT_SIZE
 - CRT_COLSË* (
uöt16_t
));

199 
i
 = 
CRT_SIZE
 - 
CRT_COLS
; i < CRT_SIZE; i++)

200 
¸t_buf
[
i
] = 0x0700 | ' ';

201 
¸t_pos
 -
CRT_COLS
;

205 
	`outb
(
addr_6845
, 14);

206 
	`outb
(
addr_6845
 + 1, 
¸t_pos
 >> 8);

207 
	`outb
(
addr_6845
, 15);

208 
	`outb
(
addr_6845
 + 1, 
¸t_pos
);

209 
	}
}

214 
	#NO
 0

	)

216 
	#SHIFT
 (1<<0)

	)

217 
	#CTL
 (1<<1)

	)

218 
	#ALT
 (1<<2)

	)

220 
	#CAPSLOCK
 (1<<3)

	)

221 
	#NUMLOCK
 (1<<4)

	)

222 
	#SCROLLLOCK
 (1<<5)

	)

224 
	#E0ESC
 (1<<6)

	)

226 
uöt8_t
 
	gshi·code
[256] =

228 [0x1D] = 
CTL
,

229 [0x2A] = 
SHIFT
,

230 [0x36] = 
SHIFT
,

231 [0x38] = 
ALT
,

232 [0x9D] = 
CTL
,

233 [0xB8] = 
ALT


236 
uöt8_t
 
	gtoggÀcode
[256] =

238 [0x3A] = 
CAPSLOCK
,

239 [0x45] = 
NUMLOCK
,

240 [0x46] = 
SCROLLLOCK


243 
uöt8_t
 
	gn‹mÆm≠
[256] =

245 
NO
, 0x1B, '1', '2', '3', '4', '5', '6',

248 'o', 'p', '[', ']', '\n', 
NO
, 'a', 's',

250 '\'', '`', 
NO
, '\\', 'z', 'x', 'c', 'v',

251 'b', 'n', 'm', ',', '.', '/', 
NO
, '*',

252 
NO
, ' ', NO, NO, NO, NO, NO, NO,

253 
NO
, NO, NO, NO, NO, NO, NO, '7',

255 '2', '3', '0', '.', 
NO
, NO, NO, NO,

256 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

257 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

258 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

259 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

260 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

261 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


264 
uöt8_t
 
	gshi·m≠
[256] =

266 
NO
, 033, '!', '@', '#', '$', '%', '^',

269 'O', 'P', '{', '}', '\n', 
NO
, 'A', 'S',

271 '"', '~', 
NO
, '|', 'Z', 'X', 'C', 'V',

272 'B', 'N', 'M', '<', '>', '?', 
NO
, '*',

273 
NO
, ' ', NO, NO, NO, NO, NO, NO,

274 
NO
, NO, NO, NO, NO, NO, NO, '7',

276 '2', '3', '0', '.', 
NO
, NO, NO, NO,

277 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

278 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

279 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

280 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

281 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

282 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


285 
	#C
(
x
Ë(x - '@')

	)

287 
uöt8_t
 
	g˘lm≠
[256] =

289 
NO
, NO, NO, NO, NO, NO, NO, NO,

290 
NO
, NO, NO, NO, NO, NO, NO, NO,

291 
C
('Q'), C('W'), C('E'), C('R'), C('T'), C('Y'), C('U'), C('I'),

292 
C
('O'), C('P'), 
NO
, NO, '\r', NO, C('A'), C('S'),

293 
C
('D'), C('F'), C('G'), C('H'), C('J'), C('K'), C('L'), 
NO
,

294 
NO
, NO, NO, 
C
('\\'), C('Z'), C('X'), C('C'), C('V'),

295 
C
('B'), C('N'), C('M'), 
NO
, NO, C('/'), NO, NO,

296 [0x97] = 
KEY_HOME
,

297 [0xB5] = 
C
('/'), [0xC8] = 
KEY_UP
,

298 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

299 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

300 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

301 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


304 
uöt8_t
 *
	gch¨code
[4] = {

305 
n‹mÆm≠
,

306 
shi·m≠
,

307 
˘lm≠
,

308 
˘lm≠


316 
	$kbd_¥oc_d©a
()

318 
c
;

319 
uöt8_t
 
d©a
;

320 
uöt32_t
 
shi·
;

322 i‡((
	`öb
(
KBSTATP
Ë& 
KBS_DIB
) == 0)

325 
d©a
 = 
	`öb
(
KBDATAP
);

327 i‡(
d©a
 == 0xE0) {

329 
shi·
 |
E0ESC
;

331 } i‡(
d©a
 & 0x80) {

333 
d©a
 = (
shi·
 & 
E0ESC
 ? data : data & 0x7F);

334 
shi·
 &~(
shi·code
[
d©a
] | 
E0ESC
);

336 } i‡(
shi·
 & 
E0ESC
) {

338 
d©a
 |= 0x80;

339 
shi·
 &~
E0ESC
;

342 
shi·
 |
shi·code
[
d©a
];

343 
shi·
 ^
toggÀcode
[
d©a
];

345 
c
 = 
ch¨code
[
shi·
 & (
CTL
 | 
SHIFT
)][
d©a
];

346 i‡(
shi·
 & 
CAPSLOCK
) {

347 i‡('a' <
c
 && c <= 'z')

348 
c
 += 'A' - 'a';

349 i‡('A' <
c
 && c <= 'Z')

350 
c
 += 'a' - 'A';

355 i‡(!(~
shi·
 & (
CTL
 | 
ALT
)Ë&& 
c
 =
KEY_DEL
) {

356 
	`˝rötf
("Rebooting!\n");

357 
	`outb
(0x92, 0x3);

360  
c
;

361 
	}
}

364 
	$kbd_öå
()

366 
	`c⁄s_öå
(
kbd_¥oc_d©a
);

367 
	}
}

370 
	$kbd_öô
()

372 
	}
}

381 
	#CONSBUFSIZE
 512

	)

384 
uöt8_t
 
	mbuf
[
CONSBUFSIZE
];

385 
uöt32_t
 
	mΩos
;

386 
uöt32_t
 
	mwpos
;

387 } 
	gc⁄s
;

392 
c⁄s_öå
((*
¥oc
)())

394 
c
;

396 (
c
 = (*
¥oc
)()) != -1) {

397 i‡(
c
 == 0)

399 
c⁄s
.
buf
[c⁄s.
wpos
++] = 
c
;

400 i‡(
c⁄s
.
wpos
 =
CONSBUFSIZE
)

401 
c⁄s
.
wpos
 = 0;

403 
	}
}

407 
	$c⁄s_gëc
()

409 
c
;

414 
	`£rül_öå
();

415 
	`kbd_öå
();

418 i‡(
c⁄s
.
Ωos
 !c⁄s.
wpos
) {

419 
c
 = 
c⁄s
.
buf
[c⁄s.
Ωos
++];

420 i‡(
c⁄s
.
Ωos
 =
CONSBUFSIZE
)

421 
c⁄s
.
Ωos
 = 0;

422  
c
;

425 
	}
}

429 
	$c⁄s_putc
(
c
)

431 
	`£rül_putc
(
c
);

432 
	`Õt_putc
(
c
);

433 
	`cga_putc
(
c
);

434 
	}
}

438 
	$c⁄s_öô
()

440 
	`cga_öô
();

441 
	`kbd_öô
();

442 
	`£rül_öô
();

444 i‡(!
£rül_exi°s
)

445 
	`˝rötf
("SerialÖort doesÇotÉxist!\n");

446 
	}
}

452 
	$˝utch¨
(
c
)

454 
	`c⁄s_putc
(
c
);

455 
	}
}

458 
	$gëch¨
()

460 
c
;

462 (
c
 = 
	`c⁄s_gëc
()) == 0)

464  
c
;

465 
	}
}

468 
	$isc⁄s
(
fdnum
)

472 
	}
}

	@kern/console.h

3 #i‚de‡
_CONSOLE_H_


4 
	#_CONSOLE_H_


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/ty≥s.h
>

11 
	#MONO_BASE
 0x3B4

	)

12 
	#MONO_BUF
 0xB0000

	)

13 
	#CGA_BASE
 0x3D4

	)

14 
	#CGA_BUF
 0xB8000

	)

16 
	#CRT_ROWS
 25

	)

17 
	#CRT_COLS
 80

	)

18 
	#CRT_SIZE
 (
CRT_ROWS
 * 
CRT_COLS
)

	)

20 
c⁄s_öô
();

21 
c⁄s_gëc
();

23 
kbd_öå
();

24 
£rül_öå
();

	@kern/dwarf.h

1 #i‚de‡
DWARF_H


2 
	#DWARF_H


	)

4 
	#NATTRDEF
 32

5 
	#NATTRVAL
 120

6 

	)

7 
	g_Dw¨f_Dõ
;

10 
	tDw¨f_Boﬁ
;

11 
off_t
 
	tDw¨f_Off
;

12 
uöt64_t
 
	tDw¨f_Unsig√d
;

13 
uöt16_t
 
	tDw¨f_HÆf
;

14 
uöt8_t
 
	tDw¨f_SmÆl
;

15 
öt64_t
 
	tDw¨f_Sig√d
;

16 
uöt64_t
 
	tDw¨f_Addr
;

17 *
	tDw¨f_På
;

19 
_Dw¨f_Debug
 *
	tDw¨f_Debug
;

20 
_Dw¨f_Fde
 *
	tDw¨f_Fde
;

21 
_Dw¨f_Fde
 *
	tDw¨f_P_Fde
;

22 
_Dw¨f_Cõ
 *
	tDw¨f_Cõ
;

25 #i‚de‡
DW_FRAME_HIGHEST_NORMAL_REGISTER


26 
	#DW_FRAME_HIGHEST_NORMAL_REGISTER
 63

	)

29 
	#DW_FRAME_RA_COL
 (
DW_FRAME_HIGHEST_NORMAL_REGISTER
 + 1)

	)

30 
	#DW_FRAME_STATIC_LINK
 (
DW_FRAME_HIGHEST_NORMAL_REGISTER
 + 2)

	)

32 #i‚de‡
DW_FRAME_LAST_REG_NUM


33 
	#DW_FRAME_LAST_REG_NUM
 (
DW_FRAME_HIGHEST_NORMAL_REGISTER
 + 3)

	)

36 #i‚de‡
DW_FRAME_REG_INITIAL_VALUE


37 
	#DW_FRAME_REG_INITIAL_VALUE
 
DW_FRAME_SAME_VAL


	)

40 
	#DW_FRAME_UNDEFINED_VAL
 1034

	)

41 
	#DW_FRAME_SAME_VAL
 1035

	)

42 
	#DW_FRAME_CFA_COL3
 1436

	)

44 
	#DW_EXPR_OFFSET
 0

	)

45 
	#DW_EXPR_VAL_OFFSET
 1

	)

46 
	#DW_EXPR_EXPRESSION
 2

	)

47 
	#DW_EXPR_VAL_EXPRESSION
 3

	)

49 
	#DW_FRAME_CFA_COL
 0

	)

51 #i‚de‡
DW_REG_TABLE_SIZE


52 
	#DW_REG_TABLE_SIZE
 66

	)

56 
Dw¨f_SmÆl
 
	mdw_off£t_ªÀv™t
;

57 
Dw¨f_SmÆl
 
	mdw_vÆue_ty≥
;

58 
Dw¨f_HÆf
 
	mdw_ªgnum
;

59 
Dw¨f_Unsig√d
 
	mdw_off£t_‹_block_Àn
;

60 
Dw¨f_På
 
	mdw_block_±r
;

61 } 
	tDw¨f_RegèbÀ_E¡ry3
;

64 
Dw¨f_RegèbÀ_E¡ry3
 
	mπ3_cÁ_ruÀ
;

65 
Dw¨f_HÆf
 
	mπ3_ªg_èbÀ_size
;

66 
Dw¨f_RegèbÀ_E¡ry3
 *
	mπ3_ruÀs
;

67 } 
	tDw¨f_RegèbÀ3
;

69 
	s_Dw¨f_AârDef
 {

70 
uöt64_t
 
	mad_©åib
;

71 
uöt64_t
 
	mad_f‹m
;

72 
uöt64_t
 
	mad_off£t
;

73 }
	tDw¨f_AârDef
;

75 
	s_Dw¨f_Abbªv
 {

76 
uöt64_t
 
	mab_íåy
;

77 
uöt64_t
 
	mab_èg
;

78 
uöt8_t
 
	mab_chûdªn
;

79 
uöt64_t
 
	mab_off£t
;

80 
uöt64_t
 
	mab_Àngth
;

81 
uöt64_t
 
	mab_©num
;

82 
Dw¨f_AârDef
 
	mab_©ådef
[
NATTRDEF
];

83 }
	tDw¨f_Abbªv
;

85 
	s_Dw¨f_CU


88 
uöt64_t
 
	mcu_Àngth
;

89 
uöt16_t
 
	mvîsi⁄
;

90 
uöt8_t
 
	maddr_size
;

91 
uöt64_t
 
	mdebug_abbªv_off£t
;

94 
uöt8_t
 
	mcu_Àngth_size
;

95 
uöt8_t
 
	mcu_dw¨f_size
;

96 
uöt64_t
 
	mcu_√xt_off£t
;

97 
uöt64_t
 
	mcu_dõ_off£t
;

98 
uöt64_t
 
	mcu_off£t
;

99 }
	tDw¨f_CU
;

102 
	s_Dw¨f_Debug


104 
uöt64_t
 
	mcuº_off_dbgöfo
;

105 
uöt64_t
 
	mdbg_öfo_off£t_ñf
;

106 
uöt64_t
 
	mdbg_öfo_size
;

107 
uöt64_t
 (*
ªad
)(
	muöt8_t
 *, 
	muöt64_t
 *, );

108 
uöt64_t
 (*
decode
)(
	muöt8_t
 **, );

109 
	mdbg_poöãr_size
;

113 
uöt64_t
 
	mdbg_eh_off£t
;

114 
uöt64_t
 
	mdbg_eh_size
;

116 
Dw¨f_HÆf
 
	mdbg_‰ame_ruÀ_èbÀ_size
;

117 
Dw¨f_HÆf
 
	mdbg_‰ame_ruÀ_öôül_vÆue
;

118 
Dw¨f_HÆf
 
	mdbg_‰ame_cÁ_vÆue
;

119 
Dw¨f_HÆf
 
	mdbg_‰ame_ßme_vÆue
;

120 
Dw¨f_HÆf
 
	mdbg_‰ame_undeföed_vÆue
;

122 
Dw¨f_RegèbÀ3
 *
	mdbg_öã∫Æ_ªg_èbÀ
;

126 
uöt8_t
 
	mÃ_©om
;

127 
uöt64_t
 
	mÃ_numbî
;

128 
uöt64_t
 
	mÃ_numbî2
;

129 
uöt64_t
 
	mÃ_off£t
;

130 } 
	tDw¨f_Loc
;

133 
uöt64_t
 
	mld_l›c
;

134 
uöt64_t
 
	mld_hùc
;

135 
uöt16_t
 
	mld_˚¡s
;

136 
Dw¨f_Loc
 
	mld_s
;

137 } 
	tDw¨f_Locdesc
;

140 
uöt64_t
 
	mbl_Àn
;

141 *
	mbl_d©a
;

142 } 
	tDw¨f_Block
;

144 
	s_Dw¨f_Aâribuã
 {

145 
_Dw¨f_Dõ
 *
	m©_dõ
;

147 
uöt64_t
 
	m©_off£t
;

148 
uöt64_t
 
	m©_©åib
;

149 
uöt64_t
 
	m©_f‹m
;

150 
	m©_ödúe˘
;

152 
uöt64_t
 
	mu64
;

153 
öt64_t
 
	ms64
;

154 *
	ms
;

155 
uöt8_t
 *
	mu8p
;

156 } 
	mu
[2];

157 
Dw¨f_Block
 
	m©_block
;

158 
Dw¨f_Locdesc
 *
	m©_ld
;

159 
uöt64_t
 
	m©_ªlsym
;

160 c⁄° *
	m©_ªl£c
;

161 }
	tDw¨f_Aâribuã
;

163 
	s_Dw¨f_Dõ
 {

164 
uöt64_t
 
	mdõ_off£t
;

165 
uöt64_t
 
	mdõ_√xt_off
;

166 
uöt64_t
 
	mdõ_abnum
;

167 
uöt64_t
 
	mdõ_èg
;

168 
Dw¨f_Abbªv
 
	mdõ_ab
;

169 *
	mdõ_«me
;

170 
uöt8_t
 
	mdõ_©å_cou¡
;

171 
Dw¨f_CU
 *
	mcu_hódî
;

172 
_Dw¨f_Dõ
 *
	mcu_dõ
;

173 
Dw¨f_Aâribuã
 
	mdõ_©å
[
NATTRVAL
];

174 }
	tDw¨f_Dõ
;

177 
	mDW_OBJECT_MSB
,

178 
	mDW_OBJECT_LSB


179 } 
	tDw¨f_Endü¬ess
;

181 
	s_Dw¨f_Cõ
 {

182 
Dw¨f_Debug
 
	mcõ_dbg
;

183 
Dw¨f_Unsig√d
 
	mcõ_ödex
;

184 
Dw¨f_Unsig√d
 
	mcõ_off£t
;

185 
Dw¨f_Unsig√d
 
	mcõ_Àngth
;

186 
Dw¨f_HÆf
 
	mcõ_vîsi⁄
;

187 
uöt8_t
 *
	mcõ_augmít
;

188 
Dw¨f_Unsig√d
 
	mcõ_ehd©a
;

189 
Dw¨f_Unsig√d
 
	mcõ_ˇf
;

190 
Dw¨f_Sig√d
 
	mcõ_daf
;

191 
Dw¨f_Unsig√d
 
	mcõ_ø
;

192 
Dw¨f_Unsig√d
 
	mcõ_augÀn
;

193 
uöt8_t
 *
	mcõ_augd©a
;

194 
uöt8_t
 
	mcõ_fde_ícode
;

195 
Dw¨f_På
 
	mcõ_öôö°
;

196 
Dw¨f_Unsig√d
 
	mcõ_ö°Àn
;

199 
	s_Dw¨f_Fde
 {

200 
Dw¨f_Debug
 
	mfde_dbg
;

201 
Dw¨f_Cõ
 
	mfde_cõ
;

202 
Dw¨f_På
 
	mfde_addr
;

203 
Dw¨f_Unsig√d
 
	mfde_off£t
;

204 
Dw¨f_Unsig√d
 
	mfde_Àngth
;

205 
Dw¨f_Unsig√d
 
	mfde_cõoff
;

206 
Dw¨f_Unsig√d
 
	mfde_öôloc
;

207 
Dw¨f_Unsig√d
 
	mfde_adønge
;

208 
Dw¨f_Unsig√d
 
	mfde_augÀn
;

209 
uöt8_t
 *
	mfde_augd©a
;

210 
uöt8_t
 *
	mfde_ö°
;

211 
Dw¨f_Unsig√d
 
	mfde_ö°Àn
;

212 
Dw¨f_Unsig√d
 
	mfde_ö°ˇp
;

213 
Dw¨f_Unsig√d
 
	mfde_symndx
;

214 
Dw¨f_Unsig√d
 
	mfde_esymndx
;

215 
Dw¨f_Addr
 
	mfde_eoff
;

220 
Dw¨f_SmÆl
 
	mdw_off£t_ªÀv™t
;

221 
Dw¨f_HÆf
 
	mdw_ªgnum
;

222 
Dw¨f_Addr
 
	mdw_off£t
;

223 } 
	mruÀs
[
DW_REG_TABLE_SIZE
];

224 } 
	tDw¨f_RegèbÀ
;

226 
	s_Dw¨f_Eº‹
 {

227 
	mîr_îr‹
;

228 
	mîr_ñ„º‹
;

229 c⁄° *
	mîr_func
;

230 
	mîr_löe
;

231 
	mîr_msg
[1024];

232 } 
	tDw¨f_Eº‹
;

234 
	s_Dw¨f_Se˘i⁄
 {

235 c⁄° *
	mds_«me
;

236 
Dw¨f_SmÆl
 *
	mds_d©a
;

237 
Dw¨f_Unsig√d
 
	mds_addr
;

238 
Dw¨f_Unsig√d
 
	mds_size
;

239 } 
	tDw¨f_Se˘i⁄
;

241 
	s_Dw¨f_Löe_
 {

243 
Dw¨f_Addr
 
	m _addr
;

244 
Dw¨f_Unsig√d
 
	m _symndx
;

245 
Dw¨f_Unsig√d
 
	m _fûío
;

246 
Dw¨f_Unsig√d
 
	m _löío
;

247 
Dw¨f_Sig√d
 
	m _cﬁumn
;

248 
Dw¨f_Boﬁ
 
	m _bblock
;

249 
Dw¨f_Boﬁ
 
	m _°mt
;

250 
Dw¨f_Boﬁ
 
	m _íd£q
;

252 }
	t_Dw¨f_Löe
;

254 
	s_Dw¨f_LöeInfo_
 {

255 
Dw¨f_Unsig√d
 
	mli_Àngth
;

256 
Dw¨f_HÆf
 
	mli_vîsi⁄
;

257 
Dw¨f_Unsig√d
 
	mli_hdæí
;

258 
Dw¨f_SmÆl
 
	mli_möÀn
;

259 
Dw¨f_SmÆl
 
	mli_def°mt
;

260 
öt8_t
 
	mli_lba£
;

261 
Dw¨f_SmÆl
 
	mli_Ã™ge
;

262 
Dw¨f_SmÆl
 
	mli_›ba£
;

263 
Dw¨f_SmÆl
 *
	mli_›Àn
;

264 **
	mli_öcdús
;

265 
Dw¨f_Unsig√d
 
	mli_ö˛í
;

266 **
	mli_l‚¨øy
;

267 
Dw¨f_Unsig√d
 
	mli_lÊí
;

269 
_Dw¨f_Löe
 
	mli_löe
;

270 
Dw¨f_Unsig√d
 
	mli_ Àn
;

272 }
	t_Dw¨f_LöeInfo
;

274 
_Dw¨f_LöeInfo
 *
	tDw¨f_LöeInfo
;

275 
_Dw¨f_Löe
 *
	tDw¨f_Löe
;

277 
dw¨f_§˛öes
(
Dw¨f_Dõ
 *
dõ
, 
Dw¨f_Löe
 
löebuf
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
);

	@kern/dwarf_api.h

1 #i‚de‡
DWARF_API_H


2 
	#DWARF_API_H


	)

3 
	~<kîn/kdebug.h
>

5 
uöçå_t
 
ªad_£˘i⁄_hódîs
(uintptr_t, uintptr_t);

6 
föd_debug_£˘i⁄s
(
uöçå_t
);

7 
dw¨f_gë_pc_öfo
(
uöçå_t
 
addr
, 
Rùdebugöfo
 *
öfo
);

	@kern/dwarf_define.h

29 #i‚def 
_DWARF_DEFINE_H_


30 
	#_DWARF_DEFINE_H_


	)

32 
	#DW_TAG_¨øy_ty≥
 0x01

	)

33 
	#DW_TAG_˛ass_ty≥
 0x02

	)

34 
	#DW_TAG_íåy_poöt
 0x03

	)

35 
	#DW_TAG_íumî©i⁄_ty≥
 0x04

	)

36 
	#DW_TAG_f‹mÆ_∑ømëî
 0x05

	)

37 
	#DW_TAG_imp‹ãd_de˛¨©i⁄
 0x08

	)

38 
	#DW_TAG_œbñ
 0x0a

	)

39 
	#DW_TAG_Àxiˇl_block
 0x0b

	)

40 
	#DW_TAG_membî
 0x0d

	)

41 
	#DW_TAG_poöãr_ty≥
 0x0f

	)

42 
	#DW_TAG_ª„ªn˚_ty≥
 0x10

	)

43 
	#DW_TAG_compûe_unô
 0x11

	)

44 
	#DW_TAG_°rög_ty≥
 0x12

	)

45 
	#DW_TAG_°ru˘uª_ty≥
 0x13

	)

46 
	#DW_TAG_subroutöe_ty≥
 0x15

	)

47 
	#DW_TAG_ty≥def
 0x16

	)

48 
	#DW_TAG_uni⁄_ty≥
 0x17

	)

49 
	#DW_TAG_un•ecifõd_∑ømëîs
 0x18

	)

50 
	#DW_TAG_v¨ü¡
 0x19

	)

51 
	#DW_TAG_comm⁄_block
 0x1a

	)

52 
	#DW_TAG_comm⁄_ö˛usi⁄
 0x1b

	)

53 
	#DW_TAG_öhîô™˚
 0x1c

	)

54 
	#DW_TAG_ölöed_subroutöe
 0x1d

	)

55 
	#DW_TAG_moduÀ
 0x1e

	)

56 
	#DW_TAG_±r_to_membî_ty≥
 0x1f

	)

57 
	#DW_TAG_£t_ty≥
 0x20

	)

58 
	#DW_TAG_subønge_ty≥
 0x21

	)

59 
	#DW_TAG_wôh_°mt
 0x22

	)

60 
	#DW_TAG_ac˚ss_de˛¨©i⁄
 0x23

	)

61 
	#DW_TAG_ba£_ty≥
 0x24

	)

62 
	#DW_TAG_ˇtch_block
 0x25

	)

63 
	#DW_TAG_c⁄°_ty≥
 0x26

	)

64 
	#DW_TAG_c⁄°™t
 0x27

	)

65 
	#DW_TAG_íumî©‹
 0x28

	)

66 
	#DW_TAG_‰õnd
 0x2a

	)

67 
	#DW_TAG_«mñi°
 0x2b

	)

68 
	#DW_TAG_«mñi°_ôem
 0x2c

	)

69 
	#DW_TAG_∑cked_ty≥
 0x2d

	)

70 
	#DW_TAG_sub¥ogøm
 0x2e

	)

71 
	#DW_TAG_ãm∂©e_ty≥_∑ømëî
 0x2f

	)

72 
	#DW_TAG_ãm∂©e_ty≥_∑øm
 0x2f

	)

73 
	#DW_TAG_ãm∂©e_vÆue_∑ømëî
 0x30

	)

74 
	#DW_TAG_ãm∂©e_vÆue_∑øm
 0x30

	)

75 
	#DW_TAG_thrown_ty≥
 0x31

	)

76 
	#DW_TAG_åy_block
 0x32

	)

77 
	#DW_TAG_v¨ü¡_∑π
 0x33

	)

78 
	#DW_TAG_v¨übÀ
 0x34

	)

79 
	#DW_TAG_vﬁ©ûe_ty≥
 0x35

	)

80 
	#DW_TAG_dw¨f_¥o˚duª
 0x36

	)

81 
	#DW_TAG_ª°ri˘_ty≥
 0x37

	)

82 
	#DW_TAG_öãrÁ˚_ty≥
 0x38

	)

83 
	#DW_TAG_«me•a˚
 0x39

	)

84 
	#DW_TAG_imp‹ãd_moduÀ
 0x3a

	)

85 
	#DW_TAG_un•ecifõd_ty≥
 0x3b

	)

86 
	#DW_TAG_∑πül_unô
 0x3c

	)

87 
	#DW_TAG_imp‹ãd_unô
 0x3d

	)

88 
	#DW_TAG_c⁄dôi⁄
 0x3f

	)

89 
	#DW_TAG_sh¨ed_ty≥
 0x40

	)

90 
	#DW_TAG_ty≥_unô
 0x41

	)

91 
	#DW_TAG_rvÆue_ª„ªn˚_ty≥
 0x42

	)

92 
	#DW_TAG_ãm∂©e_Æüs
 0x43

	)

93 
	#DW_TAG_lo_u£r
 0x4080

	)

94 
	#DW_TAG_hi_u£r
 0xffff

	)

96 
	#DW_CHILDREN_no
 0x00

	)

97 
	#DW_CHILDREN_yes
 0x01

	)

99 
	#DW_AT_siblög
 0x01

	)

100 
	#DW_AT_loˇti⁄
 0x02

	)

101 
	#DW_AT_«me
 0x03

	)

102 
	#DW_AT_‹dîög
 0x09

	)

103 
	#DW_AT_subs¸_d©a
 0x0a

	)

104 
	#DW_AT_byã_size
 0x0b

	)

105 
	#DW_AT_bô_off£t
 0x0c

	)

106 
	#DW_AT_bô_size
 0x0d

	)

107 
	#DW_AT_ñemít_li°
 0x0f

	)

108 
	#DW_AT_°mt_li°
 0x10

	)

109 
	#DW_AT_low_pc
 0x11

	)

110 
	#DW_AT_high_pc
 0x12

	)

111 
	#DW_AT_œnguage
 0x13

	)

112 
	#DW_AT_membî
 0x14

	)

113 
	#DW_AT_dis¸
 0x15

	)

114 
	#DW_AT_dis¸_vÆue
 0x16

	)

115 
	#DW_AT_visibûôy
 0x17

	)

116 
	#DW_AT_imp‹t
 0x18

	)

117 
	#DW_AT_°rög_Àngth
 0x19

	)

118 
	#DW_AT_comm⁄_ª„ªn˚
 0x1a

	)

119 
	#DW_AT_comp_dú
 0x1b

	)

120 
	#DW_AT_c⁄°_vÆue
 0x1c

	)

121 
	#DW_AT_c⁄èöög_ty≥
 0x1d

	)

122 
	#DW_AT_deÁu…_vÆue
 0x1e

	)

123 
	#DW_AT_ölöe
 0x20

	)

124 
	#DW_AT_is_›ti⁄Æ
 0x21

	)

125 
	#DW_AT_lowî_bound
 0x22

	)

126 
	#DW_AT_¥odu˚r
 0x25

	)

127 
	#DW_AT_¥ŸŸy≥d
 0x27

	)

128 
	#DW_AT_ªtu∫_addr
 0x2a

	)

129 
	#DW_AT_°¨t_sc›e
 0x2c

	)

130 
	#DW_AT_bô_°ride
 0x2e

	)

131 
	#DW_AT_°ride_size
 0x2e

	)

132 
	#DW_AT_uµî_bound
 0x2f

	)

133 
	#DW_AT_ab°ø˘_‹igö
 0x31

	)

134 
	#DW_AT_ac˚ssibûôy
 0x32

	)

135 
	#DW_AT_addªss_˛ass
 0x33

	)

136 
	#DW_AT_¨tificül
 0x34

	)

137 
	#DW_AT_ba£_ty≥s
 0x35

	)

138 
	#DW_AT_ˇŒög_c⁄víti⁄
 0x36

	)

139 
	#DW_AT_cou¡
 0x37

	)

140 
	#DW_AT_d©a_membî_loˇti⁄
 0x38

	)

141 
	#DW_AT_de˛_cﬁumn
 0x39

	)

142 
	#DW_AT_de˛_fûe
 0x3a

	)

143 
	#DW_AT_de˛_löe
 0x3b

	)

144 
	#DW_AT_de˛¨©i⁄
 0x3c

	)

145 
	#DW_AT_dis¸_li°
 0x3d

	)

146 
	#DW_AT_ícodög
 0x3e

	)

147 
	#DW_AT_exã∫Æ
 0x3f

	)

148 
	#DW_AT_‰ame_ba£
 0x40

	)

149 
	#DW_AT_‰õnd
 0x41

	)

150 
	#DW_AT_idítifõr_ˇ£
 0x42

	)

151 
	#DW_AT_ma¸o_öfo
 0x43

	)

152 
	#DW_AT_«mñi°_ôem
 0x44

	)

153 
	#DW_AT_¥i‹ôy
 0x45

	)

154 
	#DW_AT_£gmít
 0x46

	)

155 
	#DW_AT_•ecifiˇti⁄
 0x47

	)

156 
	#DW_AT_°©ic_lök
 0x48

	)

157 
	#DW_AT_ty≥
 0x49

	)

158 
	#DW_AT_u£_loˇti⁄
 0x4a

	)

159 
	#DW_AT_v¨übÀ_∑ømëî
 0x4b

	)

160 
	#DW_AT_vútuÆôy
 0x4c

	)

161 
	#DW_AT_vèbÀ_ñem_loˇti⁄
 0x4d

	)

162 
	#DW_AT_Æloˇãd
 0x4e

	)

163 
	#DW_AT_assocüãd
 0x4f

	)

164 
	#DW_AT_d©a_loˇti⁄
 0x50

	)

165 
	#DW_AT_byã_°ride
 0x51

	)

166 
	#DW_AT_íåy_pc
 0x52

	)

167 
	#DW_AT_u£_UTF8
 0x53

	)

168 
	#DW_AT_exãnsi⁄
 0x54

	)

169 
	#DW_AT_ønges
 0x55

	)

170 
	#DW_AT_åampﬁöe
 0x56

	)

171 
	#DW_AT_ˇŒ_cﬁumn
 0x57

	)

172 
	#DW_AT_ˇŒ_fûe
 0x58

	)

173 
	#DW_AT_ˇŒ_löe
 0x59

	)

174 
	#DW_AT_des¸ùti⁄
 0x5a

	)

175 
	#DW_AT_bö¨y_sˇÀ
 0x5b

	)

176 
	#DW_AT_decimÆ_sˇÀ
 0x5c

	)

177 
	#DW_AT_smÆl
 0x5d

	)

178 
	#DW_AT_decimÆ_sign
 0x5e

	)

179 
	#DW_AT_digô_cou¡
 0x5f

	)

180 
	#DW_AT_pi˘uª_°rög
 0x60

	)

181 
	#DW_AT_muèbÀ
 0x61

	)

182 
	#DW_AT_thªads_sˇÀd
 0x62

	)

183 
	#DW_AT_ex∂icô
 0x63

	)

184 
	#DW_AT_obje˘_poöãr
 0x64

	)

185 
	#DW_AT_ídünôy
 0x65

	)

186 
	#DW_AT_ñemíèl
 0x66

	)

187 
	#DW_AT_puª
 0x67

	)

188 
	#DW_AT_ªcursive
 0x68

	)

189 
	#DW_AT_sig«tuª
 0x69

	)

190 
	#DW_AT_maö_sub¥ogøm
 0x6a

	)

191 
	#DW_AT_d©a_bô_off£t
 0x6b

	)

192 
	#DW_AT_c⁄°_ex¥
 0x6c

	)

193 
	#DW_AT_íum_˛ass
 0x6d

	)

194 
	#DW_AT_lökage_«me
 0x6e

	)

195 
	#DW_AT_lo_u£r
 0x2000

	)

196 
	#DW_AT_hi_u£r
 0x3fff

	)

198 
	#DW_FORM_addr
 0x01

	)

199 
	#DW_FORM_block2
 0x03

	)

200 
	#DW_FORM_block4
 0x04

	)

201 
	#DW_FORM_d©a2
 0x05

	)

202 
	#DW_FORM_d©a4
 0x06

	)

203 
	#DW_FORM_d©a8
 0x07

	)

204 
	#DW_FORM_°rög
 0x08

	)

205 
	#DW_FORM_block
 0x09

	)

206 
	#DW_FORM_block1
 0x0a

	)

207 
	#DW_FORM_d©a1
 0x0b

	)

208 
	#DW_FORM_Êag
 0x0c

	)

209 
	#DW_FORM_sd©a
 0x0d

	)

210 
	#DW_FORM_°Ω
 0x0e

	)

211 
	#DW_FORM_ud©a
 0x0f

	)

212 
	#DW_FORM_ªf_addr
 0x10

	)

213 
	#DW_FORM_ªf1
 0x11

	)

214 
	#DW_FORM_ªf2
 0x12

	)

215 
	#DW_FORM_ªf4
 0x13

	)

216 
	#DW_FORM_ªf8
 0x14

	)

217 
	#DW_FORM_ªf_ud©a
 0x15

	)

218 
	#DW_FORM_ödúe˘
 0x16

	)

219 
	#DW_FORM_£c_off£t
 0x17

	)

220 
	#DW_FORM_ex¥loc
 0x18

	)

221 
	#DW_FORM_Êag_¥e£¡
 0x19

	)

222 
	#DW_FORM_ªf_sig8
 0x20

	)

224 
	#DW_OP_addr
 0x03

	)

225 
	#DW_OP_dîef
 0x06

	)

226 
	#DW_OP_c⁄°1u
 0x08

	)

227 
	#DW_OP_c⁄°1s
 0x09

	)

228 
	#DW_OP_c⁄°2u
 0x0a

	)

229 
	#DW_OP_c⁄°2s
 0x0b

	)

230 
	#DW_OP_c⁄°4u
 0x0c

	)

231 
	#DW_OP_c⁄°4s
 0x0d

	)

232 
	#DW_OP_c⁄°8u
 0x0e

	)

233 
	#DW_OP_c⁄°8s
 0x0f

	)

234 
	#DW_OP_c⁄°u
 0x10

	)

235 
	#DW_OP_c⁄°s
 0x11

	)

236 
	#DW_OP_dup
 0x12

	)

237 
	#DW_OP_dr›
 0x13

	)

238 
	#DW_OP_ovî
 0x14

	)

239 
	#DW_OP_pick
 0x15

	)

240 
	#DW_OP_sw≠
 0x16

	)

241 
	#DW_OP_rŸ
 0x17

	)

242 
	#DW_OP_xdîef
 0x18

	)

243 
	#DW_OP_abs
 0x19

	)

244 
	#DW_OP_™d
 0x1a

	)

245 
	#DW_OP_div
 0x1b

	)

246 
	#DW_OP_möus
 0x1c

	)

247 
	#DW_OP_mod
 0x1d

	)

248 
	#DW_OP_mul
 0x1e

	)

249 
	#DW_OP_√g
 0x1f

	)

250 
	#DW_OP_nŸ
 0x20

	)

251 
	#DW_OP_‹
 0x21

	)

252 
	#DW_OP_∂us
 0x22

	)

253 
	#DW_OP_∂us_uc⁄°
 0x23

	)

254 
	#DW_OP_shl
 0x24

	)

255 
	#DW_OP_shr
 0x25

	)

256 
	#DW_OP_shø
 0x26

	)

257 
	#DW_OP_x‹
 0x27

	)

258 
	#DW_OP_bø
 0x28

	)

259 
	#DW_OP_eq
 0x29

	)

260 
	#DW_OP_ge
 0x2a

	)

261 
	#DW_OP_gt
 0x2b

	)

262 
	#DW_OP_À
 0x2c

	)

263 
	#DW_OP_…
 0x2d

	)

264 
	#DW_OP_√
 0x2e

	)

265 
	#DW_OP_skù
 0x2f

	)

266 
	#DW_OP_lô0
 0x30

	)

267 
	#DW_OP_lô1
 0x31

	)

268 
	#DW_OP_lô2
 0x32

	)

269 
	#DW_OP_lô3
 0x33

	)

270 
	#DW_OP_lô4
 0x34

	)

271 
	#DW_OP_lô5
 0x35

	)

272 
	#DW_OP_lô6
 0x36

	)

273 
	#DW_OP_lô7
 0x37

	)

274 
	#DW_OP_lô8
 0x38

	)

275 
	#DW_OP_lô9
 0x39

	)

276 
	#DW_OP_lô10
 0x3a

	)

277 
	#DW_OP_lô11
 0x3b

	)

278 
	#DW_OP_lô12
 0x3c

	)

279 
	#DW_OP_lô13
 0x3d

	)

280 
	#DW_OP_lô14
 0x3e

	)

281 
	#DW_OP_lô15
 0x3f

	)

282 
	#DW_OP_lô16
 0x40

	)

283 
	#DW_OP_lô17
 0x41

	)

284 
	#DW_OP_lô18
 0x42

	)

285 
	#DW_OP_lô19
 0x43

	)

286 
	#DW_OP_lô20
 0x44

	)

287 
	#DW_OP_lô21
 0x45

	)

288 
	#DW_OP_lô22
 0x46

	)

289 
	#DW_OP_lô23
 0x47

	)

290 
	#DW_OP_lô24
 0x48

	)

291 
	#DW_OP_lô25
 0x49

	)

292 
	#DW_OP_lô26
 0x4a

	)

293 
	#DW_OP_lô27
 0x4b

	)

294 
	#DW_OP_lô28
 0x4c

	)

295 
	#DW_OP_lô29
 0x4d

	)

296 
	#DW_OP_lô30
 0x4e

	)

297 
	#DW_OP_lô31
 0x4f

	)

298 
	#DW_OP_ªg0
 0x50

	)

299 
	#DW_OP_ªg1
 0x51

	)

300 
	#DW_OP_ªg2
 0x52

	)

301 
	#DW_OP_ªg3
 0x53

	)

302 
	#DW_OP_ªg4
 0x54

	)

303 
	#DW_OP_ªg5
 0x55

	)

304 
	#DW_OP_ªg6
 0x56

	)

305 
	#DW_OP_ªg7
 0x57

	)

306 
	#DW_OP_ªg8
 0x58

	)

307 
	#DW_OP_ªg9
 0x59

	)

308 
	#DW_OP_ªg10
 0x5a

	)

309 
	#DW_OP_ªg11
 0x5b

	)

310 
	#DW_OP_ªg12
 0x5c

	)

311 
	#DW_OP_ªg13
 0x5d

	)

312 
	#DW_OP_ªg14
 0x5e

	)

313 
	#DW_OP_ªg15
 0x5f

	)

314 
	#DW_OP_ªg16
 0x60

	)

315 
	#DW_OP_ªg17
 0x61

	)

316 
	#DW_OP_ªg18
 0x62

	)

317 
	#DW_OP_ªg19
 0x63

	)

318 
	#DW_OP_ªg20
 0x64

	)

319 
	#DW_OP_ªg21
 0x65

	)

320 
	#DW_OP_ªg22
 0x66

	)

321 
	#DW_OP_ªg23
 0x67

	)

322 
	#DW_OP_ªg24
 0x68

	)

323 
	#DW_OP_ªg25
 0x69

	)

324 
	#DW_OP_ªg26
 0x6a

	)

325 
	#DW_OP_ªg27
 0x6b

	)

326 
	#DW_OP_ªg28
 0x6c

	)

327 
	#DW_OP_ªg29
 0x6d

	)

328 
	#DW_OP_ªg30
 0x6e

	)

329 
	#DW_OP_ªg31
 0x6f

	)

330 
	#DW_OP_bªg0
 0x70

	)

331 
	#DW_OP_bªg1
 0x71

	)

332 
	#DW_OP_bªg2
 0x72

	)

333 
	#DW_OP_bªg3
 0x73

	)

334 
	#DW_OP_bªg4
 0x74

	)

335 
	#DW_OP_bªg5
 0x75

	)

336 
	#DW_OP_bªg6
 0x76

	)

337 
	#DW_OP_bªg7
 0x77

	)

338 
	#DW_OP_bªg8
 0x78

	)

339 
	#DW_OP_bªg9
 0x79

	)

340 
	#DW_OP_bªg10
 0x7a

	)

341 
	#DW_OP_bªg11
 0x7b

	)

342 
	#DW_OP_bªg12
 0x7c

	)

343 
	#DW_OP_bªg13
 0x7d

	)

344 
	#DW_OP_bªg14
 0x7e

	)

345 
	#DW_OP_bªg15
 0x7f

	)

346 
	#DW_OP_bªg16
 0x80

	)

347 
	#DW_OP_bªg17
 0x81

	)

348 
	#DW_OP_bªg18
 0x82

	)

349 
	#DW_OP_bªg19
 0x83

	)

350 
	#DW_OP_bªg20
 0x84

	)

351 
	#DW_OP_bªg21
 0x85

	)

352 
	#DW_OP_bªg22
 0x86

	)

353 
	#DW_OP_bªg23
 0x87

	)

354 
	#DW_OP_bªg24
 0x88

	)

355 
	#DW_OP_bªg25
 0x89

	)

356 
	#DW_OP_bªg26
 0x8a

	)

357 
	#DW_OP_bªg27
 0x8b

	)

358 
	#DW_OP_bªg28
 0x8c

	)

359 
	#DW_OP_bªg29
 0x8d

	)

360 
	#DW_OP_bªg30
 0x8e

	)

361 
	#DW_OP_bªg31
 0x8f

	)

362 
	#DW_OP_ªgx
 0x90

	)

363 
	#DW_OP_fbªg
 0x91

	)

364 
	#DW_OP_bªgx
 0x92

	)

365 
	#DW_OP_põ˚
 0x93

	)

366 
	#DW_OP_dîef_size
 0x94

	)

367 
	#DW_OP_xdîef_size
 0x95

	)

368 
	#DW_OP_n›
 0x96

	)

369 
	#DW_OP_push_obje˘_addªss
 0x97

	)

370 
	#DW_OP_ˇŒ2
 0x98

	)

371 
	#DW_OP_ˇŒ4
 0x99

	)

372 
	#DW_OP_ˇŒ_ªf
 0x9a

	)

373 
	#DW_OP_f‹m_és_addªss
 0x9b

	)

374 
	#DW_OP_ˇŒ_‰ame_cÁ
 0x9c

	)

375 
	#DW_OP_bô_põ˚
 0x9d

	)

376 
	#DW_OP_im∂icô_vÆue
 0x9e

	)

377 
	#DW_OP_°ack_vÆue
 0x9f

	)

378 
	#DW_OP_lo_u£r
 0xe0

	)

379 
	#DW_OP_GNU_push_és_addªss
 0xe0

	)

380 
	#DW_OP_hi_u£r
 0xff

	)

382 
	#DW_ATE_addªss
 0x1

	)

383 
	#DW_ATE_boﬁón
 0x2

	)

384 
	#DW_ATE_com∂ex_Êﬂt
 0x3

	)

385 
	#DW_ATE_Êﬂt
 0x4

	)

386 
	#DW_ATE_sig√d
 0x5

	)

387 
	#DW_ATE_sig√d_ch¨
 0x6

	)

388 
	#DW_ATE_unsig√d
 0x7

	)

389 
	#DW_ATE_unsig√d_ch¨
 0x8

	)

390 
	#DW_ATE_imagö¨y_Êﬂt
 0x9

	)

391 
	#DW_ATE_∑cked_decimÆ
 0xa

	)

392 
	#DW_ATE_numîic_°rög
 0xb

	)

393 
	#DW_ATE_edôed
 0xc

	)

394 
	#DW_ATE_sig√d_fixed
 0xd

	)

395 
	#DW_ATE_unsig√d_fixed
 0xe

	)

396 
	#DW_ATE_decimÆ_Êﬂt
 0xf

	)

397 
	#DW_ATE_lo_u£r
 0x80

	)

398 
	#DW_ATE_hi_u£r
 0xff

	)

400 
	#DW_ACCESS_public
 0x01

	)

401 
	#DW_ACCESS_¥Ÿe˘ed
 0x02

	)

402 
	#DW_ACCESS_¥iv©e
 0x03

	)

404 
	#DW_END_deÁu…
 0x00

	)

405 
	#DW_END_big
 0x01

	)

406 
	#DW_END_lôée
 0x02

	)

407 
	#DW_END_lo_u£r
 0x40

	)

408 
	#DW_END_high_u£r
 0xff

	)

410 
	#DW_VIS_loˇl
 0x01

	)

411 
	#DW_VIS_exp‹ãd
 0x02

	)

412 
	#DW_VIS_quÆifõd
 0x03

	)

414 
	#DW_VIRTUALITY_n⁄e
 0x00

	)

415 
	#DW_VIRTUALITY_vútuÆ
 0x01

	)

416 
	#DW_VIRTUALITY_puª_vútuÆ
 0x02

	)

418 
	#DW_LANG_C89
 0x0001

	)

419 
	#DW_LANG_C
 0x0002

	)

420 
	#DW_LANG_Ada83
 0x0003

	)

421 
	#DW_LANG_C_∂us_∂us
 0x0004

	)

422 
	#DW_LANG_Cobﬁ74
 0x0005

	)

423 
	#DW_LANG_Cobﬁ85
 0x0006

	)

424 
	#DW_LANG_F‹å™77
 0x0007

	)

425 
	#DW_LANG_F‹å™90
 0x0008

	)

426 
	#DW_LANG_Pasˇl83
 0x0009

	)

427 
	#DW_LANG_Moduœ2
 0x000a

	)

428 
	#DW_LANG_Java
 0x000b

	)

429 
	#DW_LANG_C99
 0x000c

	)

430 
	#DW_LANG_Ada95
 0x000d

	)

431 
	#DW_LANG_F‹å™95
 0x000e

	)

432 
	#DW_LANG_PLI
 0x000f

	)

433 
	#DW_LANG_ObjC
 0x0010

	)

434 
	#DW_LANG_ObjC_∂us_∂us
 0x0011

	)

435 
	#DW_LANG_UPC
 0x0012

	)

436 
	#DW_LANG_D
 0x0013

	)

437 
	#DW_LANG_lo_u£r
 0x8000

	)

438 
	#DW_LANG_hi_u£r
 0xffff

	)

440 
	#DW_ID_ˇ£_£nsôive
 0x00

	)

441 
	#DW_ID_up_ˇ£
 0x01

	)

442 
	#DW_ID_down_ˇ£
 0x02

	)

443 
	#DW_ID_ˇ£_ö£nsôive
 0x03

	)

445 
	#DW_CC_n‹mÆ
 0x01

	)

446 
	#DW_CC_¥ogøm
 0x02

	)

447 
	#DW_CC_noˇŒ
 0x03

	)

448 
	#DW_CC_lo_u£r
 0x40

	)

449 
	#DW_CC_hi_u£r
 0xff

	)

451 
	#DW_INL_nŸ_ölöed
 0x00

	)

452 
	#DW_INL_ölöed
 0x01

	)

453 
	#DW_INL_de˛¨ed_nŸ_ölöed
 0x02

	)

454 
	#DW_INL_de˛¨ed_ölöed
 0x03

	)

456 
	#DW_ORD_row_maj‹
 0x00

	)

457 
	#DW_ORD_cﬁ_maj‹
 0x01

	)

459 
	#DW_DS_unsig√d
 0x01

	)

460 
	#DW_DS_Àadög_ovîpunch
 0x02

	)

461 
	#DW_DS_åaûög_ovîpunch
 0x03

	)

462 
	#DW_DS_Àadög_£∑øã
 0x04

	)

463 
	#DW_DS_åaûög_£∑øã
 0x05

	)

465 
	#DW_DSC_œbñ
 0x00

	)

466 
	#DW_DSC_ønge
 0x01

	)

468 
	#DW_LNS_c›y
 0x01

	)

469 
	#DW_LNS_adv™˚_pc
 0x02

	)

470 
	#DW_LNS_adv™˚_löe
 0x03

	)

471 
	#DW_LNS_£t_fûe
 0x04

	)

472 
	#DW_LNS_£t_cﬁumn
 0x05

	)

473 
	#DW_LNS_√g©e_°mt
 0x06

	)

474 
	#DW_LNS_£t_basic_block
 0x07

	)

475 
	#DW_LNS_c⁄°_add_pc
 0x08

	)

476 
	#DW_LNS_fixed_adv™˚_pc
 0x09

	)

477 
	#DW_LNS_£t_¥ﬁogue_íd
 0x0a

	)

478 
	#DW_LNS_£t_ïûogue_begö
 0x0b

	)

479 
	#DW_LNS_£t_iß
 0x0c

	)

481 
	#DW_LNE_íd_£quí˚
 0x01

	)

482 
	#DW_LNE_£t_addªss
 0x02

	)

483 
	#DW_LNE_deföe_fûe
 0x03

	)

484 
	#DW_LNE_lo_u£r
 0x80

	)

485 
	#DW_LNE_hi_u£r
 0xff

	)

487 
	#DW_MACINFO_deföe
 0x01

	)

488 
	#DW_MACINFO_undef
 0x02

	)

489 
	#DW_MACINFO_°¨t_fûe
 0x03

	)

490 
	#DW_MACINFO_íd_fûe
 0x04

	)

491 
	#DW_MACINFO_víd‹_ext
 0xff

	)

493 
	#DW_CFA_adv™˚_loc
 0x40

	)

494 
	#DW_CFA_off£t
 0x80

	)

495 
	#DW_CFA_ª°‹e
 0xc0

	)

496 
	#DW_CFA_exãnded
 0

	)

498 
	#DW_CFA_n›
 0x00

	)

499 
	#DW_CFA_£t_loc
 0x01

	)

500 
	#DW_CFA_adv™˚_loc1
 0x02

	)

501 
	#DW_CFA_adv™˚_loc2
 0x03

	)

502 
	#DW_CFA_adv™˚_loc4
 0x04

	)

503 
	#DW_CFA_off£t_exãnded
 0x05

	)

504 
	#DW_CFA_ª°‹e_exãnded
 0x06

	)

505 
	#DW_CFA_undeföed
 0x07

	)

506 
	#DW_CFA_ßme_vÆue
 0x08

	)

507 
	#DW_CFA_ªgi°î
 0x09

	)

508 
	#DW_CFA_ªmembî_°©e
 0x0a

	)

509 
	#DW_CFA_ª°‹e_°©e
 0x0b

	)

510 
	#DW_CFA_def_cÁ
 0x0c

	)

511 
	#DW_CFA_def_cÁ_ªgi°î
 0x0d

	)

512 
	#DW_CFA_def_cÁ_off£t
 0x0e

	)

513 
	#DW_CFA_def_cÁ_ex¥essi⁄
 0x0f

	)

514 
	#DW_CFA_ex¥essi⁄
 0x10

	)

515 
	#DW_CFA_off£t_exãnded_sf
 0x11

	)

516 
	#DW_CFA_def_cÁ_sf
 0x12

	)

517 
	#DW_CFA_def_cÁ_off£t_sf
 0x13

	)

518 
	#DW_CFA_vÆ_off£t
 0x14

	)

519 
	#DW_CFA_vÆ_off£t_sf
 0x15

	)

520 
	#DW_CFA_vÆ_ex¥essi⁄
 0x16

	)

521 
	#DW_CFA_lo_u£r
 0x1c

	)

522 
	#DW_CFA_high_u£r
 0x3f

	)

528 
	#DW_EH_PE_ab•å
 0x00

	)

529 
	#DW_EH_PE_uÀb128
 0x01

	)

530 
	#DW_EH_PE_ud©a2
 0x02

	)

531 
	#DW_EH_PE_ud©a4
 0x03

	)

532 
	#DW_EH_PE_ud©a8
 0x04

	)

533 
	#DW_EH_PE_¶eb128
 0x09

	)

534 
	#DW_EH_PE_sd©a2
 0x0a

	)

535 
	#DW_EH_PE_sd©a4
 0x0b

	)

536 
	#DW_EH_PE_sd©a8
 0x0c

	)

537 
	#DW_EH_PE_p¸ñ
 0x10

	)

538 
	#DW_EH_PE_ãxåñ
 0x20

	)

539 
	#DW_EH_PE_d©¨ñ
 0x30

	)

540 
	#DW_EH_PE_fun¸ñ
 0x40

	)

541 
	#DW_EH_PE_Æig√d
 0x50

	)

542 
	#DW_EH_PE_omô
 0xff

	)

	@kern/dwarf_elf.h

1 #i‚de‡
ELF_H


2 
	#ELF_H


	)

4 
	#ELF_MAGIC
 0x464C457FU

	)

6 
	#EI_NIDENT
 16

	)

7 
	#EI_DATA
 5

	)

9 
	#ELFDATANONE
 0

	)

10 
	#ELFDATA2LSB
 1

	)

11 
	#ELFDATA2MSB
 2

	)

13 
	#ELFCLASSNONE
 0

	)

14 
	#ELFCLASS32
 1

	)

15 
	#ELFCLASS64
 2

	)

17 *
ñf_ba£_±r
;

19 
	#X86_64
 1

	)

21 #ifde‡
X86_64


23 
	s_Elf64
 {

26 
	me_idít
[16];

27 
uöt16_t
 
	me_ty≥
;

28 
uöt16_t
 
	me_machöe
;

29 
uöt32_t
 
	me_vîsi⁄
;

30 
uöt64_t
 
	me_íåy
;

31 
uöt64_t
 
	me_phoff
;

32 
uöt64_t
 
	me_shoff
;

33 
uöt32_t
 
	me_Êags
;

34 
uöt16_t
 
	me_ehsize
;

35 
uöt16_t
 
	me_phítsize
;

36 
uöt16_t
 
	me_phnum
;

37 
uöt16_t
 
	me_shítsize
;

38 
uöt16_t
 
	me_shnum
;

39 
uöt16_t
 
	me_sh°∫dx
;

40 }
	tElf64
;

42 
	s_Proghdr64
 {

43 
uöt32_t
 
	mp_ty≥
;

44 
uöt32_t
 
	mp_Êags
;

45 
uöt64_t
 
	mp_off£t
;

46 
uöt64_t
 
	mp_va
;

47 
uöt64_t
 
	mp_∑
;

48 
uöt64_t
 
	mp_fûesz
;

49 
uöt64_t
 
	mp_memsz
;

50 
uöt64_t
 
	mp_Æign
;

51 }
	tProghdr64
;

54 
uöt32_t
 
	msh_«me
;

55 
uöt32_t
 
	msh_ty≥
;

56 
uöt64_t
 
	msh_Êags
;

57 
uöt64_t
 
	msh_addr
;

58 
uöt64_t
 
	msh_off£t
;

59 
uöt64_t
 
	msh_size
;

60 
uöt32_t
 
	msh_lök
;

61 
uöt32_t
 
	msh_öfo
;

62 
uöt64_t
 
	msh_addølign
;

63 
uöt64_t
 
	msh_ítsize
;

64 } 
	tSe˘hdr64
;

66 
	#Elf
 
Elf64


	)

67 
	#Proghdr
 
Proghdr64


	)

68 
	#Se˘hdr
 
Se˘hdr64


	)

72 
	s_Elf32
 {

73 
	me_idít
[16];

74 
uöt16_t
 
	me_ty≥
;

75 
uöt16_t
 
	me_machöe
;

76 
uöt32_t
 
	me_vîsi⁄
;

77 
uöt32_t
 
	me_íåy
;

78 
uöt32_t
 
	me_phoff
;

79 
uöt32_t
 
	me_shoff
;

80 
uöt32_t
 
	me_Êags
;

81 
uöt16_t
 
	me_ehsize
;

82 
uöt16_t
 
	me_phítsize
;

83 
uöt16_t
 
	me_phnum
;

84 
uöt16_t
 
	me_shítsize
;

85 
uöt16_t
 
	me_shnum
;

86 
uöt16_t
 
	me_sh°∫dx
;

87 }
	tElf32
;

89 
	sProghdr
 {

90 
uöt32_t
 
	mp_ty≥
;

91 
uöt32_t
 
	mp_Êags
;

92 
uöt32_t
 
	mp_off£t
;

93 
uöt32_t
 
	mp_va
;

94 
uöt32_t
 
	mp_∑
;

95 
uöt32_t
 
	mp_fûesz
;

96 
uöt32_t
 
	mp_memsz
;

97 
uöt32_t
 
	mp_Æign
;

98 }
	tProghdr32
;

100 
	sSe˘hdr
 {

101 
uöt32_t
 
	msh_«me
;

102 
uöt32_t
 
	msh_ty≥
;

103 
uöt32_t
 
	msh_Êags
;

104 
uöt32_t
 
	msh_addr
;

105 
uöt32_t
 
	msh_off£t
;

106 
uöt32_t
 
	msh_size
;

107 
uöt32_t
 
	msh_lök
;

108 
uöt32_t
 
	msh_öfo
;

109 
uöt32_t
 
	msh_addølign
;

110 
uöt32_t
 
	msh_ítsize
;

111 }
	tSe˘hdr32
;

113 
	#Elf
 
Elf32


	)

114 
	#Proghdr
 
Proghdr32


	)

115 
	#Se˘hdr
 
Se˘hdr32


	)

120 
	#ELF_PROG_LOAD
 1

	)

123 
	#ELF_PROG_FLAG_EXEC
 1

	)

124 
	#ELF_PROG_FLAG_WRITE
 2

	)

125 
	#ELF_PROG_FLAG_READ
 4

	)

128 
	#ELF_SHT_NULL
 0

	)

129 
	#ELF_SHT_PROGBITS
 1

	)

130 
	#ELF_SHT_SYMTAB
 2

	)

131 
	#ELF_SHT_STRTAB
 3

	)

134 
	#ELF_SHN_UNDEF
 0

	)

	@kern/dwarf_error.h

1 #i‚de‡
DWARF_ERROR_H_


2 
	#DWARF_ERROR_H_


	)

4 
	#DW_DLV_NO_ENTRY
 -1

	)

5 
	#DW_DLV_OK
 0

	)

6 
	#DW_DLV_ERROR
 1

	)

9 
	mDW_DLE_NONE
,

10 
	mDW_DLE_ERROR
,

11 
	mDW_DLE_ARGUMENT
,

12 
	mDW_DLE_DEBUG_INFO_NULL
,

13 
	mDW_DLE_NO_ENTRY
,

14 
	mDW_DLE_MEMORY
,

15 
	mDW_DLE_ELF
,

16 
	mDW_DLE_CU_LENGTH_ERROR
,

17 
	mDW_DLE_VERSION_STAMP_ERROR
,

18 
	mDW_DLE_DEBUG_ABBREV_NULL
,

19 
	mDW_DLE_DIE_NO_CU_CONTEXT
,

20 
	mDW_DLE_LOC_EXPR_BAD
,

21 
	mDW_DLE_EXPR_LENGTH_BAD
,

22 
	mDW_DLE_DEBUG_LOC_SECTION_SHORT
,

23 
	mDW_DLE_ATTR_FORM_BAD
,

24 
	mDW_DLE_DEBUG_LINE_LENGTH_BAD
,

25 
	mDW_DLE_LINE_FILE_NUM_BAD
,

26 
	mDW_DLE_DIR_INDEX_BAD
,

27 
	mDW_DLE_DEBUG_FRAME_LENGTH_BAD
,

28 
	mDW_DLE_NO_CIE_FOR_FDE
,

29 
	mDW_DLE_FRAME_AUGMENTATION_UNKNOWN
,

30 
	mDW_DLE_FRAME_INSTR_EXEC_ERROR
,

31 
	mDW_DLE_FRAME_VERSION_BAD
,

32 
	mDW_DLE_FRAME_TABLE_COL_BAD
,

33 
	mDW_DLE_DF_REG_NUM_TOO_HIGH
,

34 
	mDW_DLE_PC_NOT_IN_FDE_RANGE
,

35 
	mDW_DLE_ARANGE_OFFSET_BAD
,

36 
	mDW_DLE_DEBUG_MACRO_INCONSISTENT
,

37 
	mDW_DLE_ELF_SECT_ERR
,

38 
	mDW_DLE_NUM


41 
	#DWARF_SET_ERROR
(
x
, 
y
 ,
z
Ë{ }

	)

	@kern/dwarf_lineno.h

1 #i‚de‡
DWARF_LINENO_H


3 
Dw¨f_Aâribuã
 *
_dw¨f_©å_föd
(
Dw¨f_Dõ
 *, 
uöt16_t
);

7 
_dw¨f_löío_add_fûe
(
Dw¨f_LöeInfo
, 
uöt8_t
 **, c⁄° *, 
Dw¨f_Eº‹
 *, 
Dw¨f_Debug
);

10 
_dw¨f_löío_run_¥ogøm
(
Dw¨f_CU
 *
cu
, 
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 *
p
,

11 
uöt8_t
 *
≥
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
);

14 
_dw¨f_löío_add_fûe
(
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 **
p
, c⁄° *
compdú
,

15 
Dw¨f_Eº‹
 *
îr‹
, 
Dw¨f_Debug
 
dbg
);

18 
_dw¨f_löío_öô
(
Dw¨f_Dõ
 *
dõ
, 
uöt64_t
 
off£t
, 
Dw¨f_LöeInfo
 
löfo
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
);

	@kern/elf_rw.c

1 
	~<öc/x86.h
>

2 
	~<öc/°dio.h
>

3 
	~<öc/as£π.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/°rög.h
>

6 
	~"dw¨f_ñf.h
"

7 
	~"dw¨f.h
"

9 
	#PADDR
(
X
Ë((
phyßddr_t
)X - 
KERNBASE
)

	)

11 
	#SECTSIZE
 512

	)

12 
	#OFFSET_CORRECT
(
x
Ë(x - 
	`ROUNDDOWN
(x, 
SECTSIZE
))

	)

13 
	#KELFHDR
 (0x10000+
KERNBASE
)

	)

16 
	mDEBUG_INFO
,

17 
	mDEBUG_ABBREV
,

18 
	mDEBUG_FRAME
,

19 
	mDEBUG_LINE
,

20 
	mDEBUG_STR
,

21 
	mNDEBUG_SECT
,

24 
Dw¨f_Se˘i⁄
 
	g£˘i⁄_öfo
[
NDEBUG_SECT
] = {

25 {.
ds_«me
=".debug_öfo", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

26 {.
	gds_«me
=".debug_abbªv", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

27 {.
	gds_«me
=".eh_‰ame", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

28 {.
	gds_«me
=".debug_löe", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

29 {.
	gds_«me
=".debug_°r", .
	gds_d©a
=
NULL
, .
	gds_addr
=0, .
	gds_size
=0},

32 
ªad£˘
(*, 
uöt64_t
);

33 
ªad£g
(
uöt64_t
, uint64_t, uint64_t, uint64_t*);

35 
uöçå_t


36 
ªad_£˘i⁄_hódîs
(
uöçå_t
, uintptr_t);

38 
Dw¨f_Se˘i⁄
 *

39 
	$_dw¨f_föd_£˘i⁄
(c⁄° *
«me
)

41 
Dw¨f_Se˘i⁄
 *
ªt
=
NULL
;

42 
i
;

44 
i
=0; i < 
NDEBUG_SECT
; i++) {

45 if(!
	`°rcmp
(
£˘i⁄_öfo
[
i
].
ds_«me
, 
«me
)) {

46 
ªt
 = (
£˘i⁄_öfo
 + 
i
);

51  
ªt
;

52 
	}
}

54 
	$föd_debug_£˘i⁄s
(
uöçå_t
 
ñf
)

56 
Elf
 *
ehdr
 = (El‡*)
ñf
;

57 
uöçå_t
 
debug_addªss
 = 
USTABDATA
;

58 
Se˘hdr
 *
sh
 = (Se˘hd∏*)(((
uöt8_t
 *)
ehdr
 +Éhdr->
e_shoff
));

59 
Se˘hdr
 *
sh°r_èb
 = 
sh
 + 
ehdr
->
e_sh°∫dx
;

60 
Se˘hdr
* 
esh
 = 
sh
 + 
ehdr
->
e_shnum
;

61 ;
sh
 < 
esh
; sh++) {

62 * 
«me
 = (*)((
uöt8_t
*)
ñf
 + 
sh°r_èb
->
sh_off£t
Ë+ 
sh
->
sh_«me
;

63 if(!
	`°rcmp
(
«me
, ".debug_info")) {

64 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

65 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_addr
 = 
debug_addªss
;

66 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_size
 = 
sh
->
sh_size
;

67 
debug_addªss
 +
sh
->
sh_size
;

68 } if(!
	`°rcmp
(
«me
, ".debug_abbrev")) {

69 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

70 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_addr
 = 
debug_addªss
;

71 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_size
 = 
sh
->
sh_size
;

72 
debug_addªss
 +
sh
->
sh_size
;

73 } if(!
	`°rcmp
(
«me
, ".debug_line")){

74 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

75 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_addr
 = 
debug_addªss
;

76 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_size
 = 
sh
->
sh_size
;

77 
debug_addªss
 +
sh
->
sh_size
;

78 } if(!
	`°rcmp
(
«me
, ".eh_frame")){

79 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_d©a
 = (
uöt8_t
*)
sh
->
sh_addr
;

80 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_addr
 = 
sh
->
sh_addr
;

81 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_size
 = 
sh
->
sh_size
;

82 
debug_addªss
 +
sh
->
sh_size
;

83 } if(!
	`°rcmp
(
«me
, ".debug_str")) {

84 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_d©a
 = (
uöt8_t
*)
debug_addªss
;

85 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_addr
 = 
debug_addªss
;

86 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_size
 = 
sh
->
sh_size
;

87 
debug_addªss
 +
sh
->
sh_size
;

91 
	}
}

93 
uöt64_t


94 
	$ªad_£˘i⁄_hódîs
(
uöçå_t
 
ñfhdr
, uöçå_à
to_va
)

96 
Se˘hdr
* 
£˘hdr_±r
[20] = {0};

97 * 
kvba£
 = 
	`ROUNDUP
((*)
to_va
, 
SECTSIZE
);

98 
uöt64_t
 
kvoff£t
 = 0;

99 *
‹ig_£˘hdr
 = (*)
kvba£
;

100 * 
£˘hdr
 = 
NULL
;

101 
uöt64_t
 
off£t
;

102 if(
ñfhdr
 =
KELFHDR
)

103 
off£t
 = ((
Elf
*)
ñfhdr
)->
e_shoff
;

105 
off£t
 = ((
Elf
*)
ñfhdr
)->
e_shoff
 + (ñfhd∏- 
KERNBASE
);

107 
numSe˘i⁄Hódîs
 = ((
Elf
*)
ñfhdr
)->
e_shnum
;

108 
sizeSe˘i⁄s
 = ((
Elf
*)
ñfhdr
)->
e_shítsize
;

109 *
«mëab
;

110 
i
;

111 
uöt64_t
 
ãmp
;

112 *
«me
;

114 
Elf
 *
ehdr
 = (El‡*)
ñfhdr
;

115 
Se˘hdr
 *
£c_«me
;

117 
	`ªad£g
((
uöt64_t
)
‹ig_£˘hdr
 , 
numSe˘i⁄Hódîs
 * 
sizeSe˘i⁄s
,

118 
off£t
, &
kvoff£t
);

119 
£˘hdr
 = (*)
‹ig_£˘hdr
 + (
off£t
 - 
	`ROUNDDOWN
(off£t, 
SECTSIZE
));

120 
i
 = 0; i < 
numSe˘i⁄Hódîs
; i++)

122 
£˘hdr_±r
[
i
] = (
Se˘hdr
*)(
£˘hdr
) + i;

125 
£c_«me
 = 
£˘hdr_±r
[
ehdr
->
e_sh°∫dx
];

126 
ãmp
 = 
kvoff£t
;

127 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£c_«me
->
sh_size
,

128 
£c_«me
->
sh_off£t
, &
kvoff£t
);

129 
«mëab
 = (*)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£c_«me
->
sh_off£t
);

132 
i
 = 0; i < 
numSe˘i⁄Hódîs
; i++)

134 
«me
 = (*)(
«mëab
 + 
£˘hdr_±r
[
i
]->
sh_«me
);

135 
	`as£π
(
kvoff£t
 % 
SECTSIZE
 == 0);

136 
ãmp
 = 
kvoff£t
;

137 #ifde‡
DWARF_DEBUG


138 
	`˝rötf
("Se˘Name: %s\n", 
«me
);

140 if(!
	`°rcmp
(
«me
, ".debug_info"))

142 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

143 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

144 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

145 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_INFO].
ds_d©a
;

146 
£˘i⁄_öfo
[
DEBUG_INFO
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

148 if(!
	`°rcmp
(
«me
, ".debug_abbrev"))

150 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

151 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

152 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

153 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_ABBREV].
ds_d©a
;

154 
£˘i⁄_öfo
[
DEBUG_ABBREV
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

156 if(!
	`°rcmp
(
«me
, ".debug_line"))

158 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

159 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

160 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

161 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_LINE].
ds_d©a
;

162 
£˘i⁄_öfo
[
DEBUG_LINE
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

164 if(!
	`°rcmp
(
«me
, ".eh_frame"))

166 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_d©a
 = (
uöt8_t
 *)
£˘hdr_±r
[
i
]->
sh_addr
;

167 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_FRAME].
ds_d©a
;

168 
£˘i⁄_öfo
[
DEBUG_FRAME
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

170 if(!
	`°rcmp
(
«me
, ".debug_str"))

172 
	`ªad£g
((
uöt64_t
)((*)
kvba£
 + 
kvoff£t
), 
£˘hdr_±r
[
i
]->
sh_size
,

173 
£˘hdr_±r
[
i
]->
sh_off£t
, &
kvoff£t
);

174 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_d©a
 = (
uöt8_t
 *)((*)
kvba£
 + 
ãmp
Ë+ 
	`OFFSET_CORRECT
(
£˘hdr_±r
[
i
]->
sh_off£t
);

175 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_addr
 = (
uöçå_t
)£˘i⁄_öfo[DEBUG_STR].
ds_d©a
;

176 
£˘i⁄_öfo
[
DEBUG_STR
].
ds_size
 = 
£˘hdr_±r
[
i
]->
sh_size
;

180  ((
uöçå_t
)
kvba£
 + 
kvoff£t
);

181 
	}
}

186 
	$ªad£g
(
uöt64_t
 
∑
, uöt64_à
cou¡
, uöt64_à
off£t
, uöt64_t* 
kvoff£t
)

188 
uöt64_t
 
íd_∑
;

189 
uöt64_t
 
‹goff
 = 
off£t
;

191 
íd_∑
 = 
∑
 + 
cou¡
;

193 
	`as£π
(
∑
 % 
SECTSIZE
 == 0);

195 
∑
 &~(
SECTSIZE
 - 1);

198 
off£t
 = (off£à/ 
SECTSIZE
) + 1;

203 
∑
 < 
íd_∑
) {

204 
	`ªad£˘
((
uöt8_t
*Ë
∑
, 
off£t
);

205 
∑
 +
SECTSIZE
;

206 *
kvoff£t
 +
SECTSIZE
;

207 
off£t
++;

210 if(((
‹goff
 % 
SECTSIZE
Ë+ 
cou¡
) > SECTSIZE)

212 
	`ªad£˘
((
uöt8_t
*Ë
∑
, 
off£t
);

213 *
kvoff£t
 +
SECTSIZE
;

215 
	`as£π
(*
kvoff£t
 % 
SECTSIZE
 == 0);

216 
	}
}

219 
	$waôdisk
()

222 (
	`öb
(0x1F7) & 0xC0) != 0x40)

224 
	}
}

227 
	$ªad£˘
(*
d°
, 
uöt64_t
 
off£t
)

230 
	`waôdisk
();

232 
	`outb
(0x1F2, 1);

233 
	`outb
(0x1F3, 
off£t
);

234 
	`outb
(0x1F4, 
off£t
 >> 8);

235 
	`outb
(0x1F5, 
off£t
 >> 16);

236 
	`outb
(0x1F6, (
off£t
 >> 24) | 0xE0);

237 
	`outb
(0x1F7, 0x20);

240 
	`waôdisk
();

243 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

244 
	}
}

	@kern/init.c

3 
	~<öc/°dio.h
>

4 
	~<öc/°rög.h
>

5 
	~<öc/as£π.h
>

6 
	~<öc/memœyout.h
>

8 
	~<kîn/m⁄ô‹.h
>

9 
	~<kîn/c⁄sﬁe.h
>

10 
	~<kîn/kdebug.h
>

11 
	~<kîn/dw¨f_≠i.h
>

13 
uöt64_t
 
	gíd_debug
;

18 
	$ã°_backåa˚
(
x
)

20 
	`˝rötf
("íãrögÅe°_backåa˚ %d\n", 
x
);

21 i‡(
x
 > 0)

22 
	`ã°_backåa˚
(
x
-1);

24 
	`m⁄_backåa˚
(0, 0, 0);

25 
	`˝rötf
("ÀavögÅe°_backåa˚ %d\n", 
x
);

26 
	}
}

29 
	$i386_öô
()

33 
ed©a
[], 
íd
[];

38 
	`mem£t
(
ed©a
, 0, 
íd
 -Édata);

42 
	`c⁄s_öô
();

44 
	`˝rötf
("6828 decimal is %o octal!\n", 6828);

46 
íd
[];

47 
íd_debug
 = 
	`ªad_£˘i⁄_hódîs
((0x10000+
KERNBASE
), (
uöçå_t
)
íd
);

51 
	`ã°_backåa˚
(5);

55 
	`m⁄ô‹
(
NULL
);

56 
	}
}

63 c⁄° *
	g∑nic°r
;

70 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

72 
va_li°
 
≠
;

74 i‡(
∑nic°r
)

75 
dód
;

76 
∑nic°r
 = 
fmt
;

79 
__asm
 
	`__vﬁ©ûe
("cli; cld");

81 
	`va_°¨t
(
≠
, 
fmt
);

82 
	`˝rötf
("kî√»∑ni¯© %s:%d: ", 
fûe
, 
löe
);

83 
	`v˝rötf
(
fmt
, 
≠
);

84 
	`˝rötf
("\n");

85 
	`va_íd
(
≠
);

87 
dód
:

90 
	`m⁄ô‹
(
NULL
);

91 
	}
}

95 
	$_w¨n
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

97 
va_li°
 
≠
;

99 
	`va_°¨t
(
≠
, 
fmt
);

100 
	`˝rötf
("kî√»w¨nögáà%s:%d: ", 
fûe
, 
löe
);

101 
	`v˝rötf
(
fmt
, 
≠
);

102 
	`˝rötf
("\n");

103 
	`va_íd
(
≠
);

104 
	}
}

	@kern/kdebug.c

1 
	~<öc/°ab.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/memœyout.h
>

4 
	~<öc/as£π.h
>

6 
	~<kîn/kdebug.h
>

7 
	~<kîn/dw¨f.h
>

8 
	~<kîn/dw¨f_≠i.h
>

9 
	~<kîn/dw¨f_ñf.h
>

10 
	~<kîn/dw¨f_deföe.h
>

11 
	~<kîn/dw¨f_îr‹.h
>

14 
_dw¨f_öô
(
Dw¨f_Debug
 
dbg
, *
obj
);

15 
_gë_√xt_cu
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
);

16 
dw¨f_siblögof
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Dõ
 *
dõ
, Dw¨f_Dõ *
ªt_dõ
,

17 
Dw¨f_CU
 *
cu
);

18 
Dw¨f_Aâribuã
 * 
_dw¨f_©å_föd
(
Dw¨f_Dõ
 *, 
uöt16_t
);

19 
dw¨f_chûd
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
, 
Dw¨f_Dõ
 *
dõ
,

20 
Dw¨f_Dõ
 *
ªt_dõ
);

21 
dw¨f_offdõ
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 
off£t
, 
Dw¨f_Dõ
 *
ªt_dõ
,

22 
Dw¨f_CU
 
cu
);

23 
Dw¨f_Se˘i⁄
 * 
_dw¨f_föd_£˘i⁄
(c⁄° *
«me
);

25 
_Dw¨f_Debug
 
	gmydebug
;

26 
Dw¨f_Debug
 
	gdbg
 = &
mydebug
;

27 #ifde‡
X86_64


29 c⁄° *c⁄° 
	gdw¨f_ªg«mes_x86_64
[] =

45 "es", "cs", "ss", "ds", "fs", "gs", 
NULL
, NULL,

46 "fs.ba£", "gs.ba£", 
NULL
, NULL,

51 
	#ªg_«mes_±r
 
dw¨f_ªg«mes_x86_64


	)

54 c⁄° *c⁄° 
	gdw¨f_ªg«mes_i386
[] =

58 "eù", "eÊags", 
NULL
,

61 
NULL
, NULL,

67 "es", "cs", "ss", "ds", "fs", "gs", 
NULL
, NULL,

71 
	#ªg_«mes_±r
 
dw¨f_ªg«mes_i386


	)

76 
	$li°_func_dõ
(
Rùdebugöfo
 *
öfo
, 
Dw¨f_Dõ
 *
dõ
, 
uöt64_t
 
addr
)

78 
_Dw¨f_Löe
 
 
;

79 
Dw¨f_Aâribuã
 *
low
;

80 
Dw¨f_Aâribuã
 *
high
;

81 
Dw¨f_CU
 *
cu
 = 
dõ
->
cu_hódî
;

82 
Dw¨f_Dõ
 *
cudõ
 = 
dõ
->
cu_dõ
;

83 
Dw¨f_Dõ
 
ªt
, 
sib
=*
dõ
;

84 
Dw¨f_Aâribuã
 *
©å
;

85 
uöt64_t
 
off£t
;

86 
uöt64_t
 
ªt_vÆ
=8;

88 if(
dõ
->
dõ_èg
 !
DW_TAG_sub¥ogøm
)

91 
	`mem£t
(&
 
, 0, (
_Dw¨f_Löe
));

93 
low
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_low_pc
);

94 
high
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_high_pc
);

96 if((
low
 && (low->
u
[0].
u64
 < 
addr
)Ë&& (
high
 && (high->u[0].u64 >áddr)))

98 
öfo
->
rù_fûe
 = 
dõ
->
cu_dõ
->
dõ_«me
;

100 
öfo
->
rù_‚_«me
 = 
dõ
->
dõ_«me
;

101 
öfo
->
rù_‚_«mñí
 = 
	`°æí
(
dõ
->
dõ_«me
);

103 
öfo
->
rù_‚_addr
 = (
uöçå_t
)
low
->
u
[0].
u64
;

105 
	`as£π
(
dõ
->
cu_dõ
);

106 
	`dw¨f_§˛öes
(
dõ
->
cu_dõ
, &
 
, 
addr
, 
NULL
);

108 
öfo
->
rù_löe
 = 
 
.
 _löío
;

109 
öfo
->
rù_‚_«rg
 = 0;

111 
Dw¨f_Aâribuã
* 
©å
;

113 if(
	`dw¨f_chûd
(
dbg
, 
cu
, &
sib
, &
ªt
Ë!
DW_DLE_NO_ENTRY
)

115 if(
ªt
.
dõ_èg
 !
DW_TAG_f‹mÆ_∑ømëî
)

116 
œ°
;

118 
©å
 = 
	`_dw¨f_©å_föd
(&
ªt
, 
DW_AT_ty≥
);

120 
åy_agaö
:

121 if(
©å
 !
NULL
)

123 
off£t
 = (
uöt64_t
)
cu
->
cu_off£t
 + 
©å
->
u
[0].
u64
;

124 
	`dw¨f_offdõ
(
dbg
, 
off£t
, &
sib
, *
cu
);

125 
©å
 = 
	`_dw¨f_©å_föd
(&
sib
, 
DW_AT_byã_size
);

127 if(
©å
 !
NULL
)

129 
ªt_vÆ
 = 
©å
->
u
[0].
u64
;

133 
©å
 = 
	`_dw¨f_©å_föd
(&
sib
, 
DW_AT_ty≥
);

134 
åy_agaö
;

137 
öfo
->
size_‚_¨g
[öfo->
rù_‚_«rg
] = 
ªt_vÆ
;

138 
öfo
->
rù_‚_«rg
++;

139 
sib
 = 
ªt
;

141 
	`dw¨f_siblögof
(
dbg
, &
sib
, &
ªt
, 
cu
Ë=
DW_DLV_OK
)

143 if(
ªt
.
dõ_èg
 !
DW_TAG_f‹mÆ_∑ømëî
)

146 
©å
 = 
	`_dw¨f_©å_föd
(&
ªt
, 
DW_AT_ty≥
);

148 if(
©å
 !
NULL
)

150 
off£t
 = (
uöt64_t
)
cu
->
cu_off£t
 + 
©å
->
u
[0].
u64
;

151 
	`dw¨f_offdõ
(
dbg
, 
off£t
, &
sib
, *
cu
);

152 
©å
 = 
	`_dw¨f_©å_föd
(&
sib
, 
DW_AT_byã_size
);

154 if(
©å
 !
NULL
)

156 
ªt_vÆ
 = 
©å
->
u
[0].
u64
;

160 
öfo
->
size_‚_¨g
[öfo->
rù_‚_«rg
]=
ªt_vÆ
;

161 
öfo
->
rù_‚_«rg
++;

162 
sib
 = 
ªt
;

165 
œ°
:

170 
	}
}

180 
	$debugöfo_rù
(
uöçå_t
 
addr
, 
Rùdebugöfo
 *
öfo
)

182 
Env
* 
œ°ív
 = 
NULL
;

183 * 
ñf
;

184 
Dw¨f_Se˘i⁄
 *
£˘
;

185 
Dw¨f_CU
 
cu
;

186 
Dw¨f_Dõ
 
dõ
, 
cudõ
, 
dõ2
;

187 
Dw¨f_RegèbÀ
 *
π
 = 
NULL
;

189 
uöt64_t
 
pc
 = (
uöçå_t
)
addr
;

193 
öfo
->
rù_fûe
 = "<unknown>";

194 
öfo
->
rù_löe
 = 0;

195 
öfo
->
rù_‚_«me
 = "<unknown>";

196 
öfo
->
rù_‚_«mñí
 = 9;

197 
öfo
->
rù_‚_addr
 = 
addr
;

198 
öfo
->
rù_‚_«rg
 = 0;

201 i‡(
addr
 >
ULIM
) {

202 
ñf
 = (*)0x10000 + 
KERNBASE
;

205 
	`∑nic
("Useráddress");

209 
	`_dw¨f_öô
(
dbg
, 
ñf
);

211 
£˘
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_info");

212 
dbg
->
dbg_öfo_off£t_ñf
 = (
uöt64_t
)
£˘
->
ds_d©a
;

213 
dbg
->
dbg_öfo_size
 = 
£˘
->
ds_size
;

215 
	`as£π
(
dbg
->
dbg_öfo_size
);

216 
	`_gë_√xt_cu
(
dbg
, &
cu
) == 0)

218 if(
	`dw¨f_siblögof
(
dbg
, 
NULL
, &
cudõ
, &
cu
Ë=
DW_DLE_NO_ENTRY
)

222 
cudõ
.
cu_hódî
 = &
cu
;

223 
cudõ
.
cu_dõ
 = 
NULL
;

225 if(
	`dw¨f_chûd
(
dbg
, &
cu
, &
cudõ
, &
dõ
Ë=
DW_DLE_NO_ENTRY
)

229 
dõ
.
cu_hódî
 = &
cu
;

230 
dõ
.
cu_dõ
 = &
cudõ
;

233 if(
	`li°_func_dõ
(
öfo
, &
dõ
, 
addr
))

234 
föd_d⁄e
;

235 if(
	`dw¨f_siblögof
(
dbg
, &
dõ
, &
dõ2
, &
cu
) < 0)

237 
dõ
 = 
dõ2
;

238 
dõ
.
cu_hódî
 = &
cu
;

239 
dõ
.
cu_dõ
 = &
cudõ
;

245 
föd_d⁄e
:

248 
	}
}

	@kern/kdebug.h

1 #i‚de‡
JOS_KERN_KDEBUG_H


2 
	#JOS_KERN_KDEBUG_H


	)

4 
	~<öc/ty≥s.h
>

5 
	~<kîn/dw¨f.h
>

8 
	sRùdebugöfo
 {

9 c⁄° *
	mrù_fûe
;

10 
	mrù_löe
;

12 c⁄° *
	mrù_‚_«me
;

14 
	mrù_‚_«mñí
;

15 
uöçå_t
 
	mrù_‚_addr
;

16 
	mrù_‚_«rg
;

17 
	msize_‚_¨g
[10];

18 
Dw¨f_RegèbÀ
 
	mªg_èbÀ
;

21 
debugöfo_rù
(
uöçå_t
 
rù
, 
Rùdebugöfo
 *
öfo
);

	@kern/libdwarf_frame.c

1 
	~<öc/ty≥s.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/as£π.h
>

4 
	~"dw¨f_îr‹.h
"

5 
	~"dw¨f_deföe.h
"

6 
	~"dw¨f.h
"

9 
	#¥ötf
 
˝rötf


	)

11 
Dw¨f_Debug
 
dbg
;

13 
_dw¨f_gë_√xt_fde
(
Dw¨f_Debug
, , 
Dw¨f_Eº‹
 *, 
Dw¨f_Fde
);

15 
Dw¨f_Se˘i⁄
 
	gdebug_‰ame_£c
 = {".eh_frame", 0, 0, 0};

16 
	gis_eh_‰ame
 = 1;

17 
Dw¨f_RegèbÀ3
 
	gglobÆ_π_èbÀ
 = {{0}};

18 
Dw¨f_RegèbÀ_E¡ry3
 
	gglobÆ_ruÀs
[
DW_FRAME_LAST_REG_NUM
];

20 
Dw¨f_RegèbÀ3
 
	gglobÆ_π_èbÀ_shadow
 = {{0}};

21 
Dw¨f_RegèbÀ_E¡ry3
 
	gglobÆ_ruÀs_shadow
[
DW_FRAME_LAST_REG_NUM
];

23 
uöt64_t


24 
_dw¨f_ªad_lsb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
);

25 
uöt64_t


26 
_dw¨f_decode_lsb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
);

27 
uöt64_t


28 
_dw¨f_ªad_msb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
);

29 
uöt64_t


30 
_dw¨f_decode_msb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
);

31 
öt64_t


32 
_dw¨f_ªad_¶eb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

33 
uöt64_t


34 
_dw¨f_ªad_uÀb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

35 
öt64_t


36 
_dw¨f_decode_¶eb128
(
uöt8_t
 **
dp
);

37 
uöt64_t


38 
_dw¨f_decode_uÀb128
(
uöt8_t
 **
dp
);

42 
_dw¨f_‰ame_£t_fde
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Fde
 
ªtfde
, 
Dw¨f_Se˘i⁄
 *
ds
,

43 
Dw¨f_Unsig√d
 *
off
, 
eh_‰ame
, 
Dw¨f_Cõ
 
cõ
, 
Dw¨f_Eº‹
 *
îr‹
);

46 
_dw¨f_‰ame_£˘i⁄_lﬂd_eh
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Eº‹
 *
îr‹
);

47 
_dw¨f_föd_£˘i⁄_íh™˚d
(
Dw¨f_Se˘i⁄
 *
ds
);

51 
	$_dw¨f_‰ame_∑øms_öô
(
Dw¨f_Debug
 
dbg
)

55 
dbg
->
dbg_‰ame_ruÀ_èbÀ_size
 = 
DW_FRAME_LAST_REG_NUM
;

56 
dbg
->
dbg_‰ame_ruÀ_öôül_vÆue
 = 
DW_FRAME_REG_INITIAL_VALUE
;

57 
dbg
->
dbg_‰ame_cÁ_vÆue
 = 
DW_FRAME_CFA_COL3
;

58 
dbg
->
dbg_‰ame_ßme_vÆue
 = 
DW_FRAME_SAME_VAL
;

59 
dbg
->
dbg_‰ame_undeföed_vÆue
 = 
DW_FRAME_UNDEFINED_VAL
;

60 
	}
}

64 
	$dw¨f_gë_fde_©_pc
(
Dw¨f_Addr
 
pc
,

65 
Dw¨f_Addr
 *
l›c
, Dw¨f_Add∏*
hùc
, 
_Dw¨f_Fde
 *
ªt_fde
, 
Dw¨f_Cõ
 
cõ
, 
Dw¨f_Eº‹
 *
îr‹
)

67 
Dw¨f_Fde
 
fde
 = 
ªt_fde
;

68 
	`mem£t
(
fde
, 0, (
_Dw¨f_Fde
));

69 
fde
->
fde_cõ
 = 
cõ
;

71 i‡(
ªt_fde
 =
NULL
 || 
l›c
 =NULL || 
hùc
 == NULL) {

72  (
DW_DLV_ERROR
);

75 
dbg
->
dbg_eh_off£t
 < dbg->
dbg_eh_size
) {

76 i‡(
	`_dw¨f_gë_√xt_fde
(
dbg
, 
is_eh_‰ame
, 
îr‹
, 
fde
) < 0)

78  
DW_DLV_NO_ENTRY
;

80 i‡(
pc
 >
fde
->
fde_öôloc
 &&Öc < fde->fde_initloc +

81 
fde
->
fde_adønge
) {

82 *
l›c
 = 
fde
->
fde_öôloc
;

83 *
hùc
 = 
fde
->
fde_öôloc
 + fde->
fde_adønge
 - 1;

85  (
DW_DLV_OK
);

89 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_ENTRY
);

90  (
DW_DLV_NO_ENTRY
);

91 
	}
}

94 
	$_dw¨f_‰ame_ªgèbÀ_c›y
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_RegèbÀ3
 **
de°
,

95 
Dw¨f_RegèbÀ3
 *
§c
, 
Dw¨f_Eº‹
 *
îr‹
)

97 
i
;

99 
	`as£π
(
de°
 !
NULL
);

100 
	`as£π
(
§c
 !
NULL
);

102 i‡(*
de°
 =
NULL
) {

103 *
de°
 = &
globÆ_π_èbÀ_shadow
;

108 (*
de°
)->
π3_ªg_èbÀ_size
 = 
§c
->rt3_reg_table_size;

109 (*
de°
)->
π3_ruÀs
 = 
globÆ_ruÀs_shadow
;

119 
	`mem˝y
(&(*
de°
)->
π3_cÁ_ruÀ
, &
§c
->rt3_cfa_rule,

120 (
Dw¨f_RegèbÀ_E¡ry3
));

122 
i
 = 0; i < (*
de°
)->
π3_ªg_èbÀ_size
 &&

123 
i
 < 
§c
->
π3_ªg_èbÀ_size
; i++)

124 
	`mem˝y
(&(*
de°
)->
π3_ruÀs
[
i
], &
§c
->rt3_rules[i],

125 (
Dw¨f_RegèbÀ_E¡ry3
));

127 ; 
i
 < (*
de°
)->
π3_ªg_èbÀ_size
; i++)

128 (*
de°
)->
π3_ruÀs
[
i
].
dw_ªgnum
 =

129 
dbg
->
dbg_‰ame_undeföed_vÆue
;

131  (
DW_DLE_NONE
);

132 
	}
}

135 
	$_dw¨f_‰ame_run_ö°
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_RegèbÀ3
 *
π
, 
uöt8_t
 *
ö°s
,

136 
Dw¨f_Unsig√d
 
Àn
, Dw¨f_Unsig√d 
ˇf
, 
Dw¨f_Sig√d
 
daf
, 
Dw¨f_Addr
 
pc
,

137 
Dw¨f_Addr
 
pc_ªq
, Dw¨f_Add∏*
row_pc
, 
Dw¨f_Eº‹
 *
îr‹
)

139 
Dw¨f_RegèbÀ3
 *
öô_π
, *
ßved_π
;

140 
uöt8_t
 *
p
, *
≥
;

141 
uöt8_t
 
high2
, 
low6
;

142 
uöt64_t
 
ªg
, 
ªg2
, 
uoff
, 
soff
;

143 
ªt
;

145 
	#CFA
 
π
->
π3_cÁ_ruÀ


	)

146 
	#INITCFA
 
öô_π
->
π3_cÁ_ruÀ


	)

147 
	#RL
 
π
->
π3_ruÀs


	)

148 
	#INITRL
 
öô_π
->
π3_ruÀs


	)

150 
	#CHECK_TABLE_SIZE
(
x
) \

152 i‡((
x
Ë>
π
->
π3_ªg_èbÀ_size
) { \

153 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, \

154 
DW_DLE_DF_REG_NUM_TOO_HIGH
); \

155 
ªt
 = 
DW_DLE_DF_REG_NUM_TOO_HIGH
; \

156 
¥ogøm_d⁄e
; \

158 } 0)

	)

160 #ifde‡
FRAME_DEBUG


161 
	`¥ötf
("‰ame_run_ö°: (ˇf=%ju, daf=%jd)\n", 
ˇf
, 
daf
);

164 
ªt
 = 
DW_DLE_NONE
;

165 
öô_π
 = 
ßved_π
 = 
NULL
;

166 *
row_pc
 = 
pc
;

169 
	`_dw¨f_‰ame_ªgèbÀ_c›y
(
dbg
, &
öô_π
, 
π
, 
îr‹
);

170 
p
 = 
ö°s
;

171 
≥
 = 
p
 + 
Àn
;

173 
p
 < 
≥
) {

175 #ifde‡
FRAME_DEBUG


176 
	`¥ötf
("p=%∞≥=%∞pc=%#jxÖc_ªq=%#jx\n", 
p
, 
≥
, 
pc
, 
pc_ªq
);

179 i‡(*
p
 =
DW_CFA_n›
) {

180 #ifde‡
FRAME_DEBUG


181 
	`¥ötf
("DW_CFA_nop\n");

183 
p
++;

187 
high2
 = *
p
 & 0xc0;

188 
low6
 = *
p
 & 0x3f;

189 
p
++;

191 i‡(
high2
 > 0) {

192 
high2
) {

193 
DW_CFA_adv™˚_loc
:

194 
pc
 +
low6
 * 
ˇf
;

195 #ifde‡
FRAME_DEBUG


196 
	`¥ötf
("DW_CFA_adv™˚_loc(%#jx(%u))\n", 
pc
,

197 
low6
);

199 i‡(
pc_ªq
 < 
pc
)

200 
¥ogøm_d⁄e
;

202 
DW_CFA_off£t
:

203 *
row_pc
 = 
pc
;

204 
	`CHECK_TABLE_SIZE
(
low6
);

205 
RL
[
low6
].
dw_off£t_ªÀv™t
 = 1;

206 
RL
[
low6
].
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

207 
RL
[
low6
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

208 
RL
[
low6
].
dw_off£t_‹_block_Àn
 =

209 
	`_dw¨f_decode_uÀb128
(&
p
Ë* 
daf
;

210 #ifde‡
FRAME_DEBUG


211 
	`¥ötf
("DW_CFA_offset(%jd)\n",

212 
RL
[
low6
].
dw_off£t_‹_block_Àn
);

215 
DW_CFA_ª°‹e
:

216 *
row_pc
 = 
pc
;

217 
	`CHECK_TABLE_SIZE
(
low6
);

218 
	`mem˝y
(&
RL
[
low6
], &
INITRL
[low6],

219 (
Dw¨f_RegèbÀ_E¡ry3
));

220 #ifde‡
FRAME_DEBUG


221 
	`¥ötf
("DW_CFA_ª°‹e(%u)\n", 
low6
);

225 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

226 
DW_DLE_FRAME_INSTR_EXEC_ERROR
);

227 
ªt
 = 
DW_DLE_FRAME_INSTR_EXEC_ERROR
;

228 
¥ogøm_d⁄e
;

234 
low6
) {

235 
DW_CFA_£t_loc
:

236 
	`¥ötf
("dbgÖoöãrsizê:%x\n",
dbg
->
dbg_poöãr_size
);

237 
pc
 = 
dbg
->
	`decode
(&
p
, dbg->
dbg_poöãr_size
);

238 #ifde‡
FRAME_DEBUG


239 
	`¥ötf
("DW_CFA_£t_loc’c=%#jx)\n", 
pc
);

241 i‡(
pc_ªq
 < 
pc
)

242 
	`¥ötf
("Program done\n");

243 
¥ogøm_d⁄e
;

245 
DW_CFA_adv™˚_loc1
:

246 
pc
 +
dbg
->
	`decode
(&
p
, 1Ë* 
ˇf
;

247 #ifde‡
FRAME_DEBUG


248 
	`¥ötf
("DW_CFA_£t_loc1’c=%#jx)\n", 
pc
);

250 i‡(
pc_ªq
 < 
pc
)

251 
¥ogøm_d⁄e
;

253 
DW_CFA_adv™˚_loc2
:

254 
pc
 +
dbg
->
	`decode
(&
p
, 2Ë* 
ˇf
;

255 #ifde‡
FRAME_DEBUG


256 
	`¥ötf
("DW_CFA_£t_loc2’c=%#jx)\n", 
pc
);

258 i‡(
pc_ªq
 < 
pc
)

259 
¥ogøm_d⁄e
;

261 
DW_CFA_adv™˚_loc4
:

262 
pc
 +
dbg
->
	`decode
(&
p
, 4Ë* 
ˇf
;

263 #ifde‡
FRAME_DEBUG


264 
	`¥ötf
("DW_CFA_£t_loc4’c=%#jx)\n", 
pc
);

266 i‡(
pc_ªq
 < 
pc
)

267 
¥ogøm_d⁄e
;

269 
DW_CFA_off£t_exãnded
:

270 *
row_pc
 = 
pc
;

271 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

272 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

273 
	`CHECK_TABLE_SIZE
(
ªg
);

274 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

275 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

276 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

277 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
uoff
 * 
daf
;

278 #ifde‡
FRAME_DEBUG


279 
	`¥ötf
("DW_CFA_offset_extended(reg=%ju,uoff=%ju)\n",

280 
ªg
, 
uoff
);

283 
DW_CFA_ª°‹e_exãnded
:

284 *
row_pc
 = 
pc
;

285 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

286 
	`CHECK_TABLE_SIZE
(
ªg
);

287 
	`mem˝y
(&
RL
[
ªg
], &
INITRL
[reg],

288 (
Dw¨f_RegèbÀ_E¡ry3
));

289 #ifde‡
FRAME_DEBUG


290 
	`¥ötf
("DW_CFA_ª°‹e_exãnded(%ju)\n", 
ªg
);

293 
DW_CFA_undeföed
:

294 *
row_pc
 = 
pc
;

295 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

296 
	`CHECK_TABLE_SIZE
(
ªg
);

297 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

298 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_undeföed_vÆue
;

299 #ifde‡
FRAME_DEBUG


300 
	`¥ötf
("DW_CFA_undeföed(%ju)\n", 
ªg
);

303 
DW_CFA_ßme_vÆue
:

304 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

305 
	`CHECK_TABLE_SIZE
(
ªg
);

306 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

307 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_ßme_vÆue
;

308 #ifde‡
FRAME_DEBUG


309 
	`¥ötf
("DW_CFA_ßme_vÆue(%ju)\n", 
ªg
);

312 
DW_CFA_ªgi°î
:

313 *
row_pc
 = 
pc
;

314 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

315 
ªg2
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

316 
	`CHECK_TABLE_SIZE
(
ªg
);

317 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

318 
RL
[
ªg
].
dw_ªgnum
 = 
ªg2
;

319 #ifde‡
FRAME_DEBUG


320 
	`¥ötf
("DW_CFA_ªgi°î‘eg=%ju,ªg2=%ju)\n", 
ªg
,

321 
ªg2
);

324 
DW_CFA_ªmembî_°©e
:

325 
	`_dw¨f_‰ame_ªgèbÀ_c›y
(
dbg
, &
ßved_π
, 
π
, 
îr‹
);

326 #ifde‡
FRAME_DEBUG


327 
	`¥ötf
("DW_CFA_remember_state\n");

330 
DW_CFA_ª°‹e_°©e
:

331 *
row_pc
 = 
pc
;

332 
	`_dw¨f_‰ame_ªgèbÀ_c›y
(
dbg
, &
π
, 
ßved_π
, 
îr‹
);

333 #ifde‡
FRAME_DEBUG


334 
	`¥ötf
("DW_CFA_restore_state\n");

337 
DW_CFA_def_cÁ
:

338 *
row_pc
 = 
pc
;

339 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

340 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

341 
CFA
.
dw_off£t_ªÀv™t
 = 1;

342 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

343 
CFA
.
dw_ªgnum
 = 
ªg
;

344 
CFA
.
dw_off£t_‹_block_Àn
 = 
uoff
;

345 #ifde‡
FRAME_DEBUG


346 
	`¥ötf
("DW_CFA_def_cÁ‘eg=%ju,uoff=%ju)\n", 
ªg
, 
uoff
);

349 
DW_CFA_def_cÁ_ªgi°î
:

350 *
row_pc
 = 
pc
;

351 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

352 
CFA
.
dw_ªgnum
 = 
ªg
;

359 #ifde‡
FRAME_DEBUG


360 
	`¥ötf
("DW_CFA_def_cÁ_ªgi°î(%ju)\n", 
ªg
);

363 
DW_CFA_def_cÁ_off£t
:

364 *
row_pc
 = 
pc
;

365 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

366 
CFA
.
dw_off£t_ªÀv™t
 = 1;

367 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

368 
CFA
.
dw_off£t_‹_block_Àn
 = 
uoff
;

369 #ifde‡
FRAME_DEBUG


370 
	`¥ötf
("DW_CFA_def_cÁ_off£t(%ju)\n", 
uoff
);

373 
DW_CFA_def_cÁ_ex¥essi⁄
:

374 *
row_pc
 = 
pc
;

375 
CFA
.
dw_off£t_ªÀv™t
 = 0;

376 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_EXPRESSION
;

377 
CFA
.
dw_off£t_‹_block_Àn
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

378 
CFA
.
dw_block_±r
 = 
p
;

379 
p
 +
CFA
.
dw_off£t_‹_block_Àn
;

380 #ifde‡
FRAME_DEBUG


381 
	`¥ötf
("DW_CFA_def_cfa_expression\n");

384 
DW_CFA_ex¥essi⁄
:

385 *
row_pc
 = 
pc
;

386 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

387 
	`CHECK_TABLE_SIZE
(
ªg
);

388 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

389 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_EXPRESSION
;

390 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 =

391 
	`_dw¨f_decode_uÀb128
(&
p
);

392 
RL
[
ªg
].
dw_block_±r
 = 
p
;

393 
p
 +
RL
[
ªg
].
dw_off£t_‹_block_Àn
;

394 #ifde‡
FRAME_DEBUG


395 
	`¥ötf
("DW_CFA_expression\n");

398 
DW_CFA_off£t_exãnded_sf
:

399 *
row_pc
 = 
pc
;

400 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

401 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

402 
	`CHECK_TABLE_SIZE
(
ªg
);

403 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

404 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

405 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

406 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

407 #ifde‡
FRAME_DEBUG


408 
	`¥ötf
("DW_CFA_offset_extended_sf(reg=%ju,soff=%jd)\n",

409 
ªg
, 
soff
);

412 
DW_CFA_def_cÁ_sf
:

413 *
row_pc
 = 
pc
;

414 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

415 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

416 
CFA
.
dw_off£t_ªÀv™t
 = 1;

417 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

418 
CFA
.
dw_ªgnum
 = 
ªg
;

419 
CFA
.
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

420 #ifde‡
FRAME_DEBUG


421 
	`¥ötf
("DW_CFA_def_cÁ_sf‘eg=%ju,soff=%jd)\n", 
ªg
,

422 
soff
);

425 
DW_CFA_def_cÁ_off£t_sf
:

426 *
row_pc
 = 
pc
;

427 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

428 
CFA
.
dw_off£t_ªÀv™t
 = 1;

429 
CFA
.
dw_vÆue_ty≥
 = 
DW_EXPR_OFFSET
;

430 
CFA
.
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

431 #ifde‡
FRAME_DEBUG


432 
	`¥ötf
("DW_CFA_def_cÁ_off£t_sf(soff=%jd)\n", 
soff
);

435 
DW_CFA_vÆ_off£t
:

436 *
row_pc
 = 
pc
;

437 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

438 
uoff
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

439 
	`CHECK_TABLE_SIZE
(
ªg
);

440 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

441 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_VAL_OFFSET
;

442 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

443 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
uoff
 * 
daf
;

444 #ifde‡
FRAME_DEBUG


445 
	`¥ötf
("DW_CFA_vÆ_off£t‘eg=%ju,uoff=%ju)\n", 
ªg
,

446 
uoff
);

449 
DW_CFA_vÆ_off£t_sf
:

450 *
row_pc
 = 
pc
;

451 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

452 
soff
 = 
	`_dw¨f_decode_¶eb128
(&
p
);

453 
	`CHECK_TABLE_SIZE
(
ªg
);

454 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 1;

455 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_VAL_OFFSET
;

456 
RL
[
ªg
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

457 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 = 
soff
 * 
daf
;

458 #ifde‡
FRAME_DEBUG


459 
	`¥ötf
("DW_CFA_vÆ_off£t_sf‘eg=%ju,soff=%jd)\n", 
ªg
,

460 
soff
);

463 
DW_CFA_vÆ_ex¥essi⁄
:

464 *
row_pc
 = 
pc
;

465 
ªg
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

466 
	`CHECK_TABLE_SIZE
(
ªg
);

467 
RL
[
ªg
].
dw_off£t_ªÀv™t
 = 0;

468 
RL
[
ªg
].
dw_vÆue_ty≥
 = 
DW_EXPR_VAL_EXPRESSION
;

469 
RL
[
ªg
].
dw_off£t_‹_block_Àn
 =

470 
	`_dw¨f_decode_uÀb128
(&
p
);

471 
RL
[
ªg
].
dw_block_±r
 = 
p
;

472 
p
 +
RL
[
ªg
].
dw_off£t_‹_block_Àn
;

473 #ifde‡
FRAME_DEBUG


474 
	`¥ötf
("DW_CFA_val_expression\n");

478 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

479 
DW_DLE_FRAME_INSTR_EXEC_ERROR
);

480 
ªt
 = 
DW_DLE_FRAME_INSTR_EXEC_ERROR
;

481 
¥ogøm_d⁄e
;

485 
¥ogøm_d⁄e
:

493  (
ªt
);

495 #unde‡
CFA


496 #unde‡
INITCFA


497 #unde‡
RL


498 #unde‡
INITRL


499 #unde‡
CHECK_TABLE_SIZE


500 
	}
}

504 
	$_dw¨f_‰ame_gë_öã∫Æ_èbÀ
(
Dw¨f_Fde
 
fde
, 
Dw¨f_Addr
 
pc_ªq
,

505 
Dw¨f_RegèbÀ3
 **
ªt_π
, 
Dw¨f_Addr
 *
ªt_row_pc
, 
Dw¨f_Eº‹
 *
îr‹
)

508 
Dw¨f_Cõ
 
cõ
;

509 
Dw¨f_RegèbÀ3
 *
π
;

510 
Dw¨f_Addr
 
row_pc
;

511 
i
, 
ªt
;

513 
	`as£π
(
ªt_π
 !
NULL
);

516 
	`as£π
(
dbg
 !
NULL
);

518 
π
 = 
dbg
->
dbg_öã∫Æ_ªg_èbÀ
;

521 
	`mem£t
(&
π
->
π3_cÁ_ruÀ
, 0, (
Dw¨f_RegèbÀ_E¡ry3
));

522 
	`mem£t
(
π
->
π3_ruÀs
, 0,Ñt->
π3_ªg_èbÀ_size
 *

523 (
Dw¨f_RegèbÀ_E¡ry3
));

526 
i
 = 0; i < 
π
->
π3_ªg_èbÀ_size
; i++)

527 
π
->
π3_ruÀs
[
i
].
dw_ªgnum
 = 
dbg
->
dbg_‰ame_ruÀ_öôül_vÆue
;

530 
cõ
 = 
fde
->
fde_cõ
;

531 
	`as£π
(
cõ
 !
NULL
);

532 
ªt
 = 
	`_dw¨f_‰ame_run_ö°
(
dbg
, 
π
, 
cõ
->
cõ_öôö°
,

533 
cõ
->
cõ_ö°Àn
, cõ->
cõ_ˇf
, cõ->
cõ_daf
, 0, ~0ULL,

534 &
row_pc
, 
îr‹
);

535 i‡(
ªt
 !
DW_DLE_NONE
)

536  (
ªt
);

538 i‡(
pc_ªq
 >
fde
->
fde_öôloc
) {

539 
ªt
 = 
	`_dw¨f_‰ame_run_ö°
(
dbg
, 
π
, 
fde
->
fde_ö°
,

540 
fde
->
fde_ö°Àn
, 
cõ
->
cõ_ˇf
, cõ->
cõ_daf
,

541 
fde
->
fde_öôloc
, 
pc_ªq
, &
row_pc
, 
îr‹
);

542 i‡(
ªt
 !
DW_DLE_NONE
)

543  (
ªt
);

546 *
ªt_π
 = 
π
;

547 *
ªt_row_pc
 = 
row_pc
;

549  (
DW_DLE_NONE
);

550 
	}
}

554 
	$dw¨f_gë_fde_öfo_f‹_Æl_ªgs
(
Dw¨f_Fde
 
fde
, 
Dw¨f_Addr
 
pc_ªque°ed
,

555 
Dw¨f_RegèbÀ
 *
ªg_èbÀ
, 
Dw¨f_Addr
 *
row_pc
, 
Dw¨f_Eº‹
 *
îr‹
)

558 
Dw¨f_RegèbÀ3
 *
π
;

559 
Dw¨f_Addr
 
pc
;

560 
Dw¨f_HÆf
 
cÁ
;

561 
i
, 
ªt
;

563 i‡(
fde
 =
NULL
 || 
ªg_èbÀ
 =NULL || 
row_pc
 == NULL) {

564 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_ARGUMENT
);

566  (
DW_DLV_ERROR
);

569 
	`as£π
(
dbg
 !
NULL
);

571 i‡(
pc_ªque°ed
 < 
fde
->
fde_öôloc
 ||

572 
pc_ªque°ed
 >
fde
->
fde_öôloc
 + fde->
fde_adønge
) {

573 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_PC_NOT_IN_FDE_RANGE
);

575  (
DW_DLV_ERROR
);

578 
ªt
 = 
	`_dw¨f_‰ame_gë_öã∫Æ_èbÀ
(
fde
, 
pc_ªque°ed
, &
π
, &
pc
,

579 
îr‹
);

580 i‡(
ªt
 !
DW_DLE_NONE
)

584  (
DW_DLV_ERROR
);

591 
	#CFA
 
π
->
π3_cÁ_ruÀ


	)

592 
cÁ
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

593 i‡(
cÁ
 < 
DW_REG_TABLE_SIZE
) {

594 
ªg_èbÀ
->
ruÀs
[
cÁ
].
dw_off£t_ªÀv™t
 =

595 
CFA
.
dw_off£t_ªÀv™t
;

596 
ªg_èbÀ
->
ruÀs
[
cÁ
].
dw_ªgnum
 = 
CFA
.dw_regnum;

597 
ªg_èbÀ
->
ruÀs
[
cÁ
].
dw_off£t
 = 
CFA
.
dw_off£t_‹_block_Àn
;

603 
i
 = 0; i < 
DW_REG_TABLE_SIZE
 && i < 
dbg
->
dbg_‰ame_ruÀ_èbÀ_size
;

604 
i
++) {

607 i‡(
i
 =
cÁ
)

610 
ªg_èbÀ
->
ruÀs
[
i
].
dw_off£t_ªÀv™t
 =

611 
π
->
π3_ruÀs
[
i
].
dw_off£t_ªÀv™t
;

612 
ªg_èbÀ
->
ruÀs
[
i
].
dw_ªgnum
 = 
π
->
π3_ruÀs
[i].dw_regnum;

613 
ªg_èbÀ
->
ruÀs
[
i
].
dw_off£t
 =

614 
π
->
π3_ruÀs
[
i
].
dw_off£t_‹_block_Àn
;

617 *
row_pc
 = 
pc
;

619  (
DW_DLV_OK
);

620 
	}
}

623 
	$_dw¨f_‰ame_ªad_lsb_ícoded
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 *
vÆ
, 
uöt8_t
 *
d©a
,

624 
uöt64_t
 *
off£ç
, 
uöt8_t
 
ícode
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

626 
uöt8_t
 
≠∂iˇti⁄
;

628 i‡(
ícode
 =
DW_EH_PE_omô
)

629  (
DW_DLE_NONE
);

631 
≠∂iˇti⁄
 = 
ícode
 & 0xf0;

632 
ícode
 &= 0x0f;

634 
ícode
) {

635 
DW_EH_PE_ab•å
:

636 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, dbg->
dbg_poöãr_size
);

638 
DW_EH_PE_uÀb128
:

639 *
vÆ
 = 
	`_dw¨f_ªad_uÀb128
(
d©a
, 
off£ç
);

641 
DW_EH_PE_ud©a2
:

642 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 2);

644 
DW_EH_PE_ud©a4
:

645 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 4);

647 
DW_EH_PE_ud©a8
:

648 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 8);

650 
DW_EH_PE_¶eb128
:

651 *
vÆ
 = 
	`_dw¨f_ªad_¶eb128
(
d©a
, 
off£ç
);

653 
DW_EH_PE_sd©a2
:

654 *
vÆ
 = (
öt16_t
Ë
dbg
->
	`ªad
(
d©a
, 
off£ç
, 2);

656 
DW_EH_PE_sd©a4
:

657 *
vÆ
 = (
öt32_t
Ë
dbg
->
	`ªad
(
d©a
, 
off£ç
, 4);

659 
DW_EH_PE_sd©a8
:

660 *
vÆ
 = 
dbg
->
	`ªad
(
d©a
, 
off£ç
, 8);

663 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

664  (
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

667 i‡(
≠∂iˇti⁄
 =
DW_EH_PE_p¸ñ
) {

671 
ícode
) {

672 
DW_EH_PE_uÀb128
:

673 
DW_EH_PE_ud©a2
:

674 
DW_EH_PE_ud©a4
:

675 
DW_EH_PE_ud©a8
:

676 *
vÆ
 +
pc
;

678 
DW_EH_PE_¶eb128
:

679 
DW_EH_PE_sd©a2
:

680 
DW_EH_PE_sd©a4
:

681 
DW_EH_PE_sd©a8
:

682 *
vÆ
 = 
pc
 + (
öt64_t
) *val;

692  (
DW_DLE_NONE
);

693 
	}
}

696 
	$_dw¨f_‰ame_∑r£_lsb_cõ_augmít
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Cõ
 
cõ
,

697 
Dw¨f_Eº‹
 *
îr‹
)

699 
uöt8_t
 *
aug_p
, *
augd©a_p
;

700 
uöt64_t
 
vÆ
, 
off£t
;

701 
uöt8_t
 
ícode
;

702 
ªt
;

704 
	`as£π
(
cõ
->
cõ_augmít
 !
NULL
 && *cie->cie_augment == 'z');

711 
aug_p
 = &
cõ
->
cõ_augmít
[1];

712 
augd©a_p
 = 
cõ
->
cõ_augd©a
;

713 *
aug_p
 != '\0') {

714 *
aug_p
) {

717 
augd©a_p
++;

721 
ícode
 = *
augd©a_p
++;

722 
off£t
 = 0;

723 
ªt
 = 
	`_dw¨f_‰ame_ªad_lsb_ícoded
(
dbg
, &
vÆ
,

724 
augd©a_p
, &
off£t
, 
ícode
, 0, 
îr‹
);

725 i‡(
ªt
 !
DW_DLE_NONE
)

726  (
ªt
);

727 
augd©a_p
 +
off£t
;

730 
cõ
->
cõ_fde_ícode
 = *
augd©a_p
++;

733 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

734 
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

735  (
DW_DLE_FRAME_AUGMENTATION_UNKNOWN
);

737 
aug_p
++;

740  (
DW_DLE_NONE
);

741 
	}
}

745 
	$_dw¨f_‰ame_£t_cõ
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Se˘i⁄
 *
ds
,

746 
Dw¨f_Unsig√d
 *
off
, 
Dw¨f_Cõ
 
ªt_cõ
, 
Dw¨f_Eº‹
 *
îr‹
)

748 
Dw¨f_Cõ
 
cõ
;

749 
uöt64_t
 
Àngth
;

750 
dw¨f_size
, 
ªt
;

751 *
p
;

753 
	`as£π
(
ªt_cõ
);

754 
cõ
 = 
ªt_cõ
;

756 
cõ
->
cõ_dbg
 = 
dbg
;

757 
cõ
->
cõ_off£t
 = *
off
;

759 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 4);

760 i‡(
Àngth
 == 0xffffffff) {

761 
dw¨f_size
 = 8;

762 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 8);

764 
dw¨f_size
 = 4;

766 i‡(
Àngth
 > 
ds
->
ds_size
 - *
off
) {

767 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

768  (
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

771 (Ë
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 
dw¨f_size
);

772 
cõ
->
cõ_Àngth
 = 
Àngth
;

774 
cõ
->
cõ_vîsi⁄
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 1);

775 i‡(
cõ
->
cõ_vîsi⁄
 != 1 && cie->cie_version != 3 &&

776 
cõ
->
cõ_vîsi⁄
 != 4) {

777 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_FRAME_VERSION_BAD
);

778  (
DW_DLE_FRAME_VERSION_BAD
);

781 
cõ
->
cõ_augmít
 = 
ds
->
ds_d©a
 + *
off
;

782 
p
 = (*Ë
ds
->
ds_d©a
;

783 
p
[(*
off
)++] != '\0')

787 i‡(*
cõ
->
cõ_augmít
 != 0 && *cie->cie_augment != 'z') {

788 *
off
 = 
cõ
->
cõ_off£t
 + ((
dw¨f_size
 == 4) ? 4 : 12) +

789 
cõ
->
cõ_Àngth
;

790  (
DW_DLE_NONE
);

794 i‡(
	`°r°r
((*)
cõ
->
cõ_augmít
, "eh"Ë!
NULL
)

795 
cõ
->
cõ_ehd©a
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
,

796 
dbg
->
dbg_poöãr_size
);

798 
cõ
->
cõ_ˇf
 = 
	`_dw¨f_ªad_uÀb128
(
ds
->
ds_d©a
, 
off
);

799 
cõ
->
cõ_daf
 = 
	`_dw¨f_ªad_¶eb128
(
ds
->
ds_d©a
, 
off
);

802 i‡(
cõ
->
cõ_vîsi⁄
 == 1)

803 
cõ
->
cõ_ø
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 1);

805 
cõ
->
cõ_ø
 = 
	`_dw¨f_ªad_uÀb128
(
ds
->
ds_d©a
, 
off
);

808 i‡(*
cõ
->
cõ_augmít
 == 'z') {

809 
cõ
->
cõ_augÀn
 = 
	`_dw¨f_ªad_uÀb128
(
ds
->
ds_d©a
, 
off
);

810 
cõ
->
cõ_augd©a
 = 
ds
->
ds_d©a
 + *
off
;

811 *
off
 +
cõ
->
cõ_augÀn
;

817 
cõ
->
cõ_fde_ícode
 = 
DW_EH_PE_ab•å
;

818 
ªt
 = 
	`_dw¨f_‰ame_∑r£_lsb_cõ_augmít
(
dbg
, 
cõ
, 
îr‹
);

819 i‡(
ªt
 !
DW_DLE_NONE
)

820  (
ªt
);

824 
cõ
->
cõ_öôö°
 = 
ds
->
ds_d©a
 + *
off
;

825 i‡(
dw¨f_size
 == 4)

826 
cõ
->
cõ_ö°Àn
 = cõ->
cõ_off£t
 + 4 + 
Àngth
 - *
off
;

828 
cõ
->
cõ_ö°Àn
 = cõ->
cõ_off£t
 + 12 + 
Àngth
 - *
off
;

830 *
off
 +
cõ
->
cõ_ö°Àn
;

832 #ifde‡
FRAME_DEBUG


833 
	`¥ötf
("cie:\n");

834 
	`¥ötf
("\tcie_version=%u cie_offset=%ju cie_length=%ju cie_augment=%s"

836 
cõ
->
cõ_vîsi⁄
, cõ->
cõ_off£t
, cõ->
cõ_Àngth
,

837 (*)
cõ
->
cõ_augmít
, cõ->
cõ_ö°Àn
, cõ->
cõ_ˇf
,

838 
cõ
->
cõ_daf
, *
off
);

840 
	`¥ötf
("%x %lx\n", ()
cõ
->
cõ_ø
, ()cõ->
cõ_öôö°
);

843  (
DW_DLE_NONE
);

844 
	}
}

847 
	$_dw¨f_‰ame_£t_fde
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Fde
 
ªtfde
, 
Dw¨f_Se˘i⁄
 *
ds
,

848 
Dw¨f_Unsig√d
 *
off
, 
eh_‰ame
, 
Dw¨f_Cõ
 
cõ
, 
Dw¨f_Eº‹
 *
îr‹
)

850 
Dw¨f_Fde
 
fde
;

851 
Dw¨f_Unsig√d
 
cõoff
;

852 
uöt64_t
 
Àngth
, 
vÆ
;

853 
dw¨f_size
, 
ªt
;

855 
fde
 = 
ªtfde
;

857 
fde
->
fde_dbg
 = 
dbg
;

858 
fde
->
fde_addr
 = 
ds
->
ds_d©a
 + *
off
;

859 
fde
->
fde_off£t
 = *
off
;

861 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 4);

862 i‡(
Àngth
 == 0xffffffff) {

863 
dw¨f_size
 = 8;

864 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 8);

866 
dw¨f_size
 = 4;

868 i‡(
Àngth
 > 
ds
->
ds_size
 - *
off
) {

869 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

870  (
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

873 
fde
->
fde_Àngth
 = 
Àngth
;

875 i‡(
eh_‰ame
) {

876 
fde
->
fde_cõoff
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 4);

877 
cõoff
 = *
off
 - (4 + 
fde
->
fde_cõoff
);

879 i‡(
cõoff
 =
fde
->
fde_off£t
) {

880 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_CIE_FOR_FDE
);

881  (
DW_DLE_NO_CIE_FOR_FDE
);

884 
fde
->
fde_cõoff
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
, 
dw¨f_size
);

885 
cõoff
 = 
fde
->
fde_cõoff
;

888 i‡(
eh_‰ame
) {

893 
ªt
 = 
	`_dw¨f_‰ame_ªad_lsb_ícoded
(
dbg
, &
vÆ
, 
ds
->
ds_d©a
,

894 
off
, 
cõ
->
cõ_fde_ícode
, 
ds
->
ds_addr
 + *off, 
îr‹
);

895 i‡(
ªt
 !
DW_DLE_NONE
)

896  (
ªt
);

897 
fde
->
fde_öôloc
 = 
vÆ
;

902 
ªt
 = 
	`_dw¨f_‰ame_ªad_lsb_ícoded
(
dbg
, &
vÆ
, 
ds
->
ds_d©a
,

903 
off
, 
cõ
->
cõ_fde_ícode
, 0, 
îr‹
);

904 i‡(
ªt
 !
DW_DLE_NONE
)

905  (
ªt
);

906 
fde
->
fde_adønge
 = 
vÆ
;

908 
fde
->
fde_öôloc
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
,

909 
dbg
->
dbg_poöãr_size
);

910 
fde
->
fde_adønge
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, 
off
,

911 
dbg
->
dbg_poöãr_size
);

915 i‡(
eh_‰ame
 && *
cõ
->
cõ_augmít
 == 'z') {

916 
fde
->
fde_augÀn
 = 
	`_dw¨f_ªad_uÀb128
(
ds
->
ds_d©a
, 
off
);

917 
fde
->
fde_augd©a
 = 
ds
->
ds_d©a
 + *
off
;

918 *
off
 +
fde
->
fde_augÀn
;

921 
fde
->
fde_ö°
 = 
ds
->
ds_d©a
 + *
off
;

922 i‡(
dw¨f_size
 == 4)

923 
fde
->
fde_ö°Àn
 = fde->
fde_off£t
 + 4 + 
Àngth
 - *
off
;

925 
fde
->
fde_ö°Àn
 = fde->
fde_off£t
 + 12 + 
Àngth
 - *
off
;

927 *
off
 +
fde
->
fde_ö°Àn
;

929 #ifde‡
FRAME_DEBUG


930 
	`¥ötf
("fde:");

931 i‡(
eh_‰ame
)

932 
	`¥ötf
("(eh_frame)");

934 
	`¥ötf
("\tfde_offset=%ju fde_length=%ju fde_cieoff=%ju"

935 " fde_ö°Àn=%ju off=%ju\n", 
fde
->
fde_off£t
, fde->
fde_Àngth
,

936 
fde
->
fde_cõoff
, fde->
fde_ö°Àn
, *
off
);

939  (
DW_DLE_NONE
);

940 
	}
}

944 
	$_dw¨f_‰ame_öãøl_èbÀ_öô
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Eº‹
 *
îr‹
)

946 
Dw¨f_RegèbÀ3
 *
π
 = &
globÆ_π_èbÀ
;

948 i‡(
dbg
->
dbg_öã∫Æ_ªg_èbÀ
 !
NULL
)

949  (
DW_DLE_NONE
);

957 
π
->
π3_ªg_èbÀ_size
 = 
dbg
->
dbg_‰ame_ruÀ_èbÀ_size
;

962 
π
->
π3_ruÀs
 = 
globÆ_ruÀs
;

971 
dbg
->
dbg_öã∫Æ_ªg_èbÀ
 = 
π
;

973  (
DW_DLE_NONE
);

974 
	}
}

978 
	$_dw¨f_gë_√xt_fde
(
Dw¨f_Debug
 
dbg
,

979 
eh_‰ame
, 
Dw¨f_Eº‹
 *
îr‹
, 
Dw¨f_Fde
 
ªt_fde
)

981 
Dw¨f_Se˘i⁄
 *
ds
 = &
debug_‰ame_£c
;

982 
uöt64_t
 
Àngth
, 
off£t
, 
cõ_id
, 
íåy_off
;

983 
dw¨f_size
, 
i
, 
ªt
=-1;

985 
off£t
 = 
dbg
->
dbg_eh_off£t
;

986 i‡(
off£t
 < 
ds
->
ds_size
) {

987 
íåy_off
 = 
off£t
;

988 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 4);

989 i‡(
Àngth
 == 0xffffffff) {

990 
dw¨f_size
 = 8;

991 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 8);

993 
dw¨f_size
 = 4;

995 i‡(
Àngth
 > 
ds
->
ds_size
 - 
off£t
 ||

996 (
Àngth
 =0 && !
eh_‰ame
)) {

997 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
,

998 
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

999  (
DW_DLE_DEBUG_FRAME_LENGTH_BAD
);

1003 i‡(
eh_‰ame
 && 
Àngth
 == 0)

1006 
cõ_id
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 
dw¨f_size
);

1008 i‡(
eh_‰ame
) {

1010 i‡(
cõ_id
 == 0)

1011 
ªt
 = 
	`_dw¨f_‰ame_£t_cõ
(
dbg
, 
ds
,

1012 &
íåy_off
, 
ªt_fde
->
fde_cõ
, 
îr‹
);

1014 
ªt
 = 
	`_dw¨f_‰ame_£t_fde
(
dbg
,
ªt_fde
, 
ds
,

1015 &
íåy_off
, 1, 
ªt_fde
->
fde_cõ
, 
îr‹
);

1018 i‡((
dw¨f_size
 =4 && 
cõ_id
 == ~0U) ||

1019 (
dw¨f_size
 =8 && 
cõ_id
 == ~0ULL))

1020 
ªt
 = 
	`_dw¨f_‰ame_£t_cõ
(
dbg
, 
ds
,

1021 &
íåy_off
, 
ªt_fde
->
fde_cõ
, 
îr‹
);

1023 
ªt
 = 
	`_dw¨f_‰ame_£t_fde
(
dbg
, 
ªt_fde
, 
ds
,

1024 &
íåy_off
, 0, 
ªt_fde
->
fde_cõ
, 
îr‹
);

1027 i‡(
ªt
 !
DW_DLE_NONE
)

1030 
off£t
 = 
íåy_off
;

1031 
dbg
->
dbg_eh_off£t
 = 
off£t
;

1035 
	}
}

1038 
Dw¨f_HÆf


1039 
	$dw¨f_£t_‰ame_cÁ_vÆue
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_HÆf
 
vÆue
)

1041 
Dw¨f_HÆf
 
ﬁd_vÆue
;

1043 
ﬁd_vÆue
 = 
dbg
->
dbg_‰ame_cÁ_vÆue
;

1044 
dbg
->
dbg_‰ame_cÁ_vÆue
 = 
vÆue
;

1046  (
ﬁd_vÆue
);

1047 
	}
}

1050 
	$_dw¨f_‰ame_£˘i⁄_lﬂd_eh
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Eº‹
 *
îr‹
)

1052 
°©us
;

1053 
Dw¨f_Se˘i⁄
 *
ds
 = &
debug_‰ame_£c
;

1054 
°©us
 = 
	`_dw¨f_föd_£˘i⁄_íh™˚d
(&
debug_‰ame_£c
);

1055  (
DW_DLE_NONE
);

1056 
	}
}

1061 
	$dw¨f_öô_eh_£˘i⁄
(
Dw¨f_Debug
 
dbg
,

1062 
Dw¨f_Eº‹
 *
îr‹
)

1065 i‡(
dbg
 =
NULL
) {

1066 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_ARGUMENT
);

1067  (
DW_DLV_ERROR
);

1070 i‡(
dbg
->
dbg_öã∫Æ_ªg_èbÀ
 =
NULL
) {

1071 i‡(
	`_dw¨f_‰ame_öãøl_èbÀ_öô
(
dbg
, 
îr‹
Ë!
DW_DLE_NONE
)

1072  (
DW_DLV_ERROR
);

1075 i‡(
	`_dw¨f_‰ame_£˘i⁄_lﬂd_eh
(
dbg
, 
îr‹
Ë!
DW_DLE_NONE
)

1076  (
DW_DLV_ERROR
);

1078 
dbg
->
dbg_eh_size
 = 
debug_‰ame_£c
.
ds_size
;

1079 
dbg
->
dbg_eh_off£t
 = 0;

1081  (
DW_DLV_OK
);

1082 
	}
}

	@kern/libdwarf_lineno.c

27 
	~<öc/ty≥s.h
>

28 
	~<öc/°rög.h
>

29 
	~<öc/as£π.h
>

30 
	~"dw¨f_ñf.h
"

31 
	~"dw¨f_deföe.h
"

32 
	~"dw¨f_îr‹.h
"

33 
	~"dw¨f.h
"

35 
	~"dw¨f_löío.h
"

37 
Dw¨f_Debug
 
dbg
;

38 
Dw¨f_SmÆl
 
	gglobÆ_°d_›
[512];

40 
öt64_t


41 
_dw¨f_ªad_¶eb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

42 
uöt64_t


43 
_dw¨f_ªad_uÀb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
);

44 
uöt64_t


45 
_dw¨f_decode_uÀb128
(
uöt8_t
 **
dp
);

46 
öt64_t


47 
_dw¨f_decode_¶eb128
(
uöt8_t
 **
dp
);

48 
_dw¨f_föd_£˘i⁄_íh™˚d
(
Dw¨f_Se˘i⁄
 *
ds
);

55 
	$_dw¨f_löío_run_¥ogøm
(
Dw¨f_CU
 *
cu
, 
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 *
p
,

56 
uöt8_t
 *
≥
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

58 
Dw¨f_Löe
 
 
, 
én
;

59 
uöt64_t
 
addªss
, 
fûe
, 
löe
, 
cﬁumn
, 
iß
, 
›size
;

60 
is_°mt
, 
basic_block
, 
íd_£quí˚
;

61 
¥ﬁogue_íd
, 
ïûogue_begö
;

62 
ªt
;

64 
 
 = &
li
->
li_löe
;

65 
	#RESET_REGISTERS
 \

67 
addªss
 = 0; \

68 
fûe
 = 1; \

69 
löe
 = 1; \

70 
cﬁumn
 = 0; \

71 
is_°mt
 = 
li
->
li_def°mt
; \

72 
basic_block
 = 0; \

73 
íd_£quí˚
 = 0; \

74 
¥ﬁogue_íd
 = 0; \

75 
ïûogue_begö
 = 0; \

76 } 0)

	)

78 
	#APPEND_ROW
 \

80 i‡(
pc
 < 
addªss
) { \

81  
DW_DLE_NONE
; \

83 
 
->
 _addr
 = 
addªss
; \

84 
 
->
 _symndx
 = 0; \

85 
 
->
 _fûío
 = 
fûe
; \

86 
 
->
 _löío
 = 
löe
; \

87 
 
->
 _cﬁumn
 = 
cﬁumn
; \

88 
 
->
 _bblock
 = 
basic_block
; \

89 
 
->
 _°mt
 = 
is_°mt
; \

90 
 
->
 _íd£q
 = 
íd_£quí˚
; \

91 
li
->
li_ Àn
++; \

92 } 0)

	)

94 
	#LINE
(
x
Ë(
li
->
li_lba£
 + (((xË-Üi->
li_›ba£
Ë%Üi->
li_Ã™ge
))

	)

95 
	#ADDRESS
(
x
Ë((((xË- 
li
->
li_›ba£
Ë/Üi->
li_Ã™ge
Ë*Üi->
li_möÀn
)

	)

101 
RESET_REGISTERS
;

106 
p
 < 
≥
) {

107 i‡(*
p
 == 0) {

113 
p
++;

114 
›size
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

115 *
p
) {

116 
DW_LNE_íd_£quí˚
:

117 
p
++;

118 
íd_£quí˚
 = 1;

119 
RESET_REGISTERS
;

121 
DW_LNE_£t_addªss
:

122 
p
++;

123 
addªss
 = 
dbg
->
	`decode
(&
p
, 
cu
->
addr_size
);

125 
DW_LNE_deföe_fûe
:

126 
p
++;

127 
ªt
 = 
	`_dw¨f_löío_add_fûe
(
li
, &
p
, 
NULL
,

128 
îr‹
, 
dbg
);

129 i‡(
ªt
 !
DW_DLE_NONE
)

130 
¥og_Áû
;

134 
p
 +
›size
;

137 } i‡(*
p
 > 0 && *∞< 
li
->
li_›ba£
) {

143 *
p
++) {

144 
DW_LNS_c›y
:

145 
APPEND_ROW
;

146 
basic_block
 = 0;

147 
¥ﬁogue_íd
 = 0;

148 
ïûogue_begö
 = 0;

150 
DW_LNS_adv™˚_pc
:

151 
addªss
 +
	`_dw¨f_decode_uÀb128
(&
p
) *

152 
li
->
li_möÀn
;

154 
DW_LNS_adv™˚_löe
:

155 
löe
 +
	`_dw¨f_decode_¶eb128
(&
p
);

157 
DW_LNS_£t_fûe
:

158 
fûe
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

160 
DW_LNS_£t_cﬁumn
:

161 
cﬁumn
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

163 
DW_LNS_√g©e_°mt
:

164 
is_°mt
 = !is_stmt;

166 
DW_LNS_£t_basic_block
:

167 
basic_block
 = 1;

169 
DW_LNS_c⁄°_add_pc
:

170 
addªss
 +
	`ADDRESS
(255);

172 
DW_LNS_fixed_adv™˚_pc
:

173 
addªss
 +
dbg
->
	`decode
(&
p
, 2);

175 
DW_LNS_£t_¥ﬁogue_íd
:

176 
¥ﬁogue_íd
 = 1;

178 
DW_LNS_£t_ïûogue_begö
:

179 
ïûogue_begö
 = 1;

181 
DW_LNS_£t_iß
:

182 
iß
 = 
	`_dw¨f_decode_uÀb128
(&
p
);

195 
löe
 +
	`LINE
(*
p
);

196 
addªss
 +
	`ADDRESS
(*
p
);

197 
APPEND_ROW
;

198 
basic_block
 = 0;

199 
¥ﬁogue_íd
 = 0;

200 
ïûogue_begö
 = 0;

201 
p
++;

205  (
DW_DLE_NONE
);

207 
¥og_Áû
:

209  (
ªt
);

211 #unde‡
RESET_REGISTERS


212 #unde‡
APPEND_ROW


213 #unde‡
LINE


214 #unde‡
ADDRESS


215 
	}
}

218 
	$_dw¨f_löío_add_fûe
(
Dw¨f_LöeInfo
 
li
, 
uöt8_t
 **
p
, c⁄° *
compdú
,

219 
Dw¨f_Eº‹
 *
îr‹
, 
Dw¨f_Debug
 
dbg
)

221 *
‚ame
;

223 
uöt8_t
 *
§c
;

224 
¶í
;

226 
§c
 = *
p
;

234 
‚ame
 = (*Ë
§c
;

235 
§c
 +
	`°æí
(
‚ame
) + 1;

236 
	`_dw¨f_decode_uÀb128
(&
§c
);

255 
	`_dw¨f_decode_uÀb128
(&
§c
);

256 
	`_dw¨f_decode_uÀb128
(&
§c
);

260 *
p
 = 
§c
;

262  (
DW_DLE_NONE
);

263 
	}
}

266 
	$_dw¨f_löío_öô
(
Dw¨f_Dõ
 *
dõ
, 
uöt64_t
 
off£t
, 
Dw¨f_LöeInfo
 
löfo
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

268 
Dw¨f_Se˘i⁄
 
myds
 = {.
ds_«me
 = ".debug_line"};

269 
Dw¨f_Se˘i⁄
 *
ds
 = &
myds
;

270 
Dw¨f_CU
 *
cu
;

271 
Dw¨f_Aâribuã
 
©
;

272 
Dw¨f_LöeInfo
 
li
;

274 
uöt64_t
 
Àngth
, 
hdroff
, 
ídoff
;

275 
uöt8_t
 *
p
;

276 
dw¨f_size
, 
i
, 
ªt
;

278 
cu
 = 
dõ
->
cu_hódî
;

279 
	`as£π
(
cu
 !
NULL
);

280 
	`as£π
(
dbg
 !
NULL
);

282 i‡((
	`_dw¨f_föd_£˘i⁄_íh™˚d
(
ds
)) != 0)

283  (
DW_DLE_NONE
);

285 
li
 = 
löfo
;

305 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 4);

306 i‡(
Àngth
 == 0xffffffff) {

307 
dw¨f_size
 = 8;

308 
Àngth
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 8);

310 
dw¨f_size
 = 4;

312 i‡(
Àngth
 > 
ds
->
ds_size
 - 
off£t
) {

313 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_DEBUG_LINE_LENGTH_BAD
);

314  (
DW_DLE_DEBUG_LINE_LENGTH_BAD
);

319 
li
->
li_Àngth
 = 
Àngth
;

320 
ídoff
 = 
off£t
 + 
Àngth
;

321 
li
->
li_vîsi⁄
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 2);

322 
li
->
li_hdæí
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 
dw¨f_size
);

323 
hdroff
 = 
off£t
;

324 
li
->
li_möÀn
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

325 
li
->
li_def°mt
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

326 
li
->
li_lba£
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

327 
li
->
li_Ã™ge
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

328 
li
->
li_›ba£
 = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

332 i‡(()
li
->
li_hdæí
 - 5 <Üi->
li_›ba£
 - 1) {

333 
ªt
 = 
DW_DLE_DEBUG_LINE_LENGTH_BAD
;

334 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
ªt
);

335 
Áû_˛ónup
;

338 
li
->
li_›Àn
 = 
globÆ_°d_›
;

349 
i
 = 1; i < 
li
->
li_›ba£
; i++)

350 
li
->
li_›Àn
[
i
] = 
dbg
->
	`ªad
(
ds
->
ds_d©a
, &
off£t
, 1);

355 
Àngth
 = 0;

356 
p
 = 
ds
->
ds_d©a
 + 
off£t
;

357 *
p
 != '\0') {

358 *
p
++ != '\0')

360 
Àngth
++;

362 
li
->
li_ö˛í
 = 
Àngth
;

365 i‡(
p
 - 
ds
->
ds_d©a
 > (Ëds->
ds_size
) {

366 
ªt
 = 
DW_DLE_DEBUG_LINE_LENGTH_BAD
;

367 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
ªt
);

368 
Áû_˛ónup
;

386 
p
++;

391 *
p
 != '\0') {

392 
ªt
 = 
	`_dw¨f_löío_add_fûe
(
li
, &
p
, 
NULL
, 
îr‹
, 
dbg
);

396 
p
++;

398 i‡(
p
 - 
ds
->
ds_d©a
 - 
hdroff
 !
li
->
li_hdæí
) {

399 
ªt
 = 
DW_DLE_DEBUG_LINE_LENGTH_BAD
;

400 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
ªt
);

401 
Áû_˛ónup
;

407 
ªt
 = 
	`_dw¨f_löío_run_¥ogøm
(
cu
, 
li
, 
p
, 
ds
->
ds_d©a
 + 
ídoff
, 
pc
,

408 
îr‹
);

409 i‡(
ªt
 !
DW_DLE_NONE
)

410 
Áû_˛ónup
;

414  (
DW_DLE_NONE
);

416 
Áû_˛ónup
:

421  (
ªt
);

422 
	}
}

425 
	$dw¨f_§˛öes
(
Dw¨f_Dõ
 *
dõ
, 
Dw¨f_Löe
 
löebuf
, 
Dw¨f_Addr
 
pc
, 
Dw¨f_Eº‹
 *
îr‹
)

427 
_Dw¨f_LöeInfo
 
li
;

428 
Dw¨f_Aâribuã
 *
©
;

430 
	`as£π
(
dõ
);

431 
	`as£π
(
löebuf
);

433 
	`mem£t
(&
li
, 0, (
_Dw¨f_LöeInfo
));

435 i‡((
©
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_°mt_li°
)Ë=
NULL
) {

436 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_ENTRY
);

437  (
DW_DLV_NO_ENTRY
);

440 i‡(
	`_dw¨f_löío_öô
(
dõ
, 
©
->
u
[0].
u64
, &
li
, 
pc
, 
îr‹
) !=

441 
DW_DLE_NONE
)

443  (
DW_DLV_ERROR
);

445 *
löebuf
 = 
li
.
li_löe
;

447  (
DW_DLV_OK
);

448 
	}
}

	@kern/libdwarf_rw.c

27 
	~<öc/°dio.h
>

28 
	~<öc/as£π.h
>

29 
	~<öc/ty≥s.h
>

30 
	~<öc/°rög.h
>

31 
	~"dw¨f_ñf.h
"

32 
	~"dw¨f_deföe.h
"

33 
	~"dw¨f_îr‹.h
"

34 
	~"dw¨f.h
"

37 
Dw¨f_Aâribuã
* 
_dw¨f_©å_föd
(
Dw¨f_Dõ
 *
dõ
, 
uöt16_t
 
©å
);

38 * 
ñf_ba£_±r
;

40 
_dw¨f_‰ame_∑øms_öô
(
Dw¨f_Debug
 
dbg
);

42 
Dw¨f_Se˘i⁄
 *

43 
_dw¨f_föd_£˘i⁄
(c⁄° *
«me
);

45 
_dw¨f_föd_£˘i⁄_íh™˚d
(
Dw¨f_Se˘i⁄
 *
ds
);

47 
uöt64_t


48 
	$_dw¨f_ªad_lsb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
)

50 
uöt64_t
 
ªt
;

51 
uöt8_t
 *
§c
;

53 
§c
 = 
d©a
 + *
off£ç
;

55 
ªt
 = 0;

56 
byãs_to_ªad
) {

58 
ªt
 |((
uöt64_t
Ë
§c
[4]) << 32 | ((uint64_t) src[5]) << 40;

59 
ªt
 |((
uöt64_t
Ë
§c
[6]) << 48 | ((uint64_t) src[7]) << 56;

61 
ªt
 |((
uöt64_t
Ë
§c
[2]) << 16 | ((uint64_t) src[3]) << 24;

63 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 8;

65 
ªt
 |
§c
[0];

71 *
off£ç
 +
byãs_to_ªad
;

73  (
ªt
);

74 
	}
}

76 
uöt64_t


77 
	$_dw¨f_decode_lsb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
)

79 
uöt64_t
 
ªt
;

80 
uöt8_t
 *
§c
;

82 
§c
 = *
d©a
;

84 
ªt
 = 0;

85 
byãs_to_ªad
) {

87 
ªt
 |((
uöt64_t
Ë
§c
[4]) << 32 | ((uint64_t) src[5]) << 40;

88 
ªt
 |((
uöt64_t
Ë
§c
[6]) << 48 | ((uint64_t) src[7]) << 56;

90 
ªt
 |((
uöt64_t
Ë
§c
[2]) << 16 | ((uint64_t) src[3]) << 24;

92 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 8;

94 
ªt
 |
§c
[0];

100 *
d©a
 +
byãs_to_ªad
;

102  (
ªt
);

103 
	}
}

105 
uöt64_t


106 
	$_dw¨f_ªad_msb
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
, 
byãs_to_ªad
)

108 
uöt64_t
 
ªt
;

109 
uöt8_t
 *
§c
;

111 
§c
 = 
d©a
 + *
off£ç
;

113 
byãs_to_ªad
) {

115 
ªt
 = 
§c
[0];

118 
ªt
 = 
§c
[1] | ((
uöt64_t
) src[0]) << 8;

121 
ªt
 = 
§c
[3] | ((
uöt64_t
) src[2]) << 8;

122 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 16 | ((uint64_t) src[0]) << 24;

125 
ªt
 = 
§c
[7] | ((
uöt64_t
) src[6]) << 8;

126 
ªt
 |((
uöt64_t
Ë
§c
[5]) << 16 | ((uint64_t) src[4]) << 24;

127 
ªt
 |((
uöt64_t
Ë
§c
[3]) << 32 | ((uint64_t) src[2]) << 40;

128 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 48 | ((uint64_t) src[0]) << 56;

134 *
off£ç
 +
byãs_to_ªad
;

136  (
ªt
);

137 
	}
}

139 
uöt64_t


140 
	$_dw¨f_decode_msb
(
uöt8_t
 **
d©a
, 
byãs_to_ªad
)

142 
uöt64_t
 
ªt
;

143 
uöt8_t
 *
§c
;

145 
§c
 = *
d©a
;

147 
ªt
 = 0;

148 
byãs_to_ªad
) {

150 
ªt
 = 
§c
[0];

153 
ªt
 = 
§c
[1] | ((
uöt64_t
) src[0]) << 8;

156 
ªt
 = 
§c
[3] | ((
uöt64_t
) src[2]) << 8;

157 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 16 | ((uint64_t) src[0]) << 24;

160 
ªt
 = 
§c
[7] | ((
uöt64_t
) src[6]) << 8;

161 
ªt
 |((
uöt64_t
Ë
§c
[5]) << 16 | ((uint64_t) src[4]) << 24;

162 
ªt
 |((
uöt64_t
Ë
§c
[3]) << 32 | ((uint64_t) src[2]) << 40;

163 
ªt
 |((
uöt64_t
Ë
§c
[1]) << 48 | ((uint64_t) src[0]) << 56;

170 *
d©a
 +
byãs_to_ªad
;

172  (
ªt
);

173 
	}
}

175 
öt64_t


176 
	$_dw¨f_ªad_¶eb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
)

178 
öt64_t
 
ªt
 = 0;

179 
uöt8_t
 
b
;

180 
shi·
 = 0;

181 
uöt8_t
 *
§c
;

183 
§c
 = 
d©a
 + *
off£ç
;

186 
b
 = *
§c
++;

187 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

188 (*
off£ç
)++;

189 
shi·
 += 7;

190 } (
b
 & 0x80) != 0);

192 i‡(
shi·
 < 32 && (
b
 & 0x40) != 0)

193 
ªt
 |(-1 << 
shi·
);

195  (
ªt
);

196 
	}
}

198 
uöt64_t


199 
	$_dw¨f_ªad_uÀb128
(
uöt8_t
 *
d©a
, 
uöt64_t
 *
off£ç
)

201 
uöt64_t
 
ªt
 = 0;

202 
uöt8_t
 
b
;

203 
shi·
 = 0;

204 
uöt8_t
 *
§c
;

206 
§c
 = 
d©a
 + *
off£ç
;

209 
b
 = *
§c
++;

210 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

211 (*
off£ç
)++;

212 
shi·
 += 7;

213 } (
b
 & 0x80) != 0);

215  (
ªt
);

216 
	}
}

218 
öt64_t


219 
	$_dw¨f_decode_¶eb128
(
uöt8_t
 **
dp
)

221 
öt64_t
 
ªt
 = 0;

222 
uöt8_t
 
b
;

223 
shi·
 = 0;

225 
uöt8_t
 *
§c
 = *
dp
;

228 
b
 = *
§c
++;

229 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

230 
shi·
 += 7;

231 } (
b
 & 0x80) != 0);

233 i‡(
shi·
 < 32 && (
b
 & 0x40) != 0)

234 
ªt
 |(-1 << 
shi·
);

236 *
dp
 = 
§c
;

238  (
ªt
);

239 
	}
}

241 
uöt64_t


242 
	$_dw¨f_decode_uÀb128
(
uöt8_t
 **
dp
)

244 
uöt64_t
 
ªt
 = 0;

245 
uöt8_t
 
b
;

246 
shi·
 = 0;

248 
uöt8_t
 *
§c
 = *
dp
;

251 
b
 = *
§c
++;

252 
ªt
 |((
b
 & 0x7fË<< 
shi·
);

253 
shi·
 += 7;

254 } (
b
 & 0x80) != 0);

256 *
dp
 = 
§c
;

258  (
ªt
);

259 
	}
}

261 
	#Dw¨f_Unsig√d
 
uöt64_t


	)

264 
	$_dw¨f_ªad_°rög
(*
d©a
, 
Dw¨f_Unsig√d
 
size
, 
uöt64_t
 *
off£ç
)

266 *
ªt
, *
§c
;

268 
ªt
 = 
§c
 = (*Ë
d©a
 + *
off£ç
;

270 *
§c
 !'\0' && *
off£ç
 < 
size
) {

271 
§c
++;

272 (*
off£ç
)++;

275 i‡(*
§c
 ='\0' && *
off£ç
 < 
size
)

276 (*
off£ç
)++;

278  (
ªt
);

279 
	}
}

281 
uöt8_t
 *

282 
	$_dw¨f_ªad_block
(*
d©a
, 
uöt64_t
 *
off£ç
, uöt64_à
Àngth
)

284 
uöt8_t
 *
ªt
, *
§c
;

286 
ªt
 = 
§c
 = (
uöt8_t
 *Ë
d©a
 + *
off£ç
;

288 (*
off£ç
Ë+
Àngth
;

290  (
ªt
);

291 
	}
}

293 
Dw¨f_Endü¬ess


294 
	$_dw¨f_ñf_gë_byã_‹dî
(*
obj
)

296 
Elf
 *
e
;

298 
e
 = (
Elf
 *)
obj
;

299 
	`as£π
(
e
 !
NULL
);

304 
e
->
e_idít
[
EI_DATA
]) {

305 
ELFDATA2MSB
:

306  (
DW_OBJECT_MSB
);

308 
ELFDATA2LSB
:

309 
ELFDATANONE
:

311  (
DW_OBJECT_LSB
);

313 
	}
}

315 
Dw¨f_SmÆl


316 
	$_dw¨f_ñf_gë_poöãr_size
(*
obj
)

318 
Elf
 *
e
;

320 
e
 = (
Elf
 *Ë
obj
;

321 
	`as£π
(
e
 !
NULL
);

323 i‡(
e
->
e_idít
[4] =
ELFCLASS32
)

327 
	}
}

330 
	$_dw¨f_öô
(
Dw¨f_Debug
 
dbg
, *
obj
)

332 
	`mem£t
(
dbg
, 0, (
_Dw¨f_Debug
));

333 
dbg
->
cuº_off_dbgöfo
 = 0;

334 
dbg
->
dbg_öfo_size
 = 0;

335 
dbg
->
dbg_poöãr_size
 = 
	`_dw¨f_ñf_gë_poöãr_size
(
obj
);

337 i‡(
	`_dw¨f_ñf_gë_byã_‹dî
(
obj
Ë=
DW_OBJECT_MSB
) {

338 
dbg
->
ªad
 = 
_dw¨f_ªad_msb
;

339 
dbg
->
decode
 = 
_dw¨f_decode_msb
;

341 
dbg
->
ªad
 = 
_dw¨f_ªad_lsb
;

342 
dbg
->
decode
 = 
_dw¨f_decode_lsb
;

344 
	`_dw¨f_‰ame_∑øms_öô
(
dbg
);

346 
	}
}

349 
	$_gë_√xt_cu
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
)

351 
uöt32_t
 
Àngth
;

352 
uöt64_t
 
off£t
;

353 
uöt8_t
 
dw¨f_size
;

355 if(
dbg
->
cuº_off_dbgöfo
 > dbg->
dbg_öfo_size
)

358 
off£t
 = 
dbg
->
cuº_off_dbgöfo
;

359 
cu
->
cu_off£t
 = 
off£t
;

361 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
,4);

362 i‡(
Àngth
 == 0xffffffff) {

363 
Àngth
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 8);

364 
dw¨f_size
 = 8;

366 
dw¨f_size
 = 4;

369 
cu
->
cu_dw¨f_size
 = 
dw¨f_size
;

381 
dbg
->
cuº_off_dbgöfo
 = 
off£t
 + 
Àngth
;

382 
cu
->
cu_√xt_off£t
 = 
dbg
->
cuº_off_dbgöfo
;

385 
cu
->
cu_Àngth
 = (
uöt64_t
)
Àngth
;

387 
cu
->
cu_Àngth_size
 = (
dw¨f_size
 == 4 ? 4 : 12);

388 
cu
->
vîsi⁄
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 2);

389 
cu
->
debug_abbªv_off£t
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 
dw¨f_size
);

391 
cu
->
addr_size
 = 
dbg
->
	`ªad
((
uöt8_t
 *)dbg->
dbg_öfo_off£t_ñf
, &
off£t
, 1);

393 i‡(
cu
->
vîsi⁄
 < 2 || cu->version > 4) {

397 
cu
->
cu_dõ_off£t
 = 
off£t
;

400 
	}
}

402 
	$¥öt_cu
(
Dw¨f_CU
 
cu
)

404 
	`˝rötf
("%ld---%du--%d\n",
cu
.
cu_Àngth
,cu.
vîsi⁄
,cu.
addr_size
);

405 
	}
}

409 
	$_dw¨f_abbªv_∑r£
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 
cu
, 
Dw¨f_Unsig√d
 *
off£t
,

410 
Dw¨f_Abbªv
 *
abp
, 
Dw¨f_Se˘i⁄
 *
ds
)

412 
uöt64_t
 
©å
;

413 
uöt64_t
 
íåy
;

414 
uöt64_t
 
f‹m
;

415 
uöt64_t
 
aboff
;

416 
uöt64_t
 
adoff
;

417 
uöt64_t
 
èg
;

418 
uöt8_t
 
chûdªn
;

419 
uöt64_t
 
abbr_addr
;

420 
ªt
;

422 
	`as£π
(
abp
 !
NULL
);

423 
	`as£π
(
ds
 !
NULL
);

425 i‡(*
off£t
 >
ds
->
ds_size
)

426  (
DW_DLE_NO_ENTRY
);

428 
aboff
 = *
off£t
;

430 
abbr_addr
 = (
uöt64_t
)
ds
->
ds_d©a
;

432 
íåy
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

434 i‡(
íåy
 == 0) {

437 
abp
->
ab_íåy
 = 0;

438  
DW_DLE_NONE
;

441 
èg
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

442 
chûdªn
 = 
dbg
->
	`ªad
((
uöt8_t
 *)
abbr_addr
, 
off£t
, 1);

444 
abp
->
ab_íåy
 = 
íåy
;

445 
abp
->
ab_èg
 = 
èg
;

446 
abp
->
ab_chûdªn
 = 
chûdªn
;

447 
abp
->
ab_off£t
 = 
aboff
;

448 
abp
->
ab_Àngth
 = 0;

449 
abp
->
ab_©num
 = 0;

453 
adoff
 = *
off£t
;

454 
©å
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

455 
f‹m
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
abbr_addr
, 
off£t
);

456 i‡(
©å
 != 0)

459 
abp
->
ab_©ådef
[abp->
ab_©num
].
ad_©åib
 = 
©å
;

460 
abp
->
ab_©ådef
[abp->
ab_©num
].
ad_f‹m
 = 
f‹m
;

461 
abp
->
ab_©ådef
[abp->
ab_©num
].
ad_off£t
 = 
adoff
;

462 
abp
->
ab_©num
++;

464 } 
©å
 != 0);

467 
abp
->
ab_Àngth
 = (
uöt64_t
)(*
off£t
 - 
aboff
);

469  
DW_DLV_OK
;

470 
	}
}

474 
	$_dw¨f_abbªv_föd
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 
cu
, 
uöt64_t
 
íåy
, 
Dw¨f_Abbªv
 *
abp
)

476 
Dw¨f_Se˘i⁄
 *
ds
;

477 
uöt64_t
 
off£t
;

478 
ªt
;

480 i‡(
íåy
 == 0)

482  (
DW_DLE_NO_ENTRY
);

486 
ds
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_abbrev");

487 
	`as£π
(
ds
 !
NULL
);

493 
off£t
 = 
cu
.
debug_abbªv_off£t
;

494 
off£t
 < 
ds
->
ds_size
) {

495 
ªt
 = 
	`_dw¨f_abbªv_∑r£
(
dbg
, 
cu
, &
off£t
, 
abp
, 
ds
);

496 i‡(
ªt
 !
DW_DLE_NONE
)

497  (
ªt
);

498 i‡(
abp
->
ab_íåy
 =
íåy
) {

500  
DW_DLE_NONE
;

502 i‡(
abp
->
ab_íåy
 == 0) {

509  
DW_DLE_NO_ENTRY
;

510 
	}
}

514 
	$_dw¨f_©å_öô
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 *
off£ç
, 
Dw¨f_CU
 *
cu
, 
Dw¨f_Dõ
 *
ªt_dõ
, 
Dw¨f_AârDef
 *
ad
,

515 
uöt64_t
 
f‹m
, 
ödúe˘
)

517 
_Dw¨f_Aâribuã
 
©ªf
;

518 
Dw¨f_Se˘i⁄
 *
°r
;

519 
ªt
;

520 
Dw¨f_Se˘i⁄
 *
ds
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_info");

521 
uöt8_t
 *
ds_d©a
 = (uöt8_à*)
ds
->ds_data;

522 
uöt8_t
 
dw¨f_size
 = 
cu
->
cu_dw¨f_size
;

524 
ªt
 = 
DW_DLE_NONE
;

525 
	`mem£t
(&
©ªf
, 0, (atref));

526 
©ªf
.
©_dõ
 = 
ªt_dõ
;

527 
©ªf
.
©_©åib
 = 
ad
->
ad_©åib
;

528 
©ªf
.
©_f‹m
 = 
ad
->
ad_f‹m
;

529 
©ªf
.
©_ödúe˘
 = 
ödúe˘
;

530 
©ªf
.
©_ld
 = 
NULL
;

532 
f‹m
) {

533 
DW_FORM_addr
:

534 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
cu
->
addr_size
);

536 
DW_FORM_block
:

537 
DW_FORM_ex¥loc
:

538 
©ªf
.
u
[0].
u64
 = 
	`_dw¨f_ªad_uÀb128
(
ds_d©a
, 
off£ç
);

539 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

541 
DW_FORM_block1
:

542 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 1);

543 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

545 
DW_FORM_block2
:

546 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 2);

547 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

549 
DW_FORM_block4
:

550 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 4);

551 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
);

553 
DW_FORM_d©a1
:

554 
DW_FORM_Êag
:

555 
DW_FORM_ªf1
:

556 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 1);

558 
DW_FORM_d©a2
:

559 
DW_FORM_ªf2
:

560 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 2);

562 
DW_FORM_d©a4
:

563 
DW_FORM_ªf4
:

564 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 4);

566 
DW_FORM_d©a8
:

567 
DW_FORM_ªf8
:

568 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 8);

570 
DW_FORM_ödúe˘
:

571 
f‹m
 = 
	`_dw¨f_ªad_uÀb128
(
ds_d©a
, 
off£ç
);

572  (
	`_dw¨f_©å_öô
(
dbg
, 
off£ç
, 
cu
, 
ªt_dõ
, 
ad
, 
f‹m
, 1));

573 
DW_FORM_ªf_addr
:

574 i‡(
cu
->
vîsi⁄
 == 2)

575 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
cu
->
addr_size
);

576 i‡(
cu
->
vîsi⁄
 == 3)

577 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
dw¨f_size
);

579 
DW_FORM_ªf_ud©a
:

580 
DW_FORM_ud©a
:

581 
©ªf
.
u
[0].
u64
 = 
	`_dw¨f_ªad_uÀb128
(
ds_d©a
, 
off£ç
);

583 
DW_FORM_sd©a
:

584 
©ªf
.
u
[0].
s64
 = 
	`_dw¨f_ªad_¶eb128
(
ds_d©a
, 
off£ç
);

586 
DW_FORM_£c_off£t
:

587 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
dw¨f_size
);

589 
DW_FORM_°rög
:

590 
©ªf
.
u
[0].
s
 =(*Ë
	`_dw¨f_ªad_°rög
(
ds_d©a
, (
uöt64_t
)
ds
->
ds_size
, 
off£ç
);

592 
DW_FORM_°Ω
:

593 
©ªf
.
u
[0].
u64
 = 
dbg
->
	`ªad
(
ds_d©a
, 
off£ç
, 
dw¨f_size
);

594 
°r
 = 
	`_dw¨f_föd_£˘i⁄
(".debug_str");

595 
	`as£π
(
°r
 !
NULL
);

597 
©ªf
.
u
[1].
s
 = (*)
°r
->
ds_d©a
 +áåef.u[0].
u64
;

599 
DW_FORM_ªf_sig8
:

600 
©ªf
.
u
[0].
u64
 = 8;

601 
©ªf
.
u
[1].
u8p
 = (
uöt8_t
*)(
	`_dw¨f_ªad_block
(
ds_d©a
, 
off£ç
,áåef.u[0].
u64
));

603 
DW_FORM_Êag_¥e£¡
:

605 
©ªf
.
u
[0].
u64
 = 1;

609 
ªt
 = 
DW_DLE_ATTR_FORM_BAD
;

613 i‡(
ªt
 =
DW_DLE_NONE
) {

614 i‡(
f‹m
 =
DW_FORM_block
 || f‹m =
DW_FORM_block1
 ||

615 
f‹m
 =
DW_FORM_block2
 || f‹m =
DW_FORM_block4
) {

616 
©ªf
.
©_block
.
bl_Àn
 =áåef.
u
[0].
u64
;

617 
©ªf
.
©_block
.
bl_d©a
 =áåef.
u
[1].
u8p
;

620 i‡(
©ªf
.
©_©åib
 =
DW_AT_«me
) {

621 
©ªf
.
©_f‹m
) {

622 
DW_FORM_°Ω
:

623 
ªt_dõ
->
dõ_«me
 = 
©ªf
.
u
[1].
s
;

625 
DW_FORM_°rög
:

626 
ªt_dõ
->
dõ_«me
 = 
©ªf
.
u
[0].
s
;

632 
ªt_dõ
->
dõ_©å
[ªt_dõ->
dõ_©å_cou¡
++] = 
©ªf
;

635  (
ªt
);

636 
	}
}

639 
	$dw¨f_£¨ch_dõ_wôhö_cu
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 
cu
, 
uöt64_t
 
off£t
, 
Dw¨f_Dõ
 *
ªt_dõ
, 
£¨ch_siblög
)

641 
Dw¨f_Abbªv
 
ab
;

642 
Dw¨f_AârDef
 
ad
;

643 
uöt64_t
 
abnum
;

644 
uöt64_t
 
dõ_off£t
;

645 
ªt
, 
Àvñ
;

646 
i
;

648 
	`as£π
(
dbg
);

650 
	`as£π
(
ªt_dõ
);

652 
Àvñ
 = 1;

654 
off£t
 < 
cu
.
cu_√xt_off£t
 && off£à< 
dbg
->
dbg_öfo_size
) {

656 
dõ_off£t
 = 
off£t
;

658 
abnum
 = 
	`_dw¨f_ªad_uÀb128
((
uöt8_t
 *)
dbg
->
dbg_öfo_off£t_ñf
, &
off£t
);

660 i‡(
abnum
 == 0) {

661 i‡(
Àvñ
 =0 || !
£¨ch_siblög
) {

663  (
DW_DLE_NO_ENTRY
);

668 
Àvñ
--;

672 i‡((
ªt
 = 
	`_dw¨f_abbªv_föd
(
dbg
, 
cu
, 
abnum
, &
ab
)Ë!
DW_DLE_NONE
)

673  (
ªt
);

674 
ªt_dõ
->
dõ_off£t
 = die_offset;

675 
ªt_dõ
->
dõ_abnum
 = 
abnum
;

676 
ªt_dõ
->
dõ_ab
 = 
ab
;

677 
ªt_dõ
->
dõ_©å_cou¡
 = 0;

678 
ªt_dõ
->
dõ_èg
 = 
ab
.
ab_èg
;

682 
i
=0; i < 
ab
.
ab_©num
; i++)

684 i‡((
ªt
 = 
	`_dw¨f_©å_öô
(
dbg
, &
off£t
, &
cu
, 
ªt_dõ
, &
ab
.
ab_©ådef
[
i
],áb.ab_©ådef[i].
ad_f‹m
, 0)Ë!
DW_DLE_NONE
)

685  (
ªt
);

688 
ªt_dõ
->
dõ_√xt_off
 = 
off£t
;

689 i‡(
£¨ch_siblög
 && 
Àvñ
 > 0) {

691 i‡(
ab
.
ab_chûdªn
 =
DW_CHILDREN_yes
) {

693 
Àvñ
++;

697  (
DW_DLE_NONE
);

701  (
DW_DLE_NO_ENTRY
);

702 
	}
}

706 
	$dw¨f_offdõ
(
Dw¨f_Debug
 
dbg
, 
uöt64_t
 
off£t
, 
Dw¨f_Dõ
 *
ªt_dõ
, 
Dw¨f_CU
 
cu
)

708 
ªt
;

710 
	`as£π
(
dbg
);

711 
	`as£π
(
ªt_dõ
);

714 i‡(
off£t
 < 
cu
.
cu_√xt_off£t
) {

715 
ªt
 = 
	`dw¨f_£¨ch_dõ_wôhö_cu
(
dbg
, 
cu
, 
off£t
, 
ªt_dõ
, 0);

716  
ªt
;

720  
DW_DLV_OK
;

721 
	}
}

723 
Dw¨f_Aâribuã
*

724 
	$_dw¨f_©å_föd
(
Dw¨f_Dõ
 *
dõ
, 
uöt16_t
 
©å
)

726 
Dw¨f_Aâribuã
 *
my©
 = 
NULL
;

727 
i
;

729 
i
=0; i < 
dõ
->
dõ_©å_cou¡
; i++)

731 i‡(
dõ
->
dõ_©å
[
i
].
©_©åib
 =
©å
)

733 
my©
 = &(
dõ
->
dõ_©å
[
i
]);

738  
my©
;

739 
	}
}

743 
	$dw¨f_siblögof
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_Dõ
 *
dõ
, Dw¨f_Dõ *
ªt_dõ
,

744 
Dw¨f_CU
 *
cu
)

746 
Dw¨f_Aâribuã
 *
©
;

747 
uöt64_t
 
off£t
;

748 
ªt
, 
£¨ch_siblög
;

750 
	`as£π
(
dbg
);

751 
	`as£π
(
ªt_dõ
);

752 
	`as£π
(
cu
);

755 i‡(
dõ
 =
NULL
)

756  (
	`dw¨f_offdõ
(
dbg
, 
cu
->
cu_dõ_off£t
, 
ªt_dõ
, *cu));

762 
£¨ch_siblög
 = 0;

763 i‡(
dõ
->
dõ_ab
.
ab_chûdªn
 =
DW_CHILDREN_no
)

764 
off£t
 = 
dõ
->
dõ_√xt_off
;

770 i‡((
©
 = 
	`_dw¨f_©å_föd
(
dõ
, 
DW_AT_siblög
)Ë!
NULL
) {

771 i‡(
©
->
©_f‹m
 !
DW_FORM_ªf_addr
)

772 
off£t
 = 
©
->
u
[0].
u64
 + 
cu
->
cu_off£t
;

774 
off£t
 = 
©
->
u
[0].
u64
;

776 
off£t
 = 
dõ
->
dõ_√xt_off
;

777 
£¨ch_siblög
 = 1;

781 
ªt
 = 
	`dw¨f_£¨ch_dõ_wôhö_cu
(
dbg
, *
cu
, 
off£t
, 
ªt_dõ
, 
£¨ch_siblög
);

784 i‡(
ªt
 =
DW_DLE_NO_ENTRY
) {

785  (
DW_DLV_NO_ENTRY
);

786 } i‡(
ªt
 !
DW_DLE_NONE
)

787  (
DW_DLV_ERROR
);

790  (
DW_DLV_OK
);

791 
	}
}

794 
	$dw¨f_chûd
(
Dw¨f_Debug
 
dbg
, 
Dw¨f_CU
 *
cu
, 
Dw¨f_Dõ
 *
dõ
, Dw¨f_Dõ *
ªt_dõ
)

796 
ªt
;

798 
	`as£π
(
dõ
);

799 
	`as£π
(
ªt_dõ
);

800 
	`as£π
(
dbg
);

801 
	`as£π
(
cu
);

803 i‡(
dõ
->
dõ_ab
.
ab_chûdªn
 =
DW_CHILDREN_no
)

804  (
DW_DLE_NO_ENTRY
);

806 
ªt
 = 
	`dw¨f_£¨ch_dõ_wôhö_cu
(
dbg
, *
cu
, 
dõ
->
dõ_√xt_off
, 
ªt_dõ
, 0);

808 i‡(
ªt
 =
DW_DLE_NO_ENTRY
) {

809 
	`DWARF_SET_ERROR
(
dbg
, 
îr‹
, 
DW_DLE_NO_ENTRY
);

810  (
DW_DLV_NO_ENTRY
);

811 } i‡(
ªt
 !
DW_DLE_NONE
)

812  (
DW_DLV_ERROR
);

814  (
DW_DLV_OK
);

815 
	}
}

818 
	$_dw¨f_föd_£˘i⁄_íh™˚d
(
Dw¨f_Se˘i⁄
 *
ds
)

820 
Dw¨f_Se˘i⁄
 *
£˘hdr
 = 
	`_dw¨f_föd_£˘i⁄
(
ds
->
ds_«me
);

821 
ds
->
ds_d©a
 = 
£˘hdr
->ds_data;

822 
ds
->
ds_addr
 = 
£˘hdr
->ds_addr;

823 
ds
->
ds_size
 = 
£˘hdr
->ds_size;

826 
	}
}

	@kern/macro.h

1 
	#PUSHA
 \

2 
subq
 
$120
,%
r•
 ; \

3 
movq
 %
øx
,112(%
r•
); \

4 
movq
 %
rbx
,104(%
r•
); \

5 
movq
 %
rcx
,96(%
r•
); \

6 
movq
 %
rdx
,88(%
r•
); \

7 
movq
 %
rbp
,80(%
r•
); \

8 
movq
 %
rdi
,72(%
r•
); \

9 
movq
 %
rsi
,64(%
r•
); \

10 
movq
 %
r8
,56(%
r•
); \

11 
movq
 %
r9
,48(%
r•
); \

12 
movq
 %
r10
,40(%
r•
); \

13 
movq
 %
r11
,32(%
r•
); \

14 
movq
 %
r12
,24(%
r•
); \

15 
movq
 %
r13
,16(%
r•
); \

16 
movq
 %
r14
,8(%
r•
); \

17 
movq
 %
r15
,0(%
r•
);

	)

19 
	#POPA
 \

35 "\èddq $120,%%r•\n"

	)

37 
	#POPA_
 \

38 
movq
 0(%
r•
),%
r15
; \

39 
movq
 8(%
r•
),%
r14
; \

40 
movq
 16(%
r•
),%
r13
; \

41 
movq
 24(%
r•
),%
r12
; \

42 
movq
 32(%
r•
),%
r11
; \

43 
movq
 40(%
r•
),%
r10
; \

44 
movq
 48(%
r•
),%
r9
; \

45 
movq
 56(%
r•
),%
r8
; \

46 
movq
 64(%
r•
),%
rsi
; \

47 
movq
 72(%
r•
),%
rdi
; \

48 
movq
 80(%
r•
),%
rbp
; \

49 
movq
 88(%
r•
),%
rdx
; \

50 
movq
 96(%
r•
),%
rcx
; \

51 
movq
 104(%
r•
),%
rbx
; \

52 
movq
 112(%
r•
),%
øx
; \

53 
addq
 
$120
,%
r•
;

	)

	@kern/monitor.c

4 
	~<öc/°dio.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/x86.h
>

10 
	~<kîn/c⁄sﬁe.h
>

11 
	~<kîn/m⁄ô‹.h
>

12 
	~<kîn/dw¨f.h
>

13 
	~<kîn/kdebug.h
>

14 
	~<kîn/dw¨f_≠i.h
>

16 
	#CMDBUF_SIZE
 80

17 

	)

19 
	sComm™d
 {

20 c⁄° *
	m«me
;

21 c⁄° *
	mdesc
;

23 (*
	mfunc
)(
	m¨gc
, ** 
	m¨gv
, 
Tøp‰ame
* 
	mtf
);

26 
Comm™d
 
	gcomm™ds
[] = {

27 { "hñp", "Di•œyÅhi†li° o‡comm™ds", 
m⁄_hñp
 },

28 { "kînöfo", "Di•œy inf‹m©i⁄ábouàthêkî√l", 
m⁄_kînöfo
 },

30 
	#NCOMMANDS
 ((
comm™ds
)/(comm™ds[0]))

	)

35 
	$m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

37 
i
;

39 
i
 = 0; i < 
NCOMMANDS
; i++)

40 
	`˝rötf
("%†- %s\n", 
comm™ds
[
i
].
«me
, comm™ds[i].
desc
);

42 
	}
}

45 
	$m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

47 
_°¨t
[], 
íåy
[], 
ëext
[], 
ed©a
[], 
íd
[];

49 
	`˝rötf
("Special kernel symbols:\n");

50 
	`˝rötf
(" _°¨à %08x (phys)\n", 
_°¨t
);

51 
	`˝rötf
("É¡ry %08x (vútË %08x (phys)\n", 
íåy
,É¡ry - 
KERNBASE
);

52 
	`˝rötf
("Éãxà %08x (vútË %08x (phys)\n", 
ëext
,Éãxà- 
KERNBASE
);

53 
	`˝rötf
("Éd©® %08x (vútË %08x (phys)\n", 
ed©a
,Éd©®- 
KERNBASE
);

54 
	`˝rötf
("Énd %08x (vútË %08x (phys)\n", 
íd
,Énd - 
KERNBASE
);

55 
	`˝rötf
("KernelÉxecutable memory footprint: %dKB\n",

56 
	`ROUNDUP
(
íd
 - 
íåy
, 1024) / 1024);

58 
	}
}

61 
	$m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

65 
	}
}

71 
	#WHITESPACE
 "\t\r\¿"

	)

72 
	#MAXARGS
 16

	)

75 
	$runcmd
(*
buf
, 
Tøp‰ame
 *
tf
)

77 
¨gc
;

78 *
¨gv
[
MAXARGS
];

79 
i
;

82 
¨gc
 = 0;

83 
¨gv
[
¨gc
] = 0;

86 *
buf
 && 
	`°rchr
(
WHITESPACE
, *buf))

87 *
buf
++ = 0;

88 i‡(*
buf
 == 0)

92 i‡(
¨gc
 =
MAXARGS
-1) {

93 
	`˝rötf
("Toÿm™yárgumít†(max %d)\n", 
MAXARGS
);

96 
¨gv
[
¨gc
++] = 
buf
;

97 *
buf
 && !
	`°rchr
(
WHITESPACE
, *buf))

98 
buf
++;

100 
¨gv
[
¨gc
] = 0;

103 i‡(
¨gc
 == 0)

105 
i
 = 0; i < 
NCOMMANDS
; i++) {

106 i‡(
	`°rcmp
(
¨gv
[0], 
comm™ds
[
i
].
«me
) == 0)

107  
comm™ds
[
i
].
	`func
(
¨gc
, 
¨gv
, 
tf
);

109 
	`˝rötf
("Unknow¿comm™d '%s'\n", 
¨gv
[0]);

111 
	}
}

114 
	$m⁄ô‹
(
Tøp‰ame
 *
tf
)

116 *
buf
;

118 
	`˝rötf
("WelcomeÅoÅhe JOS kernel monitor!\n");

119 
	`˝rötf
("Type 'help' foráÜist of commands.\n");

123 
buf
 = 
	`ªadlöe
("K> ");

124 i‡(
buf
 !
NULL
)

125 i‡(
	`runcmd
(
buf
, 
tf
) < 0)

128 
	}
}

	@kern/monitor.h

1 #i‚de‡
JOS_KERN_MONITOR_H


2 
	#JOS_KERN_MONITOR_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	gTøp‰ame
;

12 
m⁄ô‹
(
Tøp‰ame
 *
tf
);

15 
m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

16 
m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

17 
m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

	@kern/printf.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°dio.h
>

6 
	~<öc/°d¨g.h
>

10 
	$putch
(
ch
, *
˙t
)

12 
	`˝utch¨
(
ch
);

13 *
˙t
++;

14 
	}
}

17 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

19 
˙t
 = 0;

20 
va_li°
 
aq
;

21 
	`va_c›y
(
aq
,
≠
);

22 
	`v¥ötfmt
((*)
putch
, &
˙t
, 
fmt
, 
aq
);

23 
	`va_íd
(
aq
);

24  
˙t
;

26 
	}
}

29 
	$˝rötf
(c⁄° *
fmt
, ...)

31 
va_li°
 
≠
;

32 
˙t
;

33 
	`va_°¨t
(
≠
, 
fmt
);

34 
va_li°
 
aq
;

35 
	`va_c›y
(
aq
,
≠
);

36 
˙t
 = 
	`v˝rötf
(
fmt
, 
aq
);

37 
	`va_íd
(
aq
);

39  
˙t
;

40 
	}
}

	@lib/printfmt.c

5 
	~<öc/ty≥s.h
>

6 
	~<öc/°dio.h
>

7 
	~<öc/°rög.h
>

8 
	~<öc/°d¨g.h
>

9 
	~<öc/îr‹.h
>

21 c⁄° * c⁄° 
	gîr‹_°rög
[
MAXERROR
] =

23 [
E_UNSPECIFIED
] = "unspecifiedÉrror",

24 [
E_BAD_ENV
] = "badÉnvironment",

25 [
E_INVAL
] = "invalidÖarameter",

26 [
E_NO_MEM
] = "out of memory",

27 [
E_NO_FREE_ENV
] = "out ofÉnvironments",

28 [
E_FAULT
] = "segmentation fault",

36 
¥öäum
((*
putch
)(, *), *
putd©
,

37 
num
, 
ba£
, 
width
, 
∑dc
)

40 i‡(
num
 >
ba£
) {

41 
	`¥öäum
(
putch
, 
putd©
, 
num
 / 
ba£
, ba£, 
width
 - 1, 
∑dc
);

44 --
width
 > 0)

45 
	`putch
(
∑dc
, 
putd©
);

49 
	`putch
("0123456789abcdef"[
num
 % 
ba£
], 
putd©
);

50 
	}
}

55 
	$gëuöt
(
va_li°
 *
≠
, 
lÊag
)

57 
x
;

58 i‡(
lÊag
 >= 2)

59 
x

	`va_¨g
(*
≠
, );

60 i‡(
lÊag
)

61 
x

	`va_¨g
(*
≠
, );

63 
x

	`va_¨g
(*
≠
, );

64  
x
;

65 
	}
}

70 
	$gëöt
(
va_li°
 *
≠
, 
lÊag
)

72 
x
;

73 i‡(
lÊag
 >= 2)

74 
x
=
	`va_¨g
(*
≠
, );

75 i‡(
lÊag
)

76 
x
=
	`va_¨g
(*
≠
, );

78 
x
=
	`va_¨g
(*
≠
, );

79  
x
;

80 
	}
}

84 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

87 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
 
≠
)

89 c⁄° *
p
;

90 
ch
, 
îr
;

91 
num
;

92 
ba£
, 
lÊag
, 
width
, 
¥ecisi⁄
, 
ÆtÊag
;

93 
∑dc
;

94 
va_li°
 
aq
;

95 
	`va_c›y
(
aq
,
≠
);

97 (
ch
 = *(*Ë
fmt
++) != '%') {

98 i‡(
ch
 == '\0')

100 
	`putch
(
ch
, 
putd©
);

104 
∑dc
 = ' ';

105 
width
 = -1;

106 
¥ecisi⁄
 = -1;

107 
lÊag
 = 0;

108 
ÆtÊag
 = 0;

109 
ªswôch
:

110 
ch
 = *(*Ë
fmt
++) {

114 
∑dc
 = '-';

115 
ªswôch
;

119 
∑dc
 = '0';

120 
ªswôch
;

132 
¥ecisi⁄
 = 0; ; ++
fmt
) {

133 
¥ecisi⁄
 =Öªcisi⁄ * 10 + 
ch
 - '0';

134 
ch
 = *
fmt
;

135 i‡(
ch
 < '0' || ch > '9')

138 
¥o˚ss_¥ecisi⁄
;

141 
¥ecisi⁄
 = 
	`va_¨g
(
aq
, );

142 
¥o˚ss_¥ecisi⁄
;

145 i‡(
width
 < 0)

146 
width
 = 0;

147 
ªswôch
;

150 
ÆtÊag
 = 1;

151 
ªswôch
;

153 
¥o˚ss_¥ecisi⁄
:

154 i‡(
width
 < 0)

155 
width
 = 
¥ecisi⁄
,Örecision = -1;

156 
ªswôch
;

160 
lÊag
++;

161 
ªswôch
;

165 
	`putch
(
	`va_¨g
(
aq
, ), 
putd©
);

170 
îr
 = 
	`va_¨g
(
aq
, );

171 i‡(
îr
 < 0)

172 
îr
 = -err;

173 i‡(
îr
 >
MAXERROR
 || (
p
 = 
îr‹_°rög
[îr]Ë=
NULL
)

174 
	`¥ötfmt
(
putch
, 
putd©
, "îr‹ %d", 
îr
);

176 
	`¥ötfmt
(
putch
, 
putd©
, "%s", 
p
);

181 i‡((
p
 = 
	`va_¨g
(
aq
, *)Ë=
NULL
)

182 
p
 = "(null)";

183 i‡(
width
 > 0 && 
∑dc
 != '-')

184 
width
 -
	`°∫Àn
(
p
, 
¥ecisi⁄
); width > 0; width--)

185 
	`putch
(
∑dc
, 
putd©
);

186 ; (
ch
 = *
p
++Ë!'\0' && (
¥ecisi⁄
 < 0 || --¥ecisi⁄ >0); 
width
--)

187 i‡(
ÆtÊag
 && (
ch
 < ' ' || ch > '~'))

188 
	`putch
('?', 
putd©
);

190 
	`putch
(
ch
, 
putd©
);

191 ; 
width
 > 0; width--)

192 
	`putch
(' ', 
putd©
);

197 
num
 = 
	`gëöt
(&
aq
, 3);

198 i‡((Ë
num
 < 0) {

199 
	`putch
('-', 
putd©
);

200 
num
 = -()Çum;

202 
ba£
 = 10;

203 
numbî
;

207 
num
 = 
	`gëuöt
(&
aq
, 3);

208 
ba£
 = 10;

209 
numbî
;

214 
	`putch
('X', 
putd©
);

215 
	`putch
('X', 
putd©
);

216 
	`putch
('X', 
putd©
);

221 
	`putch
('0', 
putd©
);

222 
	`putch
('x', 
putd©
);

223 
num
 = ()

224 (
uöçå_t
Ë
	`va_¨g
(
aq
, *);

225 
ba£
 = 16;

226 
numbî
;

230 
num
 = 
	`gëuöt
(&
aq
, 3);

231 
ba£
 = 16;

232 
numbî
:

233 
	`¥öäum
(
putch
, 
putd©
, 
num
, 
ba£
, 
width
, 
∑dc
);

238 
	`putch
(
ch
, 
putd©
);

243 
	`putch
('%', 
putd©
);

244 
fmt
--; fmt[-1] != '%'; fmt--)

249 
	`va_íd
(
aq
);

250 
	}
}

253 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...)

255 
va_li°
 
≠
;

257 
	`va_°¨t
(
≠
, 
fmt
);

258 
	`v¥ötfmt
(
putch
, 
putd©
, 
fmt
, 
≠
);

259 
	`va_íd
(
≠
);

260 
	}
}

262 
	s•rötbuf
 {

263 *
	mbuf
;

264 *
	mebuf
;

265 
	m˙t
;

269 
	$•röçutch
(
ch
, 
•rötbuf
 *
b
)

271 
b
->
˙t
++;

272 i‡(
b
->
buf
 < b->
ebuf
)

273 *
b
->
buf
++ = 
ch
;

274 
	}
}

277 
	$v¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, 
va_li°
 
≠
)

279 
va_li°
 
aq
;

280 
	`va_c›y
(
aq
,
≠
);

281 
•rötbuf
 
b
 = {
buf
, buf+
n
-1, 0};

283 i‡(
buf
 =
NULL
 || 
n
 < 1)

284  -
E_INVAL
;

287 
	`v¥ötfmt
((*)
•röçutch
, &
b
, 
fmt
, 
aq
);

288 
	`va_íd
(
aq
);

290 *
b
.
buf
 = '\0';

292  
b
.
˙t
;

293 
	}
}

296 
	$¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, ...)

298 
va_li°
 
≠
;

299 
rc
;

300 
va_li°
 
aq
;

301 
	`va_°¨t
(
≠
, 
fmt
);

302 
	`va_c›y
(
aq
,
≠
);

303 
rc
 = 
	`v¢¥ötf
(
buf
, 
n
, 
fmt
, 
aq
);

304 
	`va_íd
(
aq
);

306  
rc
;

307 
	}
}

	@lib/readline.c

1 
	~<öc/°dio.h
>

2 
	~<öc/îr‹.h
>

4 
	#BUFLEN
 1024

	)

5 
	gbuf
[
BUFLEN
];

8 
	$ªadlöe
(c⁄° *
¥om±
)

10 
i
, 
c
, 
echoög
;

12 i‡(
¥om±
 !
NULL
)

13 
	`˝rötf
("%s", 
¥om±
);

15 
i
 = 0;

16 
echoög
 = 
	`isc⁄s
(0);

18 
c
 = 
	`gëch¨
();

19 i‡(
c
 < 0) {

20 
	`˝rötf
("ªadÉº‹: %e\n", 
c
);

21  
NULL
;

22 } i‡((
c
 ='\b' || c ='\x7f'Ë&& 
i
 > 0) {

23 i‡(
echoög
)

24 
	`˝utch¨
('\b');

25 
i
--;

26 } i‡(
c
 >' ' && 
i
 < 
BUFLEN
-1) {

27 i‡(
echoög
)

28 
	`˝utch¨
(
c
);

29 
buf
[
i
++] = 
c
;

30 } i‡(
c
 == '\n' || c == '\r') {

31 i‡(
echoög
)

32 
	`˝utch¨
('\n');

33 
buf
[
i
] = 0;

34  
buf
;

37 
	}
}

	@lib/string.c

3 
	~<öc/°rög.h
>

9 
	#ASM
 1

	)

12 
	$°æí
(c⁄° *
s
)

14 
n
;

16 
n
 = 0; *
s
 != '\0'; s++)

17 
n
++;

18  
n
;

19 
	}
}

22 
	$°∫Àn
(c⁄° *
s
, 
size_t
 
size
)

24 
n
;

26 
n
 = 0; 
size
 > 0 && *
s
 != '\0'; s++, size--)

27 
n
++;

28  
n
;

29 
	}
}

32 
	$°r˝y
(*
d°
, c⁄° *
§c
)

34 *
ªt
;

36 
ªt
 = 
d°
;

37 (*
d°
++ = *
§c
++) != '\0')

39  
ªt
;

40 
	}
}

43 
	$°rˇt
(*
d°
, c⁄° *
§c
)

45 
Àn
 = 
	`°æí
(
d°
);

46 
	`°r˝y
(
d°
 + 
Àn
, 
§c
);

47  
d°
;

48 
	}
}

51 
	$°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
) {

52 
size_t
 
i
;

53 *
ªt
;

55 
ªt
 = 
d°
;

56 
i
 = 0; i < 
size
; i++) {

57 *
d°
++ = *
§c
;

59 i‡(*
§c
 != '\0')

60 
§c
++;

62  
ªt
;

63 
	}
}

65 
size_t


66 
	$°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
)

68 *
d°_ö
;

70 
d°_ö
 = 
d°
;

71 i‡(
size
 > 0) {

72 --
size
 > 0 && *
§c
 != '\0')

73 *
d°
++ = *
§c
++;

74 *
d°
 = '\0';

76  
d°
 - 
d°_ö
;

77 
	}
}

80 
	$°rcmp
(c⁄° *
p
, c⁄° *
q
)

82 *
p
 && *∞=*
q
)

83 
p
++, 
q
++;

84  (Ë((Ë*
p
 - (Ë*
q
);

85 
	}
}

88 
	$°∫cmp
(c⁄° *
p
, c⁄° *
q
, 
size_t
 
n
)

90 
n
 > 0 && *
p
 && *∞=*
q
)

91 
n
--, 
p
++, 
q
++;

92 i‡(
n
 == 0)

95  (Ë((Ë*
p
 - (Ë*
q
);

96 
	}
}

101 
	$°rchr
(c⁄° *
s
, 
c
)

103 ; *
s
; s++)

104 i‡(*
s
 =
c
)

105  (*Ë
s
;

107 
	}
}

112 
	$°rföd
(c⁄° *
s
, 
c
)

114 ; *
s
; s++)

115 i‡(*
s
 =
c
)

117  (*Ë
s
;

118 
	}
}

120 #i‡
ASM


122 
	$mem£t
(*
v
, 
c
, 
size_t
 
n
)

124 *
p
;

126 i‡(
n
 == 0)

127  
v
;

128 i‡((
öt64_t
)
v
%4 =0 && 
n
%4 == 0) {

129 
c
 &= 0xFF;

130 
c
 = (c<<24)|(c<<16)|(c<<8)|c;

131 
asm
 volatile("cld;Ñep stosl\n"

132 :: "D" (
v
), "a" (
c
), "c" (
n
/4)

135 
asm
 volatile("cld;Ñep stosb\n"

136 :: "D" (
v
), "a" (
c
), "c" (
n
)

138  
v
;

139 
	}
}

142 
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

144 c⁄° *
s
;

145 *
d
;

147 
s
 = 
§c
;

148 
d
 = 
d°
;

149 i‡(
s
 < 
d
 && s + 
n
 > d) {

150 
s
 +
n
;

151 
d
 +
n
;

152 i‡((
öt64_t
)
s
%4 =0 && (öt64_t)
d
%4 =0 && 
n
%4 == 0)

153 
asm
 volatile("std;Ñep movsl\n"

154 :: "D" (
d
-4), "S" (
s
-4), "c" (
n
/4) : "cc", "memory");

156 
asm
 volatile("std;Ñep movsb\n"

157 :: "D" (
d
-1), "S" (
s
-1), "c" (
n
) : "cc", "memory");

159 
asm
 volatile("cld" ::: "cc");

161 i‡((
öt64_t
)
s
%4 =0 && (öt64_t)
d
%4 =0 && 
n
%4 == 0)

162 
asm
 volatile("cld;Ñep movsl\n"

163 :: "D" (
d
), "S" (
s
), "c" (
n
/4) : "cc", "memory");

165 
asm
 volatile("cld;Ñep movsb\n"

166 :: "D" (
d
), "S" (
s
), "c" (
n
) : "cc", "memory");

168  
d°
;

169 
	}
}

174 
	$mem£t
(*
v
, 
c
, 
size_t
 
n
)

176 *
p
;

177 
m
;

179 
p
 = 
v
;

180 
m
 = 
n
;

181 --
m
 >= 0)

182 *
p
++ = 
c
;

184  
v
;

185 
	}
}

188 
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

190 c⁄° *
s
;

191 *
d
;

193 
s
 = 
§c
;

194 
d
 = 
d°
;

195 i‡(
s
 < 
d
 && s + 
n
 > d) {

196 
s
 +
n
;

197 
d
 +
n
;

198 
n
-- > 0)

199 *--
d
 = *--
s
;

201 
n
-- > 0)

202 *
d
++ = *
s
++;

204  
d°
;

205 
	}
}

209 
	$mem˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

211  
	`memmove
(
d°
, 
§c
, 
n
);

212 
	}
}

215 
	$memcmp
(c⁄° *
v1
, c⁄° *
v2
, 
size_t
 
n
)

217 c⁄° 
uöt8_t
 *
s1
 = (c⁄° uöt8_à*Ë
v1
;

218 c⁄° 
uöt8_t
 *
s2
 = (c⁄° uöt8_à*Ë
v2
;

220 
n
-- > 0) {

221 i‡(*
s1
 !*
s2
)

222  (Ë*
s1
 - (Ë*
s2
;

223 
s1
++, 
s2
++;

227 
	}
}

230 
	$memföd
(c⁄° *
s
, 
c
, 
size_t
 
n
)

232 c⁄° *
íds
 = (c⁄° *Ë
s
 + 
n
;

233 ; 
s
 < 
íds
; s++)

234 i‡(*(c⁄° *Ë
s
 =(Ë
c
)

236  (*Ë
s
;

237 
	}
}

240 
	$°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
)

242 
√g
 = 0;

243 
vÆ
 = 0;

246 *
s
 == ' ' || *s == '\t')

247 
s
++;

250 i‡(*
s
 == '+')

251 
s
++;

252 i‡(*
s
 == '-')

253 
s
++, 
√g
 = 1;

256 i‡((
ba£
 =0 || ba£ =16Ë&& (
s
[0] == '0' && s[1] == 'x'))

257 
s
 +2, 
ba£
 = 16;

258 i‡(
ba£
 =0 && 
s
[0] == '0')

259 
s
++, 
ba£
 = 8;

260 i‡(
ba£
 == 0)

261 
ba£
 = 10;

265 
dig
;

267 i‡(*
s
 >= '0' && *s <= '9')

268 
dig
 = *
s
 - '0';

269 i‡(*
s
 >= 'a' && *s <= 'z')

270 
dig
 = *
s
 - 'a' + 10;

271 i‡(*
s
 >= 'A' && *s <= 'Z')

272 
dig
 = *
s
 - 'A' + 10;

275 i‡(
dig
 >
ba£
)

277 
s
++, 
vÆ
 = (vÆ * 
ba£
Ë+ 
dig
;

281 i‡(
íd±r
)

282 *
íd±r
 = (*Ë
s
;

283  (
√g
 ? -
vÆ
 : val);

284 
	}
}

286 * 
	$°r°r
(c⁄° *
ö
, c⁄° *
°r
)

288 
c
;

289 
size_t
 
Àn
;

291 
c
 = *
°r
++;

292 i‡(!
c
)

293  (*Ë
ö
;

295 
Àn
 = 
	`°æí
(
°r
);

297 
sc
;

300 
sc
 = *
ö
++;

301 i‡(!
sc
)

303 } 
sc
 !
c
);

304 } 
	`°∫cmp
(
ö
, 
°r
, 
Àn
) != 0);

306  (*Ë(
ö
 - 1);

307 
	}
}

	@user/sendpage.c

4 
	~<öc/lib.h
>

6 c⁄° *
	g°r1
 = "hello childÉnvironment! howáre you?";

7 c⁄° *
	g°r2
 = "helloÖarentÉnvironment! I'm good.";

9 
	#TEMP_ADDR
 ((*)0xa00000)

	)

10 
	#TEMP_ADDR_CHILD
 ((*)0xb00000)

	)

13 
	$umaö
(
¨gc
, **
¨gv
)

15 
ívid_t
 
who
;

17 i‡((
who
 = 
	`f‹k
()) == 0) {

19 
	`ùc_ªcv
(&
who
, 
TEMP_ADDR_CHILD
, 0);

20 
	`˝rötf
("%x gŸ mesßgê: %s\n", 
who
, 
TEMP_ADDR_CHILD
);

21 i‡(
	`°∫cmp
(
TEMP_ADDR_CHILD
, 
°r1
, 
	`°æí
(str1)) == 0)

22 
	`˝rötf
("childÑeceived correct message\n");

24 
	`mem˝y
(
TEMP_ADDR_CHILD
, 
°r2
, 
	`°æí
(
°r1
) + 1);

25 
	`ùc_£nd
(
who
, 0, 
TEMP_ADDR_CHILD
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

30 
	`sys_∑ge_Æloc
(
thi£nv
->
ív_id
, 
TEMP_ADDR
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

31 
	`mem˝y
(
TEMP_ADDR
, 
°r1
, 
	`°æí
(str1) + 1);

32 
	`ùc_£nd
(
who
, 0, 
TEMP_ADDR
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

34 
	`ùc_ªcv
(&
who
, 
TEMP_ADDR
, 0);

35 
	`˝rötf
("%x gŸ mesßgê: %s\n", 
who
, 
TEMP_ADDR
);

36 i‡(
	`°∫cmp
(
TEMP_ADDR
, 
°r2
, 
	`°æí
(str2)) == 0)

37 
	`˝rötf
("parentÑeceived correct message\n");

39 
	}
}

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
49
788
boot/main.c
ex1.c
inc/assert.h
inc/elf.h
inc/error.h
inc/kbdreg.h
inc/memlayout.h
inc/mmu.h
inc/queue.h
inc/stab.h
inc/stdarg.h
inc/stdio.h
inc/string.h
inc/types.h
inc/x86.h
kern/console.c
kern/console.h
kern/dwarf.h
kern/dwarf_api.h
kern/dwarf_define.h
kern/dwarf_elf.h
kern/dwarf_error.h
kern/dwarf_lineno.h
kern/elf_rw.c
kern/init.c
kern/kdebug.c
kern/kdebug.h
kern/libdwarf_frame.c
kern/libdwarf_lineno.c
kern/libdwarf_rw.c
kern/macro.h
kern/monitor.c
kern/monitor.h
kern/printf.c
lib/printfmt.c
lib/readline.c
lib/string.c
user/sendpage.c
/usr/include/stdio.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/wctype.h
